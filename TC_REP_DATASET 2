prompt Importing table TC_REP_DATASET...
set feedback off
set define off
insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('EF8675683DFC4257BBAD57A95D289EF3', 'A00057', '净申赎超1亿或超基金资产净值10%客户', '/*
1、?同一产品下设多个下属产品/份额类别时，按照产品主代码报送。
2、?赎回只包括投资者主动发起的赎回交易。
3、?公募基金从合同生效日期（含）到最后运作日期（含）之间的每个交易确认日期报送。
资产管理计划从成立日期（含）到计划终止日期（含）之间的每个交易确认日期报送
申购包括：申购、产品转换（产品转换入）、定期定额申购  
赎回包括：赎回、产品转换（产品转换出）、定期定额赎回、强制赎回 
  
  02：申购
  03：赎回
  13：产品转换出
  16：产品转换入
  39：定期定额申购
  95：定期定额赎回
  53：强制赎回

   A00230 1
   
   -- CREATE TABLE
CREATE TABLE TR_DF_TA_TDCON_JSS
(
  FUNDCODE            VARCHAR2(8) NOT NULL,
  TRANSACTIONCFMDATE  VARCHAR2(8) NOT NULL,
  TAACCOUNTID         VARCHAR2(12) NOT NULL,
  FCUSTNAME           VARCHAR2(120),
  FCUSTTYPE           VARCHAR2(2) NOT NULL,
  FINVESTTYPE         VARCHAR2(20) NOT NULL,
  CONFIRMEDVOL_SG     NUMBER(16,2) DEFAULT 0,
  CONFIRMEDAMOUNT_SG  NUMBER(16,2) DEFAULT 0,
  CONFIRMEDVOL_SH     NUMBER(16,2) DEFAULT 0,
  CONFIRMEDAMOUNT_SH  NUMBER(16,2) DEFAULT 0,
  CONFIRMEDVOL_JSS    NUMBER(16,2) DEFAULT 0,
  CONFIRMEDAMOUNT_JSS NUMBER(16,2) DEFAULT 0,
  RAT_JSS             NUMBER(16,2) DEFAULT 0,
  PF_TYPE             VARCHAR2(20),
  FMAPPING            VARCHAR2(200) NOT NULL,
  ETL_TIME            TIMESTAMP(6) NOT NULL
)
TABLESPACE DATA_INDB
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    NEXT 1M
    MINEXTENTS 1
    MAXEXTENTS UNLIMITED
  );
-- ADD COMMENTS TO THE COLUMNS 
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.FUNDCODE
  IS ''产品代码'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.TRANSACTIONCFMDATE
  IS ''业务确认日期'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.TAACCOUNTID
  IS ''投资者基金账户'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.FCUSTNAME
  IS ''投资者名称'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.FCUSTTYPE
  IS ''个人机构标识'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.FINVESTTYPE
  IS ''投资者类型'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.CONFIRMEDVOL_SG
  IS ''确认份数_申购'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.CONFIRMEDAMOUNT_SG
  IS ''确认金额_申购'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.CONFIRMEDVOL_SH
  IS ''确认份数_赎回'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.CONFIRMEDAMOUNT_SH
  IS ''确认金额_赎回'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.CONFIRMEDVOL_JSS
  IS ''确认份数_净申赎'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.CONFIRMEDAMOUNT_JSS
  IS ''确认金额_净申赎'';
COMMENT ON COLUMN TR_DF_TA_TDCON_JSS.RAT_JSS
  IS ''净申赎金额占基金资产净值比例'';

*/
WITH GZWCTS AS (SELECT 
        MAX(A.ATTACHED_VALUE)+1 AS GZWCTS --201910月监管修订版 申请确认天数改为估值完成天数
     FROM TC_PF_BSC_INFO_ATTACHED A
     WHERE A.ATTACHED_CODE=''30034''
     AND ''1060''||A.PF_ID ${PFID}
      )
SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH, --机构编码
       SUBSTR(''${FENDDATE}'', 0, 4) BGND, --报告年度
       ''1'' BGQJ, --报告期间
       ''${FENDDATE}'' QCRQ, --期初日期
       ''${FENDDATE}'' QMRQ, --期末日期
       B.CPDM, --产品代码
       TZZJJZH, --投资者基金账号
       TZZZHMC, --投资者账户名称
       GRJGBZ, --个人机构标识
       TZZLX, --投资者类型
       NVL(SGJE, 0) AS SGJE, --申购金额
       NVL(SGFS, 0) AS SGFS, --申购份额
       NVL(SHJE, 0) AS SHJE, --赎回金额
       NVL(SHFS, 0) AS SHFS, --赎回份额
       NVL(JSSJE, 0) AS JSSJE, --净申赎金额
       NVL(JSSFS, 0) AS JSSFS, --净申赎份额
       --NVL(JSSJEZJJZCJZBL, 0) AS JSSJEZJJZCJZBL, --净申赎金额占基金资产净值比例
        NVL(round(JSSJEZJJZCJZBL,6),0) AS JSSJEZJJZCJZBL, --净申赎金额占基金资产净值比例
   ', '0', null, 'A1020', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('D64DA24199C84E16A7255B729D7669A2', 'A00061', '客户情况', '/*

CREATE TABLE TR_DF_TA_TDCON_ZJZJ
(
  FUNDCODE           VARCHAR2(20),
  BUSINESSCODE       VARCHAR2(2),
  TRANSACTIONCFMDATE VARCHAR2(8),
  CONFIRMEDVOL       NUMBER(18,2),
  CONFIRMEDAMOUNT    NUMBER(18,2)
)

20190701（不含）之前的数据汇总后写入到此表
20190701（含）之后的数据从资金追加提取中获取

*/

WITH V_TR_DF_TA_ACCRECDATA AS
 (SELECT CPDM,
         FUNDCODE,
         JHLX,
         SUM(TZRS) AS CYRS, -- 持有人数
         SUM(CASE
               WHEN GRJGBZ = ''01'' THEN
                TZRS
             END) AS GRTZZRS, --个人投资者人数
         SUM(CASE
               WHEN GRJGBZ = ''02'' THEN
                TZRS
             END) AS JGTZZRS, --机构投资者人数
         SUM(CASE
               WHEN GRJGBZ = ''03'' THEN
                TZRS
             END) AS CPTZZGS, --产品投资者人数
         SUM(CASE
               WHEN CYSZ >= 3000000 THEN
                TZRS
             END) AS DBWT300WYSDTZZRS, --单笔委托300 （含）以上投资者人数
         SUM(CASE
               WHEN CYSZ < 3000000 THEN
                TZRS
             END) DBWT300WYXDTZZRS, --单笔委托300 以下投资者人数
         MAX(CASE
               WHEN JHLX = ''1'' THEN
                GRJGBZ
             END) AS DYTZZGRJGBZ, --单一投资者个人机构标志
         MAX(CASE
               WHEN JHLX = ''1'' THEN
                F_INVESTTYPE
             END) AS DYTZZLX, --单一投资者类型
         MAX(CASE
               WHEN JHLX = ''1'' THEN
                CERTIFICATETYPE
             END) AS DYTZZZJLX, --单一投资者证件类型
         MAX(CASE
               WHEN JHLX = ''1'' THEN
                CERTIFICATENO
             END) AS DYTZZZJHM, --单一投资者证件号码
         MAX(CASE
               WHEN JHLX = ''1'' THEN
                INVESTORNAME
             END) AS DYTZZMC, --单一投资者名称
         SUM(CASE
               WHEN SFNDHRJJ = ''1'' AND F_CUSTTYPE = ''PB1015'' THEN
                TZRS
             END) AS JWCYRS
    FROM (SELECT T6.CPDM,
                 T6.PF_ID AS FUNDCODE, -- 基金代码
                 MAX(DECODE(T2.INDIVIDUALORINSTITUTION,
                            ''1'',
                            ''01'',
                            ''0'',
                            ''02'',
                            ''2'',
                            ''03'')) AS GRJGBZ, --个人机构标志
                 SUM(CASE
                       WHEN T1.FUNDCODE IN (''519898'', ''519899'') THEN
                        T1.TOTVOLOFDISTA * 0.01
                       WHEN T1.FUNDCODE IN (''511910'', ''511690'') THEN
                        T1.TOTVOLOFDISTA * 100
                       ELSE
                        T1.TOTVOLOFDISTA * T3.NAV
                     END) AS CYSZ, -- 持有市值
                 MAX(T2.F_INVESTTYPE) AS F_INVESTTYPE, -- 投资者类型
                 NVL(T7.RISK_CODE, ''0399'') AS CERTIFICATETYPE, -- 投资者证件类型
                 T2.CERTIFICATENO, -- 投资者证件号码
                 T2.INVESTORNAME, -- 投资者名称
                 MAX(T2.F_CUSTTYPE) AS F_CUSTTYPE, -- 人行客户类别
                 T6.SFNDHRJJ, -- 是否内地互认基金
                 T6.JHLX, -- 计划类型
                 1 AS TZRS -- 投资者人数
            FROM (SELECT T1.TAACCOUNTID,
                         T1.PF_TYPE,
               ', '0', null, 'A1025', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('BB99057A421F47AFA6950F9EDC4BA738', 'A00100', '利润表', '--利润表
WITH TT1 AS --报表头部
 (SELECT MAX(KEY_ID) AS JGBH,
         SUBSTR(''${FENDDATE}'', 1, 4) AS BGND,
         ''3'' AS BGQJ,
         SUBSTR(''${FENDDATE}'', 1, 6) || ''01'' AS QCRQ,
         ''${FENDDATE}'' AS QMRQ
    FROM TP_GL_EXHIB_DATADICT
   WHERE CLASS_NAME = ''报送机构编号''),
TT2 AS
 (SELECT PF_ID, CPDM, XH, LINE_ID, LINE_NAME1
    FROM (SELECT PF_ID, NVL(CPDM, TA_PF_ID) AS CPDM
            FROM V_PF_CPDM
           WHERE PF_ID IS NOT NULL
             AND CHG_DATE <= ''${FENDDATE}''
             AND END_DATE > ''${FENDDATE}'') T1,
         (SELECT ID AS XH, LINE_ID, LINE_NAME1
            FROM TP_GL_PB_HEAD
           WHERE REP_ID = ''PB17'') T2),
TT3 AS --组合与 资产负债表配置的报表名
 (SELECT T1.PF_ID, T3.KEY_NAME AS C_REPORT_CODE
    FROM TP_GL_FUNDCODE_MAP T1
    LEFT JOIN TC_PF_BSC_INFO_ATTACHED T2
      ON T1.TA_PF_ID = T2.PF_ID
     AND T2.ATTACHED_CODE = ''BDCWBB_LRB''
    LEFT JOIN TP_GL_EXHIB_DATADICT T3
      ON T3.KEY_ID = NVL(T2.ATTACHED_VALUE, ''LRB1'')
   WHERE T1.PF_ID IS NOT NULL
     AND T1.SRC_SYS <> ''TA'')

SELECT T1.JGBH,
       T1.BGND,
       T1.BGQJ,
       T1.QCRQ,
       T1.QMRQ,
       T2.CPDM,
       T2.LINE_ID XMBH,
       --T2.LINE_NAME1 LINE_NAME1,
       --1001,1002小计项，需要重新根据子项汇
       NVL(CASE
             WHEN T2.LINE_ID IN (''1001'',''1002'') THEN
              SUM(CASE
                    WHEN LENGTH(T2.LINE_ID) = 4 THEN
                     0
                    ELSE
                     T3.SQJE
                  END) OVER(PARTITION BY T2.PF_ID, SUBSTR(T2.LINE_ID, 1, 4))           
             WHEN T2.LINE_ID = ''5000'' THEN
              SUM(CASE
                    WHEN T2.LINE_ID = ''3000'' THEN
                     SQJE
                    ELSE
                     0
                  END) OVER(PARTITION BY T2.PF_ID)
             ELSE
              SQJE
           END,
           0) AS SQJE,
       NVL(CASE
             WHEN T2.LINE_ID IN (''1001'',''1002'') THEN
              SUM(CASE
                    WHEN LENGTH(T2.LINE_ID) = 4 THEN
                     0
                    ELSE
                     T3.BQJE
                  END) OVER(PARTITION BY T2.PF_ID, SUBSTR(T2.LINE_ID, 1, 4))
             WHEN T2.LINE_ID = ''5000'' THEN
              SUM(CASE
                    WHEN T2.LINE_ID = ''3000'' THEN
                     BQJE
                    ELSE
                     0
                  END) OVER(PARTITION BY T2.PF_ID)
             ELSE
              BQJE
           END,
           0) AS BQJE,
       NVL(CASE
             WHEN T2.LINE_ID IN (''1001'',''1002'') THEN
              SUM(CASE
                    WHEN LENGTH(T2.LINE_ID) = 4 THEN
                     0
                    ELSE
                     T3.BNLJJE
                  END) OVER(PARTITION BY T2.PF_ID, SUBSTR(T2.LINE_ID, 1, 4))
             WHEN T2.LINE_ID = ''5000'' THEN
              SUM(CASE
                    WHEN T2.LINE_ID = ''3000'' THEN
                     BNLJJE
                    ELSE
                     0
                  END) OVER(PARTITION BY T2.PF_ID)
             ', '0', null, 'A3015', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('DE7748F7CF92424AA2CCF32A5B19F996', 'A00080', '其他资管产品投资明细', '
---其他资管产品投资明细

SELECT FU_Get_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR( ''${FENDDATE}'' , 0, 4) AS BGND,
       ''1'' AS BGQJ,
        ''${FENDDATE}''  as QCRQ,
        ''${FENDDATE}''  as QMRQ,
       NVL(P.CPDM,'''') AS CPDM,
       NVL(ZGCPDM,'''') AS ZGCPDM ,
       NVL(ZGCPMC,'''') AS ZGCPMC,
       NVL(SUM(MRSL),0) AS MRSL,
       NVL(SUM(MRJE),0) AS MRJE,
       NVL(SUM(MCSL),0) AS MCSL,
       NVL(SUM(MCJE),0) AS MCJE,
       NVL(SUM(QMSL),0) AS QMSL,
       NVL(SUM(QMCB),0) AS QMCB,
       NVL(SUM(QMSZ),0) AS QMSZ,
       NVL(ZGCPLB,'''') AS ZGCPLB,
       NVL(SMJJLB,'''') AS SMJJLB,
       NVL(ZGCPGLRDM,'''') AS ZGCPGLRDM,
       NVL(ZGCPGLRMC,'''') AS ZGCPGLRMC,
       '''' AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT A.PF_ID,
               A.SYMBOL_CODE AS ZGCPDM,
               A.SEC_CODE_NAME AS ZGCPMC,
               MARKET_CODE,
               CASE
                 WHEN C_DT_CODE IN (''JJJY_BUY'', ''JJJY_RG'', ''JJJY_SG'') THEN
                  N_TD_AMOUNT
               END AS MRSL,
               CASE
                 WHEN C_DT_CODE IN (''JJJY_BUY'', ''JJJY_RG'', ''JJJY_SG'') THEN
                  N_TD_MONEY
               END AS MRJE,
               CASE
                 WHEN C_DT_CODE IN (''JJJY_DF'', ''JJJY_SELL'', ''JJJY_HBFX'') THEN
                  N_TD_AMOUNT
               END AS MCSL,
               CASE
                 WHEN C_DT_CODE IN (''JJJY_DF'', ''JJJY_SELL'', ''JJJY_HBFX'') THEN
                  N_TD_MONEY
               END AS MCJE,
               ATTYPE_QTY AS QMSL,
               ATTYPE_COST_SC AS QMCB,
               ATTYPE_AMOUNT_SC AS QMSZ
          FROM TC_HP_PB_DOM_INFO A
          LEFT JOIN TC_TD_PB_DOM_INFO B
            ON A.PF_ID = B.PF_ID
           AND A.BIZ_DATE = B.BIZ_DATE
           AND A.SYMBOL_CODE = B.c_sec_code
           AND A.C_SEC_VAR_CODE = B.C_SEC_VAR_CODE
         WHERE C_DV_KM_CLS = ''KC_ZC''
           AND A.C_DAI_CODE LIKE ''ZQTZ%''
           AND A.C_SEC_VAR_CODE LIKE ''XX%''
           AND A.PF_ID ${PFID}
           AND A.BIZ_DATE =  ''${FENDDATE}'' ) A
  LEFT JOIN (/*SELECT C_SECMKT_CODE,
                    C_MKT_CODE,
                    C_SEC_TYPE    AS ZGCPLB,
                    C_SEC_SI_TYPE AS SMJJLB,
                    C_SEC_GLRDM   AS ZGCPGLRDM,
                    C_SEC_GLRMC   AS ZGCPGLRMC
               FROM TC_SE_PB_DOM_INFO where  C_ZCPZLX = ''NS_QTZGCP''
   AND C_KSRQ <= ''${FENDDATE}''
   AND C_JSRQ >= ''${FENDDATE}''
              GROUP BY C_SECMKT_CODE,
                       C_MKT_CODE,
                       C_SEC_TYPE,
                       C_SEC_SI_TYPE,
                       C_SEC_GLRDM,
                       C_SEC_GLRMC*/
                   SELECT 
                    '''' as C_SECMKT_CODE,
                    '''' as  C_MKT_CODE,
                    '''' as  ZGCPLB,
                    '''' as  SMJJLB,
                    '''' as  ZGCPGLRDM,
                    '''' as  ZGCPGLRMC
               FROM  dual  
                       )
    ON C_SECMKT_CODE = ZGCPDM
   AND MARKET_CODE = C_MKT_CODE
   left join V_PF', '0', null, 'A1044', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('079B22A9EFE146FDA47119BC12FA0D41', 'A00060', '前200大投资者', '
/*
1、?同一产品下设多个下属产品/份额类别时，按照产品主代码报送。
2、?具有相同证件类型、证件号码、姓名（名称）的视为同一投资者。
3、?同一投资者通过多个基金账户持有同一产品份额时合并计算。
4、?公募基金从合同生效日期（含）到最后运作日期（含）之间的每个交易确认日期报送。
资产管理计划从成立日期（含）到计划终止日期（含）之间的每个交易确认日期报送。

*/
SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH, --机构编码
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND, --报告年度
       ''1'' AS BGQJ, --报告期间
       ''${FENDDATE}'' AS QCRQ, --期初日期
       ''${FENDDATE}'' AS QMRQ, --期末日期
       CPDM, --产品代码
       XH, --序号
       INVESTORNAME AS TZZZHMC, --投资者账户名称
       TZZZJLX, --证件类型
       CERTIFICATENO AS TZZZJHM, --证件号码
       GRJGBZ, --个人机构标志
       F_INVESTTYPE AS TZZLX, --投资者类型
       NVL(CYFS, 0) AS CYFS, --持有份额
       NVL(ROUND(CYSZ,8), 0) AS CYSZ, --持有市值
       '''' BZ --备注
       ,''1060000001'' AS PF_ID
  FROM (SELECT T6.CPDM, -- 基金代码
               T2.INVESTORNAME, -- 投资者账户名称
               NVL(T7.RISK_CODE, ''0399'') AS TZZZJLX, -- 投资者证件类型
               T2.CERTIFICATENO, -- 投资者证件号码
               DECODE(T2.INDIVIDUALORINSTITUTION,
                      ''1'',
                      ''01'',
                      ''0'',
                      ''02'',
                      ''2'',
                      ''03'') AS GRJGBZ, --个人机构标志
               MIN(T2.F_INVESTTYPE) AS F_INVESTTYPE, -- 投资者类型
               SUM(CASE
                     WHEN T1.FUNDCODE IN (''511910'', ''511690'') THEN
                      T1.TOTVOLOFDISTA * 100
                     ELSE
                      T1.TOTVOLOFDISTA
                   END) AS CYFS, -- 持有份额
               SUM(CASE
                     WHEN T1.FUNDCODE IN (''519898'') THEN
                      T1.TOTVOLOFDISTA * 0.01
                     ELSE
                      T1.TOTVOLOFDISTA * T3.NAV
                   END) AS CYSZ, -- 持有市值
               RANK() OVER(PARTITION BY T6.CPDM ORDER BY SUM(CASE
                 WHEN T1.FUNDCODE IN
                      (''519898'') THEN
                  T1.TOTVOLOFDISTA * 0.01
                 ELSE
                  T1.TOTVOLOFDISTA *
                  T3.NAV
               END) DESC) AS XH
          FROM (SELECT T1.TAACCOUNTID,
                       T1.PF_TYPE,
                       T1.FUNDCODE,
                       SUM(T1.TOTVOLOFDISTA) AS TOTVOLOFDISTA
                --  FROM TR_DF_TA_ACCRECDATA T1
                FROM TR_DF_TA_ACCRECDATA partition (PART_${FENDDATE}) T1
                 WHERE -- T1.TRANSACTIONCFMDATE = ''${FENDDATE}'' AND
                    T1.TOTVOLOFDISTA > 0
                 GROUP BY T1.TAACCOUNTID, T1.PF_TYPE, T1.FUNDCODE) T1 -- 份额数据
         INNER JOIN TC_PF_PB_TA_ACCOUNT T2 -- 账户数据
            ON T1.TAACCOUNTID = T2.TAACCOUNTID
           AND T1.PF_TYPE = T2.PF_TYPE
         INNER JOIN TR_DF_TA_DYINFOLITEM T3 -- 行情数据
            ON T3.TRANSACTIONCFMDATE = ''${FENDDATE}''
           AND T1.FUNDCODE = T3.FUNDCODE
           AND T3.PF_TYPE = ''YSS_45''
         INNER JOIN TP_GL_FUNDCODE_MAP T4
            ON T1.FUNDCODE = T4.TA_PF_ID
           AND T4.SRC_SYS = ''TA''
         INNER JOIN TC_PF_BSC_INFO T5
            ON T4.FIN_PF_ID = T5.PF_ID
         INNER JOIN V_PF', '0', null, 'A1023', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('0F3064B2334A4E0A95C9699E8BBCEEC9', 'A00050', '下属产品运行信息', '/*-- CREATE TABLE
CREATE TABLE TC_PF_SHARECONV_INFO
(
  ID             VARCHAR2(50) NOT NULL,
  PF_ID          VARCHAR2(32) NOT NULL,
  PF_TYPE        VARCHAR2(8),
  SHARECONV_DATE VARCHAR2(8) NOT NULL,
  SHARECONV_TYPE VARCHAR2(8) NOT NULL,
  CREATE_PRSN    VARCHAR2(20),
  CREATE_TIME    DATE,
  MDFY_PRSON     VARCHAR2(20),
  MDFY_TIME      DATE
)
TABLESPACE DATA_INDB
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    NEXT 1M
    MINEXTENTS 1
    MAXEXTENTS UNLIMITED
  );
-- ADD COMMENTS TO THE COLUMNS 
COMMENT ON COLUMN TC_PF_SHARECONV_INFO.ID
  IS ''ID'';
COMMENT ON COLUMN TC_PF_SHARECONV_INFO.PF_ID
  IS ''产品代码'';
COMMENT ON COLUMN TC_PF_SHARECONV_INFO.PF_TYPE
  IS ''产品类型'';
COMMENT ON COLUMN TC_PF_SHARECONV_INFO.SHARECONV_DATE
  IS ''份额折算日期'';
COMMENT ON COLUMN TC_PF_SHARECONV_INFO.SHARECONV_TYPE
  IS ''份额折算类型'';
COMMENT ON COLUMN TC_PF_SHARECONV_INFO.CREATE_PRSN
  IS ''创建人'';
COMMENT ON COLUMN TC_PF_SHARECONV_INFO.CREATE_TIME
  IS ''创建时间'';
COMMENT ON COLUMN TC_PF_SHARECONV_INFO.MDFY_PRSON
  IS ''修改人'';
COMMENT ON COLUMN TC_PF_SHARECONV_INFO.MDFY_TIME
  IS ''修改时间'';
  
  
  
  
1、同一产品下设多个下属产品/份额类别时，按照产品主代码报送。
2、产品募集期间交易状态为“可认购”，产品成立后，在开放申赎之前，交易状态为“停止认购”。
3、涉及转型的产品按照转型后的信息填写合同生效日期、合同到期日期等信息。
4、已清算规模是指产品在当期清算分配的规模。若产品一次清算完毕，则已清算规模=产品清算终止日的资产净值，产品资产净值为0；若产品需二次清算，已清算规模=产品清算终止日的资产净值-产品资产净值（期末报送时点）。对于单一资产管理计划，已清算规模按照最后一个估值日资产净值填写。
5、费用总和：从产品资产中支付的所有费用，其中托管费、销售服务费、管理费、业绩报酬采用计提口径。
6、LOF、ETF、保证金理财货币基金和分级基金等需要填写场内总份数。
7、ETF基金、保证金理财货币基金和分级基金需填写份额折算日期，其中分级基金填写最近一次份额折算日期。
8、前款中的保证金理财货币基金指T日赎回，T日当天即可将此资金用于股票投资的场内T+0货币基金。
9、公募基金从合同生效日期（含）到最后运作日期（含）之间的每个交易日报送。
资产管理计划从成立日期（含）到计划终止日期（含）之间的每个交易日报送。

交易状态    
1-可认购
2-停止认购
3-可申购赎回
4-可申购不可赎回
5-不可申购可赎回
6-停止申购赎回

*/


-- 产品级信息
WITH V_DATA_FUNDCODE AS (
SELECT T1.PF_ID AS FUNDCODE, -- 产品主代码
       T2.CPDM, -- 备案代码
       T01.PF_ID, -- 产品代码
       CASE
         WHEN T1.PF_END_DATE_PRE <= ''${FENDDATE}'' THEN
          ''1''
         ELSE
          ''0''
       END AS HTSFYZZ, --合同是否已终止
       ''0'' AS CPSFZTYZ, --产品是否暂停运作
       CASE
         WHEN T2.CPLX = ''1'' THEN
          T1.PF_REAL_END_DATE
         ELSE
          T1.PF_END_DATE_PRE
       END AS HTZZRQ, --合同终止日期
       CASE
         WHEN T2.CPLX = ''1'' AND T01.IS_BE_LISTED = ''1'' THEN
          T01.LISTEDDATE
         ELSE
          NULL
       END AS SSRQ, --上市日期
       T2.CPLX -- 产品类型
       ,T3.PF_ID AS PFID
  FROM TC_PF_BSC_INFO T1
 INNER JOIN TC_PF_GRADEDFUND_INFO T01 
    ON T1.PF_ID = T01.PF_M_ID
 INNER JOIN V_PF_BSC_INFO_ATTACHED T2
    ON T1.PF_ID = T2.PF_ID
 INNER JOIN TP_GL_FUNDCODE_MAP T3
    ON T1.PF_ID = T3.FIN_PF_ID
   AND T01.PF_ID = T3.TA_PF_ID
   AND T3.SRC_SYS = ''TA''
 WHERE T3.PF_ID ${PFID}
   AND T1.PF_SETUP_DATE <= ''${FENDDATE}''
   AND T1.PF_REAL_END_DATE >= ''${FENDDATE}''
),

-- 交易状态及清算规模
V_DATA_FUNDSTATUS AS
(
SELECT T4.FUNDCODE,
       CASE 
             WHEN T4.FUNDSTATUS IN (''0'') THEN ''1'' -- 可认购
             WHEN T4.FUNDSTATUS IN (''1'',''7'') THEN ''3'' -- 可申购赎回
             WHEN T4.FUNDSTATUS IN (''3'') THEN ''4'' -- 可申购不可赎回
             WHEN T4.FU', '0', null, 'A1011', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('FB0FE0C0691649148F89C09FD295DAF3', 'A00052', '产品收益分配信息', '-- 从估值系统获取收益分配信息
SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,
       SUBSTR(''${FENDDATE}'', 1, 4) BGND,
       ''1'' BGQJ,
       ''${FENDDATE}'' QCRQ,
       ''${FENDDATE}'' QMRQ,
       T3.CPDM AS CPZDM,
       NVL(TRIM(T1.FZJJDM), T3.CPDM) AS CPDM,
       T1.BIZ_DATE AS FPRQ,
       CASE
         WHEN T3.YXFS IN (''PB2001'', ''PB2003'') THEN
          T1.BIZ_DATE
         ELSE
          NULL
       END AS QYDJRQ,
       T1.BEN_SHARE AS FPJS,
       CASE
         WHEN T3.YXFS IN (''PB2001'', ''PB2003'') THEN
          NULL
         ELSE
          ''0''
       END AS YFPBJ,
       T1.EQU_MONEY AS YFPSY,
       CASE
         WHEN T3.YXFS IN (''PB2001'', ''PB2003'') THEN
          NULL
         ELSE
          ''0''
       END AS SJFPBJ,
       T1.EQU_MONEY AS SJFPSY,
       T1.BIZ_DATE AS SJFPRQ,
       CASE
         WHEN T3.YXFS IN (''PB2001'', ''PB2003'') THEN
          ROUND(T1.UNIT_AT, 4)
         ELSE
          NULL
       END AS DWCPFPSY,
       CASE
         WHEN T3.YXFS IN (''PB2001'', ''PB2003'') THEN
          T1.EQU_MONEY - T1.ZT_MONEY
         ELSE
          NULL
       END AS XJFPJE,
       CASE
         WHEN T3.YXFS IN (''PB2001'', ''PB2003'') THEN
          T1.ZT_MONEY
         ELSE
          NULL
       END AS ZTZJE,
       CASE
         WHEN T3.YXFS IN (''PB2001'', ''PB2003'') THEN
          NULL
         ELSE
          ''0''
       END AS SFFSYQDF,
       '''' AS YQDFBJ,
       '''' AS YQFPSY,
       '''' AS YQDFQKMS,
       '''' AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT PF_ID, FZJJDM, BIZ_DATE
          FROM TC_AE_PB_DOM_INFO T1
         WHERE T1.BIZ_DATE = FU_GET_CPYWDATE(''2'',''${FENDDATE}'')
           AND T1.SET_TYPE = ''1''
        UNION ALL
        SELECT PF_ID, FZJJDM, BIZ_DATE
          FROM TC_AE_PB_DOM_INFO T1
         WHERE T1.BIZ_DATE = FU_GET_CPYWDATE(''2'',''${FENDDATE}'')
           AND T1.SET_TYPE = ''0''
           AND NOT EXISTS (SELECT 1
                  FROM TC_AE_PB_DOM_INFO T2
                 WHERE T1.PF_ID = T2.PF_ID
                   AND T2.BIZ_DATE = T1.BIZ_DATE
                   AND T2.SET_TYPE = ''1'')) T0
 INNER JOIN TC_AE_PB_DOM_INFO T1
    ON T0.PF_ID = T1.PF_ID
   AND T0.FZJJDM = T1.FZJJDM
   AND T0.BIZ_DATE = T1.BIZ_DATE
 INNER JOIN (SELECT *
               FROM TP_GL_FUNDCODE_MAP
              WHERE SRC_SYS <> ''TA''
                AND CHG_DATE <= ''${FENDDATE}''
                AND END_DATE > ''${FENDDATE}'') T2
    ON T1.PF_ID = T2.PF_ID
  LEFT JOIN V_PF_BSC_INFO_ATTACHED T3
    ON T2.TA_PF_ID = T3.PF_ID
 WHERE T1.BIZ_DATE = FU_GET_CPYWDATE(''2'',''${FENDDATE}'')
   AND T1.QY_TYPE = ''AE_FH''
   AND T1.BEN_SHARE > 0 
   AND T1.EQU_MONEY > 0
 ORDER BY T3.CPDM, T1.FZJJDM, T1.BIZ_DATE
                                       ', '0', null, 'A1013', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('5B424BB02455477A93A4550B6AB4BCD0', 'A00021', '表2-1资管产品资产负债情况', '--表2-1取数完整SQL 
--【组合信息】
WITH TT_PF AS
 (SELECT *
    FROM (SELECT A.PF_ID,
                 MAX(DECODE(B.ATTACHED_CODE, ''PB0011'', B.ATTACHED_VALUE)) AS PB0011, --区分公募、专户
                 MAX(DECODE(B.ATTACHED_CODE, ''PB1001'', B.ATTACHED_VALUE)) AS PB1001, --区分成本估值、市值估值
                 MAX(DECODE(B.ATTACHED_CODE, ''PB0027'', B.ATTACHED_VALUE)) AS PB0027 --区分是否QD产品
          -- DECODE(C.ATTACHED_VALUE,''PB0027002'',''是'',''PB0027001'',''否'') AS IS_QDII --新增是否投资境外字段(PB0027002 是，PB0027001 否）
          -- CASE WHEN C.ATTACHED_VALUE=''PB0027002'' THEN FU_GET_TOYWDATE(1,''${FENDDATE}'') ELSE ''${FENDDATE}'' END AS BIZ_DATE --新增QDII取下一工作日为业务日期
            FROM TP_GL_FUNDCODE_MAP A, TC_PF_BSC_INFO_ATTACHED B
          --LEFT JOIN (SELECT * FROM TC_PF_BSC_INFO_ATTACHED WHERE ATTCHED_VALUE IN (''PB0027002'',''PB0027001'')) C ON A.TA_PF_ID=C.PF_ID
           WHERE A.FIN_PF_ID = B.PF_ID
             AND B.ATTACHED_CODE IN (''PB0011'', ''PB1001'', ''PB0027'')
             AND A.SRC_SYS = ''45''
             AND A.IS_VALID = 1
             AND (A.CHG_DATE <= ''${FENDDATE}'' AND A.END_DATE > ''${FENDDATE}'')
           GROUP BY A.PF_ID) T
   WHERE PB0011 = ''${FUNDTYPE}'' --需替换变量
  )

--【资产负债明细部分】
, TT_ZCFZMX AS 
 (SELECT ATTYPE_EXT_ID,
       SUM(RMB_AMOUNT_OC) AS RMB_AMOUNT_OC, --人民币
       SUM(USD_AMOUNT_OC) AS USD_AMOUNT_OC, --美元，
       SUM(EUR_AMOUNT_OC) AS EUR_AMOUNT_OC, --欧元，
       SUM(GBP_AMOUNT_OC) AS GBP_AMOUNT_OC, --英镑，
       SUM(JPY_AMOUNT_OC) AS JPY_AMOUNT_OC, --日元，
       SUM(OTH_AMOUNT_OC) AS OTH_AMOUNT_OC, --其他，如转人民币需乘汇率
       SUM(TOTAL_AMOUNT_OC) AS TOTAL_AMOUNT_OC--合计
  FROM
       (
       SELECT A.PF_ID,
                 CASE  
                   -- 回购和拆借  ->  其中：中央交易对手方
                   WHEN ATTYPE_EXT_ID=  ''PB010502000000'' THEN ''PB010502060100''
                   WHEN ATTYPE_EXT_ID=  ''PB020101020000'' THEN ''PB020101020601''
                   -- 优先级 ->  住户
                   WHEN ATTYPE_EXT_ID = ''PB020201010000'' THEN ''PB020201010100''
                   -- 劣后级 ->  住户
                   WHEN ATTYPE_EXT_ID = ''PB020201020000'' THEN ''PB020201020100''
                   --融通专户：基金、债券、ABS 数量为1的 转入到  金融衍生品境外 
                   WHEN T.PB0011=''PB'' || ''11004'' AND PA_CODE LIKE ''ZQTZ%'' AND SUBSTR(SUBJ_ATTR,1,2) IN (''JJ'',''LC'',''ZQ'') AND ATTYPE_QTY = 1 THEN ''PB010802000000'' 
                   --融通专户：金融衍生产 划到了 应收账款
                  -- WHEN T.PB0011=''PB'' || ''11004'' AND ATTYPE_EXT_ID = ''PB010801000000'' THEN ''PB010900000000''
                   ELSE ATTYPE_EXT_ID
                 END AS ATTYPE_EXT_ID, --资产划分
                 --NVL(B.NODE_NAME, ATTYPE_EXT_ID_NAME) AS ATTYPE_EXT_ID_NAME,
                 CASE WHEN A.CUR_D = ''CNY'' THEN DECODE(PB1001, ''PB100101'', A.ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) END AS RMB_AMOUNT_OC, --人民币
                 CASE WHEN A.CUR_D = ''USD'' THEN DECODE(PB1001, ''PB100101'', A.ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) END AS USD_AMOUNT_OC, --美元，
                 CASE WHEN A.CUR_D = ''EUR'' THEN DECODE(PB1001, ''PB100101'', A.ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) END AS EUR_AMOUNT', '1', 0, 'A07', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('DAA86656FB314C66962296683A400CF1', 'A00025', '表2-5  企业债券分行业、企业规模情况', '--表2-5大中小微完整取数SQL
WITH TT_PF AS
 (SELECT A.PF_ID,
         MAX(DECODE(B.ATTACHED_CODE, ''PB0011'', B.ATTACHED_VALUE)) AS PB0011, --区分公募、专户
         MAX(DECODE(B.ATTACHED_CODE, ''PB1001'', B.ATTACHED_VALUE)) AS PB1001 --区分成本估值、市值估值
    FROM TP_GL_FUNDCODE_MAP A, TC_PF_BSC_INFO_ATTACHED B
   WHERE A.FIN_PF_ID = B.PF_ID
     AND B.ATTACHED_CODE IN (''PB0011'', ''PB1001'')
     AND A.SRC_SYS = ''45''
     AND IS_VALID = 1
        -- AND A.CHG_DATE <=''${FENDDATE}''  AND A.END_DATE >''${FENDDATE}''
     AND (A.CHG_DATE <= ''${FENDDATE}'' AND A.END_DATE > ''${FENDDATE}'')
   GROUP BY A.PF_ID)
                             
SELECT A.LINE_ID,
       A.LINE_NAME1,
       BIG_COMPANY,
       MIDDLE_COMPANY,
       SMALL_COMPANY,
       TINY_COMPANY,
       TOTAL
  FROM TP_GL_PB_HEAD A
  LEFT JOIN (SELECT DECODE(GROUPING(CP_HY), 1, ''企业债券余额总计'', CP_HY) AS CP_HY,
                    SUM(BIG_COMPANY) AS BIG_COMPANY, --"大型企业",
                    SUM(MIDDLE_COMPANY) AS MIDDLE_COMPANY, --"中型企业",
                    SUM(SMALL_COMPANY) AS SMALL_COMPANY, --"小型企业",
                    SUM(TINY_COMPANY) AS TINY_COMPANY, --"微型企业",
                    SUM(TOTAL) AS TOTAL
               FROM (SELECT
                     --A.PF_ID,A.SEC_CODE,A.SUBJ_ID,A.SUBJ_NAME,A.SUBJ_ATTR,
                      DECODE(NVL(B.CP_HY, ''综合''), ''综合'', ''公共管理、社会保障和社会组织'', B.CP_HY) AS CP_HY,
                      CASE WHEN NVL(B.CP_GM, ''大型企业'') = ''大型企业'' THEN DECODE(PB1001, ''PB100101'', ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) / 10000 END AS BIG_COMPANY, --"大型企业",
                      CASE WHEN NVL(B.CP_GM, ''大型企业'') = ''中型企业'' THEN DECODE(PB1001, ''PB100101'', ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) / 10000 END AS MIDDLE_COMPANY, --"中型企业",
                      CASE WHEN NVL(B.CP_GM, ''大型企业'') = ''小型企业'' THEN DECODE(PB1001, ''PB100101'', ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) / 10000 END AS SMALL_COMPANY, --"小型企业",
                      CASE WHEN NVL(B.CP_GM, ''大型企业'') = ''微型企业'' THEN DECODE(PB1001, ''PB100101'', ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) / 10000 END AS TINY_COMPANY, --"微型企业",
                      DECODE(PB1001, ''PB100101'', ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) / 10000 AS TOTAL --"合计"
                       FROM TC_PF_PB_SEC_INFO A
                       JOIN TT_PF T
                         ON A.PF_ID = T.PF_ID
                       LEFT JOIN (SELECT A.ZQDM || '' '' || A.SSSC AS SYMBOL_CODE,
                                        A.CP_HY,
                                        A.CP_GM
                                   FROM TC_MK_ZQINFO_KH A
                                  WHERE A.REPORT_NAME = ''企业债券'') B
                         ON A.SYMBOL_CODE = B.SYMBOL_CODE
                      WHERE A.ATTYPE_EXT_ID_NAME = ''企业债券''
                        AND T.PB0011 = ''${FUNDTYPE}''
                        AND A.BIZ_DATE = ''${FENDDATE}'') T1             
              GROUP BY ROLLUP(CP_HY)) B
    ON TRIM(A.LINE_NAME1) = TRIM(B.CP_HY)
 WHERE A.REP_ID = ''PB11''
 ORDER BY A.LINE_ID                                                                      ', '1', 0, 'A11', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('F54240FE3564429DAA5A22AA4A390F1D', 'A00076', '商品期货投资明细', '
--商品期货投资明细

SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(P.CPDM, '''') AS CPDM,
       NVL(CASE
             WHEN C_MKT_CODE = ''XSHE'' THEN
              ''0103''
             WHEN C_MKT_CODE = ''XSHG'' THEN
              ''102''
             WHEN C_MKT_CODE IN (''COTC'', ''XCFE'') THEN
              ''101''
             ELSE
              ''199''
           END,
           '''') AS JYCSDM,
       NVL(CASE
             WHEN INSTR(C_SEC_CODE, '' '') > 0 THEN
              SUBSTR(C_SEC_CODE, 1, INSTR(C_SEC_CODE, '' '') - 1)
             ELSE
              C_SEC_CODE
           END,
           '''') AS HYDM,
       NVL(SEC_CODE_NAME, '''') AS HYMC,
       NVL(CASE
             WHEN C_TD_TYPE IN (''QHJY_KC'') THEN
              1
             WHEN C_TD_TYPE IN (''QHJY_JG'', ''QHJY_PC'') THEN
              2
			 WHEN C_TD_ATTR LIKE ''%BUY'' THEN 
              1
             WHEN C_TD_ATTR LIKE ''%SELL'' THEN
			  2
           END,
           '''') AS MMFX,
       NVL(CASE
             WHEN C_TD_ATTR LIKE ''TB%'' THEN
              1
             WHEN C_TD_ATTR LIKE ''TJ%'' THEN
              2
           END,
           '''') AS JYMD,
       NVL(N_OPEN_TD_AMOUNT, 0) AS KCSL,
       NVL(N_OPEN_TD_MONEY, 0) AS KCHYJZ,
       NVL(N_OPEN_TD_AMOUNT * N_RATIO, 0) AS KCBZJ,
       NVL(N_CLOSE_TD_AMOUNT, 0) AS PCSL,
       NVL(N_CLOSE_TD_MONEY, 0) AS PCHYJZ,
       NVL(NVL(N_PORT_DRSY, N_ORIG_DRSY), 0) AS DQYK,
       NVL(N_STOCK_AMOUNT, 0) AS QMSL,
       NVL(NVL(N_STOCK_PORT_COST, N_STOCK_ORIG_COST), 0) AS QMHYJZ,
       NVL(N_STOCK_AMOUNT * N_RATIO, 0) AS QMBZJ,
       NVL(C_SEC_CODE, '''') AS JYDM,
       NVL(C_SEC_CODE_I, '''') AS JYPZ,
       NVL(N_FV_ISSUE, '''') AS JYDW,
       '''' AS BZ
       ,''1060000001'' AS PF_ID
  FROM TC_QH_PB_DOM_INFO A
  LEFT JOIN V_PF_CPDM P
    ON A.PF_ID = P.PF_ID
WHERE A.PF_ID ${PFID}
   AND A.BIZ_DATE = ''${FENDDATE}''
   AND A.C_SEC_VAR_CODE = ''QH''
   AND A.C_SEC_VAR_CODE_SUB IN (''QH_SP'')
   AND (A.N_CLOSE_TD_AMOUNT <> 0 OR A.N_OPEN_TD_AMOUNT <> 0 OR
       A.N_STOCK_AMOUNT <> 0)              ', '0', null, 'A1040', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('0EFD456582A64F7CAC86E3EA4CE9E872', 'A00081', '未挂牌资产支持证券投资明细', '
--未挂牌资产支持证券投资明细

SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(T6.CPDM, '''') AS CPDM,
       NVL(T1.ZQDM, '''') AS ZQDM,
       NVL(T1.ZQMC, '''') AS ZQMC,
       NVL(T1.QMSL, 0) AS QMSL,
       NVL(T1.QMCB, 0) AS QMCB,
       NVL(T1.QMSZ, 0) AS QMSZ,
       NVL(T3.ZCZCZQLB, ''1'') AS ZCZCZQLB,
       NVL(T3.FXRDM, '''') AS GLRDM,
       NVL(T3.FXRMC, '''') AS GLRMC,
       NVL(T3.YSQYRDM, '''') AS YSQYRDM,
       NVL(T3.YSQYRMC, '''') AS YSQYRMC,
       NVL(T5.PJNR, ''无评级'') AS ZTPJ,
       NVL(T4.PJNR, ''无评级'') AS ZXPJ,
       NVL(T3.FXRQ, T7.D_LISTED_DATE) AS FXRQ,
       --CASE WHEN ''${FENDDATE}''<NVL(T3.FXRQ, T7.D_LISTED_DATE) THEN NULL ELSE NVL(T3.FXRQ, T7.D_LISTED_DATE) END AS FXRQ,
       --NULL AS FXRQ,
       NVL(T3.ZQDQRQ, T7.D_OM_DATE) AS DQRQ,
       NVL(T3.ZQFXFS, CASE WHEN T7.C_DV_AI_MOD = ''FI_DC'' THEN ''2'' ELSE ''3'' END) AS FXFS,
       NVL(T3.ZQMZ, T7.N_FV_ISSUE) AS MZ,
       NVL(T3.PMLL, T7.N_FV_IR) / 100 AS PMLL,
       NULL AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT T1.PF_ID,
               T1.BIZ_DATE,
               GET_CODE(''C_MKT_CODE'', T1.MARKET_CODE) AS JYCSDM,
               T1.MARKET_CODE,
               T1.SYMBOL_CODE,
               CASE
                 WHEN INSTR(T1.SYMBOL_CODE, '' '') > 0 THEN
                  SUBSTR(T1.SYMBOL_CODE,
                         1,
                         INSTR(T1.SYMBOL_CODE, '' '', -1) - 1)
                 ELSE
                  T1.SYMBOL_CODE
               END AS ZQDM,
               MAX(T1.SEC_CODE_NAME) AS ZQMC,
               SUM(T1.ATTYPE_QTY) AS QMSL,
               SUM(T1.ATTYPE_COST_OC) AS QMCB,
               SUM(T1.ATTYPE_AMOUNT_OC) AS QMSZ,
               SUM(T1.N_HLDVVA_L) AS QMGZZZ
          FROM TC_HP_PB_DOM_INFO T1
         WHERE T1.PF_ID ${PFID}
           AND T1.BIZ_DATE = ''${FENDDATE}''
           AND T1.C_DV_KM_CLS = ''KC_ZC''
           AND T1.C_DAI_CODE IN (''ZQTZ_CB'', ''ZQTZ_YZJ'')
           AND T1.C_SEC_VAR_CODE = ''ZQ''
           AND T1.C_SEC_VAR_CODE_SUB = ''ZQ_ZCZQH''
         GROUP BY T1.PF_ID,
                  T1.BIZ_DATE,
                  GET_CODE(''C_MKT_CODE'', T1.MARKET_CODE),
                  T1.MARKET_CODE,
                  T1.SYMBOL_CODE) T1 -- 持仓数据
  LEFT JOIN (SELECT T2.PF_ID,
                    T2.BIZ_DATE,
                    T2.C_SEC_CODE,
                    SUM(CASE
                          WHEN T2.N_CAPI_WAY = 1 THEN
                           N_TD_AMOUNT
                        END) AS MRSL,
                    SUM(CASE
                          WHEN T2.N_FUND_WAY = -1 THEN
                           N_TD_MONEY
                        END) AS MRJE,
                    SUM(CASE
                          WHEN T2.N_CAPI_WAY = -1 THEN
                           N_TD_AMOUNT
                        END) AS MCSL,
                    SUM(CASE
                          WHEN T2.N_FUND_WAY = 1 THEN
                           N_TD_MONEY
 ', '0', null, 'A1045', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('4049750F87F34DFD98F79CD295831CDD', 'A00079', '未上市股权投资明细', 'SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
        NVL(T1.CPDM,T1.TA_PF_ID) CPDM,
        CASE
        WHEN T2.C_MKT_CODE = ''XSHG'' THEN -- 上海证券交易所
        ''102''
        WHEN T2.C_MKT_CODE = ''XSHE'' THEN -- 深圳证券交易所
        ''103''
        WHEN T2.C_MKT_CODE = ''XHKG'' THEN -- 香港联合交易所
        ''250''
        WHEN T2.C_MKT_CODE = ''HKCG'' THEN -- 沪港通下港股通
        ''104''
        WHEN T2.C_MKT_CODE = ''HKCS'' THEN -- 深港通下港股通
        ''105''
        WHEN T2.C_MKT_CODE = ''AMEX'' THEN -- 美国证券交易所
        ''200''
        ELSE ''199'' 
        END AS JYCSDM,
        REGEXP_SUBSTR(T1.SYMBOL_CODE, ''[^ ]+'', 1, 1) ZQDM,T1.SEC_CODE_NAME ZQMC,T2.MRSL,T2.MRJE,T2.MCSL,T2.MCJE,T1.QMSL,T1.QMCB,T1.QMSZ,
        T3.C_GSDM,T3.C_GSMC,
        DECODE(T3.C_HYFL,''PB9001'',''A'',
                         ''PB9002'',''B'',
                         ''PB9003'',''C'',
                         ''PB9004'',''D'',
                         ''PB9005'',''E'',
                         ''PB9006'',''F'',
                         ''PB9018'',''G'',
                         ''PB9008'',''H'',
                         ''PB9009'',''I'',
                         ''PB9010'',''J'',
                         ''PB9011'',''K'',
                         ''PB9012'',''L'',
                         ''PB9007'',''M'',
                         ''PB9014'',''N'',
                         ''PB9015'',''O'',
                         ''PB9021'',''P'',
                         ''PB9017'',''Q'',
                         ''PB9016'',''R'',
                         ''PB9019'',''S'') HYFL,
        CASE WHEN TRIM(RELATED_PARTY) IS NOT NULL THEN ''1'' ELSE ''0'' END SFGLJY,
        TRIM(RELATED_PARTY) GLRYGLRDGX,
        '''' BZ
        ,''1060000001'' AS PF_ID
FROM (SELECT c.PF_ID,
       d.TA_PF_ID,
       d.CPDM,
       C.SYMBOL_CODE,
       C.SEC_CODE_NAME,
       SUM(ATTYPE_QTY) QMSL,
       SUM(ATTYPE_COST_OC) QMCB,
       SUM(ATTYPE_AMOUNT_OC) QMSZ
  FROM TC_HP_PB_DOM_INFO C,v_pf_cpdm d
 WHERE c.pf_id = d.PF_ID AND C.BIZ_DATE = ''${FENDDATE}''
   AND C.C_DAI_CODE = ''ZQTZ_CB'' AND c.pf_id ${PFID}
   AND 1=2
 GROUP BY c.PF_ID, C.SYMBOL_CODE, C.SEC_CODE_NAME,d.TA_PF_ID,d.CPDM) T1
 LEFT JOIN
 (SELECT D.PF_ID,
       D.C_SEC_CODE,
       D.C_MKT_CODE,
       SUM(CASE WHEN C_DT_CODE = ''JJJY_BUY'' THEN D.N_TD_AMOUNT END) MRSL,
       SUM(CASE WHEN C_DT_CODE = ''JJJY_BUY'' THEN D.N_TD_MONEY END) MRJE,
       SUM(CASE WHEN C_DT_CODE <> ''JJJY_BUY'' THEN D.N_TD_AMOUNT END) MCSL,
       SUM(CASE WHEN C_DT_CODE <> ''JJJY_BUY'' THEN D.N_TD_MONEY END) MCJE
  FROM TC_TD_PB_DOM_INFO D
 WHERE D.BIZ_DATE = ''${FENDDATE}''
  AND D.C_TD_TYPE = ''JJJY''    
 GROUP BY D.PF_ID, D.C_SEC_CODE, D.C_MKT_CODE) T2 ON T1.PF_ID = T2.PF_ID AND T1.SYMBOL_CODE = T2.C_SEC_CODE
 INNER JOIN
 (SELECT C_ZCDM, C_SCDM, C_GSDM, C_GSMC, C_HYFL, B.RELATED_PARTY
  FROM TC_SE_PB_DOM_INFO A
  LEFT JOIN TC_PF_RELATED_PARTY B
    ON A.C_GSMC = B.RELATED_PARTY_NAME
   AND A.C_ZCPZLX = ''NS_WSSGQ''
   AND A.C_KSRQ <= ''${FENDDATE}''
   AND A.C_JSRQ >= ''${FENDDATE}''', '0', null, 'A1043', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('9B5D216B892F48F3AA8D6A31FC591037', 'A00048', '下属产品成立信息', '/*

历史的成立数据需要初始化
有TA的数据从TA获取，无TA的数据需要从凭证表或维护的TA销售数据中获取，并与成立日凭证进行核对
报价回购没有成立数据，TA第一天的申购数据当成成立数据使用

*/

SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH, --机构编号
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND, --年度报告
       ''1'' AS BGQJ, --报告期间
       ''${FENDDATE}'' AS QCRQ, --期初日期
       ''${FENDDATE}'' AS QMRQ, --期末日期
       T3.CPDM AS CPZDM, --产品主代码
       T01.PF_ID AS CPDM, --产品代码
       CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          ''0''
         ELSE
          ''1''
       END AS HTSFYSX, --合同是否有效
       CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          ''''
         ELSE
          T1.PF_SETUP_DATE
       END AS HTSXRQ, --合同生效日期
       CASE
         WHEN T1.FUND_TYPE = ''9'' OR T3.SFNDHRJJ = ''1'' THEN
          0
         ELSE
                   CASE WHEN T1.PF_SETUP_DATE = ''${FENDDATE}'' 
                  THEN NVL(T6.N_SELL_MONEY,SUM(T4.CONFIRMEDAMOUNT - NVL(T4.CHARGE, 0) + NVL(T4.INTEREST, 0)))
                  ELSE SUM(T4.CONFIRMEDAMOUNT - NVL(T4.CHARGE, 0) + NVL(T4.INTEREST, 0)) END
       END AS SJMJJE, --实际募集金额
       CASE
         WHEN T1.FUND_TYPE = ''9'' OR T3.SFNDHRJJ = ''1'' THEN
          0
         ELSE
          CASE WHEN T1.PF_SETUP_DATE = ''${FENDDATE}'' 
                  THEN   NVL(T6.N_SETT_MONEY,SUM(T4.CONFIRMEDVOL))
                  ELSE SUM(T4.CONFIRMEDVOL) END
         
       END AS SJMJFS, --实际募集份额
       CASE
         WHEN T1.FUND_TYPE = ''9'' OR T3.SFNDHRJJ = ''1'' THEN
          0
         ELSE
          NVL(COUNT(DISTINCT T5.CERTIFICATENO || T5.CERTIFICATETYPE ||
                    T5.INVESTORNAME),
              0)
       END AS YXRGRS, --有效认购人数
       CASE
         WHEN T1.FUND_TYPE = ''9'' OR T3.SFNDHRJJ = ''1'' THEN
          0
         ELSE
          (CASE
            WHEN T3.CPLX = ''1'' THEN
             SUM(CASE
                   WHEN T4.EXCHANGEFLAG IN (''0'', ''1'') THEN
                    T4.CONFIRMEDAMOUNT - NVL(T4.CHARGE, 0) + NVL(T4.INTEREST, 0)
                   ELSE
                    0
                 END)
            ELSE
             NULL
          END)
       END AS CNMJJE, --场内募集金额
       CASE
         WHEN T1.FUND_TYPE = ''9'' OR T3.SFNDHRJJ = ''1'' THEN
          0
         ELSE
          (CASE
            WHEN T3.CPLX = ''1'' THEN
             SUM(CASE
                   WHEN T4.EXCHANGEFLAG IN (''0'', ''1'') THEN
                    T4.CONFIRMEDVOL
                   ELSE
                    0
                 END)
            ELSE
             NULL
          END)
       END AS CNMJFS, --场内募集份额
       CASE
         WHEN T1.FUND_TYPE = ''9'' OR T3.SFNDHRJJ = ''1'' THEN
          0
         ELSE
          (CASE
            WHEN T3.CPLX = ''1'' THEN
             SUM(CASE
                   WHEN T4.EXCHANGEFLAG NOT IN (''0'', ''1'') THEN
                    T4.CONFIRMEDAMOUNT - NVL(T4.CHARGE, 0) + NVL(T4.INTEREST, 0)
                   ELSE
                    0
                 END)
            ELSE
             NULL
          END)
       END AS CWMJJE, --场外募集金额
       CASE
         WHEN T1.FUND_TYPE = ''9'' OR T3.SFNDHRJJ = ''1'' THEN
      ', '0', null, 'A1009', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('DC3E49137B924CD983DC4F74F766F780', 'A00011', '表2-5  企业债券分行业、企业规模情况', '--表2-5大中小微完整取数SQL
WITH TT_PF AS
 (SELECT A.PF_ID,
         MAX(DECODE(B.ATTACHED_CODE, ''PB0011'', B.ATTACHED_VALUE)) AS PB0011, --区分公募、专户
         MAX(DECODE(B.ATTACHED_CODE, ''PB1001'', B.ATTACHED_VALUE)) AS PB1001 --区分成本估值、市值估值
    FROM TP_GL_FUNDCODE_MAP A, TC_PF_BSC_INFO_ATTACHED B
   WHERE A.FIN_PF_ID = B.PF_ID
     AND B.ATTACHED_CODE IN (''PB0011'', ''PB1001'')
     AND A.SRC_SYS = ''45''
     AND IS_VALID = 1
        -- AND A.CHG_DATE <=''${FENDDATE}''  AND A.END_DATE >''${FENDDATE}''
     AND (A.CHG_DATE <= ''${FENDDATE}'' AND A.END_DATE > ''${FENDDATE}'')
   GROUP BY A.PF_ID)
                             
SELECT A.LINE_ID,
       A.LINE_NAME1,
       BIG_COMPANY,
       MIDDLE_COMPANY,
       SMALL_COMPANY,
       TINY_COMPANY,
       TOTAL
  FROM TP_GL_PB_HEAD A
  LEFT JOIN (SELECT DECODE(GROUPING(CP_HY), 1, ''企业债券余额总计'', CP_HY) AS CP_HY,
                    SUM(BIG_COMPANY) AS BIG_COMPANY, --"大型企业",
                    SUM(MIDDLE_COMPANY) AS MIDDLE_COMPANY, --"中型企业",
                    SUM(SMALL_COMPANY) AS SMALL_COMPANY, --"小型企业",
                    SUM(TINY_COMPANY) AS TINY_COMPANY, --"微型企业",
                    SUM(TOTAL) AS TOTAL
               FROM (SELECT
                     --A.PF_ID,A.SEC_CODE,A.SUBJ_ID,A.SUBJ_NAME,A.SUBJ_ATTR,
                      DECODE(NVL(B.CP_HY, ''综合''), ''综合'', ''公共管理、社会保障和社会组织'', B.CP_HY) AS CP_HY,
                      CASE WHEN NVL(B.CP_GM, ''大型企业'') = ''大型企业'' THEN DECODE(PB1001, ''PB100101'', ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) / 10000 END AS BIG_COMPANY, --"大型企业",
                      CASE WHEN NVL(B.CP_GM, ''大型企业'') = ''中型企业'' THEN DECODE(PB1001, ''PB100101'', ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) / 10000 END AS MIDDLE_COMPANY, --"中型企业",
                      CASE WHEN NVL(B.CP_GM, ''大型企业'') = ''小型企业'' THEN DECODE(PB1001, ''PB100101'', ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) / 10000 END AS SMALL_COMPANY, --"小型企业",
                      CASE WHEN NVL(B.CP_GM, ''大型企业'') = ''微型企业'' THEN DECODE(PB1001, ''PB100101'', ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) / 10000 END AS TINY_COMPANY, --"微型企业",
                      DECODE(PB1001, ''PB100101'', ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) / 10000 AS TOTAL --"合计"
                       FROM TC_PF_PB_SEC_INFO A
                       JOIN TT_PF T
                         ON A.PF_ID = T.PF_ID
                       LEFT JOIN (SELECT A.ZQDM || '' '' || A.SSSC AS SYMBOL_CODE,
                                        A.CP_HY,
                                        A.CP_GM
                                   FROM TC_MK_ZQINFO_KH A
                                  WHERE A.REPORT_NAME = ''企业债券'') B
                         ON A.SYMBOL_CODE = B.SYMBOL_CODE
                      WHERE A.ATTYPE_EXT_ID_NAME = ''企业债券''
                        AND T.PB0011 = ''${FUNDTYPE}''
                        AND A.BIZ_DATE = ''${FENDDATE}'') T1             
              GROUP BY ROLLUP(CP_HY)) B
    ON TRIM(A.LINE_NAME1) = TRIM(B.CP_HY)
 WHERE A.REP_ID = ''PB11''
 ORDER BY A.LINE_ID                                                                      ', '0', 0, 'A11', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('660D0A07947A456B83EC320830D9D6BB', 'A00012', '表3-1  存续产品分合同期限募集余额', '-- 取数据 测试条件 20181201 -20181231 
WITH TT AS (
select T0.CUR_D,
       T0.PF_OPERATING,
       T0.MV_AMOUNT,
       T0.PF_BEGIN_DATE,
       T0.PFTERMINATION_END_ID
  FROM (SELECT T0.PF_ID,
               T1.CUR_D, -- 币种
               T1.MV_AMOUNT, --期末金额
               T0.PF_OPERATING, --运行方式
               T0.PF_BEGIN_DATE, --产品起始时间
               T0.PFTERMINATION_END_ID, --产品实际终止日期 
               T1.BIZ_DATE
          FROM TMP_PF_PB_INFO T0
         INNER JOIN TC_PF_PB_COLLECT_RENEW T1
            ON T0.PF_ID = T1.PF_ID
         WHERE TO_CHAR(T0.PFTERMINATION_END_ID, ''YYYYMMDD'') > ''${FENDDATE}'' --存续产品
           AND T1.MV_SHARES > 0 --期末有持仓
           AND T1.BIZ_DATE = ''${FENDDATE}''
           AND NVL(T1.MV_AMOUNT, 0) > 0) T0
 INNER JOIN (SELECT DISTINCT T1.PF_ID
               FROM TP_GL_FUNDCODE_MAP T1
              INNER JOIN TC_PF_BSC_INFO_ATTACHED T2
                 ON T2.PF_ID = T1.FIN_PF_ID
              WHERE T1.SRC_SYS = ''TA''
                AND T2.ATTACHED_VALUE = ''${FUNDTYPE}'') T2
    ON T0.PF_ID = T2.PF_ID
)
SELECT LINE_ID, --行编号
       LINE_NAME1, --运行方式中文名称
       LINE_NAME2, -- 年份信息
       CASE WHEN SUM(AMOUNT_RMB) = 0 THEN NULL ELSE SUM(AMOUNT_RMB)/10000 END AS AMOUNT_RMB, --人民币总和
       CASE WHEN SUM(AMOUNT_WB) = 0 THEN NULL ELSE SUM(AMOUNT_WB)/10000 END  AS AMOUNT_WB, --外币总和
       CASE WHEN SUM(NVL(AMOUNT_RMB,0)+NVL(AMOUNT_WB,0))=0 THEN NULL ELSE SUM(NVL(AMOUNT_RMB,0)+NVL(AMOUNT_WB,0))/10000 END  AS HJ
  FROM (SELECT T0.LINE_ID, --行编号
               T0.LINE_NAME1, --运行方式中文名称
               T0.LINE_NAME2, -- 年份信息
               CASE WHEN CUR_D = ''CNY'' THEN NVL(MV_AMOUNT,0) ELSE 0  END AS AMOUNT_RMB,
               CASE WHEN CUR_D <> ''CNY'' THEN NVL(MV_AMOUNT,0) ELSE 0  END AS AMOUNT_WB
          FROM (SELECT *
                  FROM TP_GL_PB_HEAD T
                 WHERE REP_ID = ''PB12''
                   AND LINE_ID NOT IN (''e10000'',
                                       ''e20000'',
                                       ''e30000'',
                                       ''e40000'',
                                       ''e00000'')) T0
          LEFT JOIN
          (SELECT CUR_D, -- 币种
                SUM(MV_AMOUNT) AS MV_AMOUNT, --期末金额
                PF_OPERATING, --运行方式
                DATETYPE
           FROM (SELECT CUR_D, -- 币种
                        MV_AMOUNT, --期末金额
                        PF_OPERATING, --运行方式
                        CASE
                              WHEN PF_OPERATING IN (''PB2003'', ''PB2004'') AND
                               PFTERMINATION_END_ID - PF_BEGIN_DATE <= 30 THEN
                           ''1个月（含）以下''
                          WHEN PF_OPERATING IN (''PB2003'', ''PB2004'') AND
                               30 < PFTERMINATION_END_ID - PF_BEGIN_DATE AND
                               PFTERMINATION_END_ID - PF_BEGIN_DATE <= 90 THEN
                           ''1-3个月（含）''
                          WHEN PF_OPERATING IN (''PB2003'', ''PB2004'') AND
                               90 < PFTERMINATION_END_ID - PF_B', '0', 0, 'A12', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('9891B010AE194BD8B9422E40E92A060D', 'A00013', '表3-2  新发产品分合同期限募集金额', '-- 取数据 测试条件 20181201 -20181231  PB3001
with tradedata_v  as (
SELECT  T0.TransactionCfmDate,--交易确认日期
  T2.CurrencyType AS CUR_D,--结算币种
  T0.ConfirmedAmount,--确认金额
  T0.CONFIRMEDVOL,--确认份额
  T0.FundCode,--基金代码
  T0.ReturnCode，--交易处理返回代码  1 处理成功 2 处理失败
  T0.TransactionAccountID,--交易帐号
  T0.DistributorCode AS DistributorCode,--销售人代码
  T0.BusinessCode,--业务代码
  t0.TAAccountID,--基金账号
  t0.BranchCode,--网点号码
  T1.RISK_TYPE, -- 100011:募集  100012:兑付
  T4.PF_OPERATING,-- 运行方式
  T4.PF_BEGIN_DATE,--基金成立日期
  T4.PFTERMINATION_END_ID--基金实际结束日期
--SELECT COUNT(*)
FROM(
  -- 交易数据  
  SELECT T.TRANSACTIONCFMDATE,--交易确认日期
    '''' AS CURRENCYTYPE,--结算币种
    case when t.BusinessCode = ''50'' then t.confirmedvol else T.CONFIRMEDAMOUNT end CONFIRMEDAMOUNT,--确认金额
    T.CONFIRMEDVOL,--确认份额
    T.FUNDCODE,--基金代码
    T.RETURNCODE，--交易处理返回代码  1 处理成功 2 处理失败
    T.TRANSACTIONACCOUNTID,--交易帐号
    T.DISTRIBUTORCODE,--销售人代码
    T.BusinessCode,--业务代码
    t.TAAccountID,--基金账号
    t.BranchCode--网点号码
/* SELECT DISTINCT FUNDCODE*/  FROM TR_DF_TA_TDCON T 
  WHERE T.TRANSACTIONCFMDATE BETWEEN FU_GET_CPYWDATE(''7'',''${FBEGINDATE}'') AND ''${FENDDATE}''
  AND T.RETURNCODE = ''1''
  )T0 
  --获取业务代码分类
  INNER JOIN (SELECT T.RISK_TYPE, T.TA_CODE   FROM TP_GL_TA_CORRESPD T WHERE T.RISK_TYPE = ''100011'' ) T1 ON T0.BusinessCode = t1.TA_CODE
  INNER JOIN TR_DF_TA_DYINFOLITEM T2 ON T0.FUNDCODE=T2.FUNDCODE AND UPDATEDATE=''${FENDDATE}''  and pf_type = ''YSS_45''  --注意行情全部从4.5估值取
  INNER JOIN (SELECT DISTINCT B.PF_ID,B.FIN_PF_ID,B.TA_PF_ID,A.PF_BEGIN_DATE,A.PFTERMINATION_END_ID,A.PF_OPERATING FROM TMP_PF_PB_INFO A
                      LEFT JOIN TP_GL_FUNDCODE_MAP B ON A.PF_ID=B.PF_ID AND B.SRC_SYS=''TA''  
                      LEFT JOIN TC_PF_BSC_INFO_ATTACHED C ON C.PF_ID=B.FIN_PF_ID 
              WHERE C.ATTACHED_VALUE=''${FUNDTYPE}'' AND A.PF_BEGIN_DATE BETWEEN TO_DATE(''${FBEGINDATE}'',''YYYYMMDD'') AND TO_DATE(''${FENDDATE}'',''YYYYMMDD'')) T4 ON T0.FUNDCODE=T4.TA_PF_ID
                      
 -- INNER JOIN (SELECT T5.PF_ID FROM TP_GL_FUNDCODE_MAP T5 INNER JOIN TC_PF_BSC_INFO_ATTACHED T6 ON T5.FIN_PF_ID=T6.PF_ID AND T6.ATTACHED_VALUE=''PB11008'') T3 ON T4.PF_ID=T3.PF_ID
)
SELECT Line_Id, --行编号
       line_name1, --运行方式中文名称
       line_name2, -- 年份信息
       CASE WHEN SUM(NVL(AMOUNT_RMB,0)) = 0 THEN NULL ELSE SUM(NVL(AMOUNT_RMB,0))/10000 END AS AMOUNT_RMB, --人民币总和
       CASE WHEN SUM(NVL(AMOUNT_WB,0)) = 0 THEN NULL ELSE SUM(NVL(AMOUNT_WB,0))/10000 END AS AMOUNT_WB, --外币总和
       CASE WHEN SUM(NVL(AMOUNT_RMB,0))  + SUM(NVL(AMOUNT_WB,0)) = 0 THEN NULL ELSE SUM(NVL(AMOUNT_RMB,0))/10000  + SUM(NVL(AMOUNT_WB,0))/10000 END  as HJ
  FROM (select T0.Line_Id, --行编号
               t0.line_name1, --运行方式中文名称
               t0.line_name2, -- 年份信息
                CASE when CUR_D = ''CNY'' THEN NVL(ConfirmedAmount,0) ELSE 0   END AS AMOUNT_RMB,
               CASE when CUR_D <> ''CNY'' THEN NVL(ConfirmedAmount,0) ELSE 0  END AS AMOUNT_WB
          from (SELECT *
                  FROM TP_GL_PB_HEAD T
                 where rep_id = ''PB13''
', '0', 0, 'A13', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('D5E31DF70E954AE18CBD797155894988', 'A00003', '表1-3只数情况', '-- 测试条件  20181201 - 20181231 PB3001
WITH V_FUNDCODEDATE AS( SELECT   
              PF_OPERATING ,--运行方式 PB0002
              PF_TYPE,--产品类型 PB0006
              PF_COLLECTING,--募集方式 PB0003
              PF_MANAGEMENT,--管理方式 PB0004
              PF_TRANCH,--分级产品标识 PB0007
              PF_OBLIGATION,--受托职责 PB0005
              PF_MMF,--货币市场基金标识 PB0022
              PF_INTEREST,--收益权转让产品标识  PB0021
              TO_CHAR(T0.PF_BEGIN_DATE,''yyyyMMdd'') AS PF_BEGIN_DATE,
              TO_CHAR(T0.PFTERMINATION_END_ID,''yyyyMMdd'') AS PFTERMINATION_END_ID,
              T0.PFCOLLECTING_CUR AS PFCOLLECTING_CUR
              FROM (SELECT nvl(TRIM(PFCOLLECTING_CUR),''CNY'') AS PFCOLLECTING_CUR,--币种
                  T.PF_OPERATING,--运行方式
                  t.PF_TYPE,--产品类型
                  t.PF_COLLECTING,--募集方式
                  t.PF_MANAGEMENT,--管理方式
                  t.PF_TRANCH,--分级产品标识 
                  t.PF_OBLIGATION,--受托职责
                  t.PF_MMF,--货币市场基金标识
                  t.PF_INTEREST,--收益权转让产品标识  
                  T.PFTERMINATION_END_ID,
                  T.VARIETY_TYPE_D,--产品品种
                  T.PF_BEGIN_DATE
                  FROM TMP_PF_PB_INFO T
                  --LEFT JOIN TC_PF_PB_COLLECT_RENEW T1 ON T.PF_ID = T1.PF_ID
                  -- 获取产品类别
                  INNER JOIN (SELECT DISTINCT  A.PF_ID,A.FIN_PF_ID FROM  TP_GL_FUNDCODE_MAP  A
                        --INNER JOIN TP_DF_LSETLIST B ON A.FIN_PF_ID = B.FIN_PF_ID
                        INNER JOIN TC_PF_BSC_INFO_ATTACHED C ON C.PF_ID = A.FIN_PF_ID
                        WHERE A.SRC_SYS=''TA'' --AND B.SRC_SYS=''TA''  
                        AND C.ATTACHED_VALUE = ''${FUNDTYPE}''
                  
                  ) T4 ON T.PF_ID = T4.PF_ID
              ) T0
              --INNER JOIN TC_PF_BSC_INFO T1 ON T0.PF_ID = T1.PF_ID
              LEFT JOIN TP_GL_CURRFND_CODE_MAP T2 ON T0.PFCOLLECTING_CUR = T2.CUR_NUM --T2.CUR_LETTER
              --WHERE TO_CHAR( PFTERMINATION_END_ID,''yyyyMMdd'') > ''${FENDDATE}'' AND to_char(PF_BEGIN_DATE,''yyyyMMdd'') <= ''${FENDDATE}''
          )
SELECT  
LINE_ID,--行编号
LINE_NAME1,--行名称
CASE WHEN SUM(NVL(RMB_XC,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_XC,0)) END  as RMB_XC,--续存人民币
CASE WHEN SUM(NVL(WB_XC,0)) = 0 THEN NULL ELSE SUM(NVL(WB_XC,0)) END as WB_XC,--续存外币
CASE WHEN SUM(NVL(RMB_XC,0)+NVL(WB_XC,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_XC,0)+NVL(WB_XC,0)) END  as HJ_XC,--续存合计
CASE WHEN SUM(NVL(RMB_XF,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_XF,0)) END  as RMB_XF,--新发人民币
CASE WHEN SUM(NVL(WB_XF,0)) = 0 THEN NULL ELSE SUM(NVL(WB_XF,0)) END  as WB_XF,--新发外币
CASE WHEN SUM(NVL(RMB_XF,0) + NVL(WB_XF,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_XF,0) + NVL(WB_XF,0)) END  AS HJ_XF,--新发合计
CASE WHEN SUM(NVL(RMB_ZZ,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_ZZ,0)) END  as RMB_ZZ,--终止人民币
CASE WHEN SUM(NVL(WB_ZZ,0)) = 0 THEN NULL ELSE SUM(NVL(WB_ZZ,0)) END  as WB_ZZ,--终止外币
CASE WHEN SUM(NVL(RMB_ZZ,0)+ NVL(WB_ZZ,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_ZZ,0)+ NVL(WB_ZZ,0)) END  AS HJ_ZZ--终止合计
from (
  --附属信息有', '0', 0, 'A03', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('9891B010AE194BD8B9422E40E92A060A', 'A00014', '表3-3资产负债剩余期限', '--表3-3 资管产品资产负债剩余期限统计模板完整取数SQL

WITH TT_PF AS
(
SELECT T1.PF_ID, PB0011, PB1001, NVL(T2.NEXT_DAYS, 1) AS NEXT_DAYS
  FROM (SELECT A.PF_ID,
               MAX(A.CHG_DATE) AS CHG_DATE,
               MAX(A.END_DATE) AS END_DATE,
               MAX(DECODE(B.ATTACHED_CODE, ''PB0011'', B.ATTACHED_VALUE)) AS PB0011, --区分公募、专户
               MAX(DECODE(B.ATTACHED_CODE, ''PB1001'', B.ATTACHED_VALUE)) AS PB1001 --区分成本估值、市值估值       
          FROM TP_GL_FUNDCODE_MAP A
          JOIN TC_PF_BSC_INFO_ATTACHED B
            ON A.FIN_PF_ID = B.PF_ID
          LEFT JOIN TP_GL_EXHIB_DATADICT C
            ON B.ATTACHED_VALUE = C.KEY_ID
         WHERE A.IS_VALID = 1
           AND B.ATTACHED_CODE IN
               (''PB0011'', ''PB1001'', ''PB0024'', ''PB0026'', ''PB0025'')
           AND A.SRC_SYS = ''45''
              -- AND A.CHG_DATE <=''${FENDDATE}''  AND A.END_DATE >''${FENDDATE}''
           AND (A.CHG_DATE <= ''${FENDDATE}'' AND A.END_DATE > ''${FENDDATE}'')
         GROUP BY A.PF_ID) T1
  LEFT JOIN (SELECT PF_ID,
                    TO_DATE(MIN(OPEN_DATE), ''YYYYMMDD'') -
                    TO_DATE(''${FENDDATE}'', ''YYYYMMDD'') AS NEXT_DAYS
               FROM TC_ACCT_OPEN_DATE_INFO
              WHERE OPEN_DATE >= ''${FENDDATE}''
              GROUP BY PF_ID) T2
    ON T1.PF_ID = T2.PF_ID
 WHERE PB0011 = ''${FUNDTYPE}''
)


SELECT A.LINE_ID,
       A.LINE_NAME1,
       B.ZC_ZWGJ,
       B.GQ,TDZT,
       B.FZ_ZWGJ,
       B.SSBJ
  FROM TP_GL_PB_HEAD A LEFT JOIN
  (
  SELECT DECODE(GROUPING(SHEET_NAME), 1, ''总计'',SHEET_NAME) AS SHEET_NAME,
         SUM(CASE WHEN A.NODE_ID = ''PB1401'' THEN CJJE END)/10000 AS ZC_ZWGJ,
         SUM(CASE WHEN A.NODE_ID = ''PB1402'' THEN CJJE END)/10000 AS GQ,
         SUM(CASE WHEN A.NODE_ID = ''PB1403'' THEN CJJE END)/10000 AS TDZT,
         SUM(CASE WHEN A.NODE_ID = ''PB1404'' THEN CJJE END)/10000 AS FZ_ZWGJ,
         SUM(CASE WHEN A.NODE_ID = ''PB1405'' THEN CJJE END)/10000 AS SSBJ
         FROM
         
   --回购、存款
   (SELECT NODE_ID,
          NODE_NAME,
          NVL(SHEET_NAME, ''无固定期限'') AS SHEET_NAME,
          SUM(CJJE) AS CJJE
     FROM (SELECT --A.PF_ID,
            CASE 
              WHEN A.HGFX = ''HGJY_ZHG'' THEN ''PB1404'' --负债债务工具
              WHEN A.HGFX = ''HGJY_NHG'' THEN ''PB1401'' --资产债务工具
              WHEN A.HGFX = ''CK'' THEN ''PB1401'' --资产债务工具
            END NODE_ID, 
            CASE 
              WHEN A.HGFX = ''HGJY_ZHG'' THEN ''负债债务工具''
              WHEN A.HGFX = ''HGJY_NHG'' THEN ''资产债务工具''
              WHEN A.HGFX = ''CK'' THEN ''资产债务工具'' 
            END NODE_NAME,
            CASE 
              WHEN TO_DATE(A.HGDQRQ, ''YYYYMMDD'') - TO_DATE(''${FENDDATE}'', ''YYYYMMDD'') BETWEEN 0 AND 30 THEN ''1个月（含）以下''
              WHEN TO_DATE(A.HGDQRQ, ''YYYYMMDD'') - TO_DATE(''${FENDDATE}'', ''YYYYMMDD'') BETWEEN 31 AND 90 THEN ''1-3个月（含）''
              WHEN TO_DATE(A.HGDQRQ, ''YYYYMMDD'') - TO_DATE(''${FENDDATE}'', ''YYYYMMDD'') BETWEEN 91 AND 180 THEN ''3-6个月（含）''
              WHEN TO_DATE(A.HGDQRQ, ''YYYYMMDD'') - TO_DATE(''${FENDDATE}'', ''YYYYMMDD'') BETWEEN 181 AND 360 THEN ''6-12个月（', '0', 0, 'A14', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('8713A8504823459B9D8601E91BBADD73', 'A00046', '下属产品募集信息', '
SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH, --机构编号
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND, --年度报告
       ''1'' AS BGQJ, --报告期间
       ''${FENDDATE}'' AS QCRQ, --期初日期
       ''${FENDDATE}'' AS QMRQ, --期末日期
       T3.CPDM AS CPZDM, --产品主代码
       T01.PF_ID AS CPDM, --产品代码
       ''${FENDDATE}'' AS QRRQ, --确认日期
       T01.IPOSTARTDATE AS MJKSRQ, --募集开始日期
       T01.IPOENDDATE AS MJJSRQ, --募集结束日期
       CASE
         WHEN T01.IPOENDDATE IS NOT NULL AND T01.IPOENDDATE <= ''${FENDDATE}'' THEN
          ''1''
         ELSE
          ''0''
       END SFYJSMJ, --是否已经结束募集
       NVL(SUM(CASE
                 WHEN T4.TRANSACTIONCFMDATE = ''${FENDDATE}'' THEN
                  T4.CONFIRMEDAMOUNT
                 ELSE
                  0
               END),
           0) AS RGJE, --认购金额
       NVL(SUM(T4.CONFIRMEDAMOUNT), 0) AS LJRGJE, --累计认购金额
       NVL(SUM(CASE
                 WHEN T4.EXCHANGEFLAG IN (''0'', ''1'') AND
                      T4.TRANSACTIONCFMDATE = ''${FENDDATE}'' THEN
                  T4.CONFIRMEDAMOUNT
               END),
           0) AS CNRGJE, --场内认购金额
       NVL(SUM(CASE
                 WHEN T4.EXCHANGEFLAG IN (''0'', ''1'') THEN
                  T4.CONFIRMEDAMOUNT
               END),
           0) AS CNLJRGJE, --场内累计金额
       NVL(SUM(CASE
                 WHEN T4.EXCHANGEFLAG NOT IN (''0'', ''1'') AND
                      T4.TRANSACTIONCFMDATE = ''${FENDDATE}'' THEN
                  T4.CONFIRMEDAMOUNT
               END),
           0) AS CWRGJE, --场外认购金额
       NVL(SUM(CASE
                 WHEN T4.EXCHANGEFLAG NOT IN (''0'', ''1'') THEN
                  T4.CONFIRMEDAMOUNT
               END),
           0) AS CWLJRGJE, --场外累计认购金额
       NULL AS BZ --备注
      -- ,T01.PF_ID
      ,''1060000001'' as PF_ID
  FROM TC_PF_BSC_INFO T1
 INNER JOIN TC_PF_GRADEDFUND_INFO T01
    ON T1.PF_ID = T01.PF_M_ID
 --INNER JOIN TP_GL_FUNDCODE_MAP T2
   -- ON T1.PF_ID = T2.FIN_PF_ID
   --AND T01.PF_ID = T2.TA_PF_ID
   --AND T2.SRC_SYS = ''TA''
 INNER JOIN V_PF_BSC_INFO_ATTACHED T3
    ON T1.PF_ID = T3.PF_ID
 LEFT JOIN TR_DF_TA_TDCON T4
    ON T01.PF_ID = T4.FUNDCODE
   AND T4.TRANSACTIONCFMDATE <= ''${FENDDATE}''
   AND T4.BUSINESSCODE = ''01''
   AND T4.RETURNCODE = ''1''
 WHERE T3.CPLX = ''1''
   AND T01.PF_ID IS NOT NULL
   AND T01.IPOSTARTDATE <= ''${FENDDATE}''
   AND (T01.IPOENDDATE IS NULL OR T01.IPOENDDATE >= ''${FENDDATE}'')

 GROUP BY T3.CPDM, T01.PF_ID, T01.IPOSTARTDATE, T01.IPOENDDATE,T01.PF_ID
 ORDER BY T3.CPDM, T01.PF_ID                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ', '0', null, 'A1007', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('D48D228307F74ACEBF0F134D216EB262', 'A00071', '协议回购投资明细', '
--协议回购投资明细
/*
  HG_MDS  回购品种_买断式
  HG_MDS_GZXQ 回购品种_买断式_国债
  HG_MDS_QYZ  回购品种_买断式_企业债
  HG_YDGH 回购品种_约定购回
  HG_ZYS  回购品种_质押式
  HG_ZYS_GP 回购品种_质押式_股票
  HG_ZYS_GZXQ 回购品种_质押式_国债
  HG_ZYS_JTL  回购品种_质押式_金天利
  HG_ZYS_QYZ  回购品种_质押式_企业债
  HG_ZYS_XY_ZQ  回购品种_质押式_协议_债券

*/

---   交易对手方有问题  交易对手方类型没写

SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(A.CPDM, '''') AS CPDM,
       NVL(A.JYCSDM, '''') AS JYCSDM,
       NVL(A.JYBH, '''') AS JYBH,
       NVL(A.CJRQ, '''') AS CJRQ,
       NVL(MAX(A.HGFX), '''') AS HGFX,
       NVL(MAX(A.HGLX), '''') AS HGLX,
       NVL(MAX(A.HGDQRQ), '''') AS HGDQRQ,
       NVL(MAX(A.HGQX), 0) AS HGQX,
       NVL(MAX(A.HGLL), 0) AS HGLL,
       NVL(SUM(A.QMJE), 0) AS QMJE,
       NVL(SUM(A.DQJSJE), 0) AS DQJSJE,
       NVL(MAX(A.JYDSFLX), '''') AS JYDSFLX,
       NVL(MAX(A.JYDSFMC), '''') AS JYDSFMC,
       NVL(MAX(A.JYDSFCPDM), '''') AS JYDSFCPDM,
       '''' AS ZQDM,
       '''' AS ZQMC,
       '''' AS ZQSL,
       '''' AS ZQJE,
       '''' AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT A.PF_ID,
               P.CPDM,
               A.C_MKT_CODE,
               GET_CODE(''C_MKT_CODE'', A.C_MKT_CODE) AS JYCSDM,
               A.C_IDEN AS JYBH,
               A.BIZ_DATE AS CJRQ,
               CASE
                 WHEN A.C_DT_CODE = ''HGJY_ZHG'' THEN
                  ''1''
                 WHEN A.C_DT_CODE = ''HGJY_NHG'' THEN
                  ''2''
               END AS HGFX,
               CASE
                 WHEN A.C_SEC_VAR_CODE_SUB IN
                      (''HG_MDS'', ''HG_MDS_GZXQ'', ''HG_MDS_QYZ'') THEN
                  ''01''
                 WHEN (A.C_TD_TYPE = ''HGJY'' AND A.C_SEC_CODE LIKE ''205%'') OR
                      (A.C_TD_TYPE = ''HGJY_GP'' AND
                      A.C_SEC_VAR_CODE_SUB = ''HG_ZYS_XY_ZQ'') THEN
                  ''02''
                 WHEN A.C_SEC_VAR_CODE_SUB = ''HG_YDGH'' THEN
                  ''05''
                 WHEN A.C_SEC_VAR_CODE_SUB = ''HG_ZYS_GP'' AND
                      A.C_MKT_CODE IN (''XSHG'', ''XSHE'') THEN
                  ''06''
                 WHEN A.C_SEC_VAR_CODE = ''HG_ZYS_GP'' AND
                      A.C_MKT_CODE IN (''COTC'', ''XCFE'') THEN
                  ''07''
                 ELSE
                  ''99''
               END AS HGLX,
               A.D_SETT_FACT AS HGDQRQ,
               FLOOR(TO_DATE(A.D_SETT_FACT, ''YYYYMMDD'') -
                     TO_DATE(A.BIZ_DATE, ''YYYYMMDD'')) AS HGQX,
               A.N_HG_RATE/100 AS HGLL,
               A.N_TD_MONEY AS QMJE,
               A.N_SETT_MONEY_DUE + A.N_INTEREST AS DQJSJE,
               TC.COUNTERPARTY_CATEGORY AS JYDSFLX,
               TC.COUNTER_FULLNAME AS JYDSFMC,
               TC.COUNTERPARTY_CODE AS JYDSFCPDM
          FROM TC_TD_PB_DOM_INFO A
          LEFT JOIN V_PF_CPDM P
            ON A.PF_ID = P.PF_ID
          LEFT JOIN TC_MK_COUNTERPARTY TC 
            ON A.C_SEC_CODE = TC.CMP_CODE  -- 按证券代码关联客户手工维护的对手方信息
         WHERE (A.C', '0', null, 'A1035', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('D3F78568845644D486DA53DB538BE024', 'A00064', '优先股投资明细', '
--优先股投资明细
/*
C_DV_ISSUE_MODE  发行方式
C_DV_INVEST_CLS  投资分类
C_DAI_CODE  核算项目
C_CA_CODE  帐户或费用代码
C_SEC_VAR_CODE  证券品种
*/

SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(T4.CPDM, '''') AS CPDM,
       NVL(T1.JYCSDM, '''') AS JYCSDM,
       NVL(T1.ZQDM, '''') AS ZQDM,
       NVL(T1.ZQMC, '''') AS ZQMC,
       NVL(T2.MRSL, 0) AS MRSL,
       NVL(T2.MRJE, 0) AS MRJE,
       NVL(T2.MCSL, 0) AS MCSL,
       NVL(T2.MCJE, 0) AS MCJE,
       NVL(T1.QMSL, 0) AS QMSL,
       NVL(T1.QMCB, 0) AS QMCB,
       NVL(T1.QMSZ, 0) AS QMSZ,
       NVL(T3.FXRDM, '''') AS FXRDM,
       NVL(T3.FXRMC, '''') AS FXRMC,
       NVL(T3.FXRQ, '''') AS FXRQ,
       NVL(T3.ZQMZ, ''1'') AS MGMZ,
       NVL(T3.CSPMGXL, ''0'') AS CSPMGXL,
       NVL(T3.SFKZHWPTG, '''') AS SFKZHWPTG,
       NULL AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT T1.PF_ID,
               T1.BIZ_DATE,
               GET_CODE(''C_MKT_CODE'', T1.MARKET_CODE) AS JYCSDM,
               T1.MARKET_CODE,
               T1.SYMBOL_CODE,
               CASE
                 WHEN INSTR(T1.SYMBOL_CODE, '' '') > 0 THEN
                  SUBSTR(T1.SYMBOL_CODE,
                         1,
                         INSTR(T1.SYMBOL_CODE, '' '', -1) - 1)
                 ELSE
                  T1.SYMBOL_CODE
               END AS ZQDM,
               MAX(T1.SEC_CODE_NAME) AS ZQMC,
               SUM(T1.ATTYPE_QTY) AS QMSL,
               SUM(CASE
                     WHEN T1.C_DV_ISSUE_MODE = ''WSS_WX_FGKXS'' THEN
                      T1.ATTYPE_QTY
                   END) AS FLTGFSL,
               SUM(CASE
                     WHEN T1.C_DV_ISSUE_MODE = ''WSS_WS_DZSX'' THEN
                      T1.ATTYPE_QTY
                   END) AS LTSXGFSL,
               SUM(CASE
                     WHEN T1.C_DV_ISSUE_MODE = ''SS'' AND T1.IS_STOP = ''0'' THEN
                      T1.ATTYPE_QTY
                   END) AS QTLTSXGFSL,
               SUM(CASE
                     WHEN (T1.C_DV_ISSUE_MODE LIKE ''WSS_WX%'' OR
                          T1.C_DV_ISSUE_MODE LIKE ''WSS_WS%'') AND
                          T1.C_DV_ISSUE_MODE NOT LIKE ''%ZF'' AND
                          T1.C_DV_ISSUE_MODE NOT IN
                          (''WSS_WX_LG'',
                           ''WSS_WS_PG'',
                           ''WSS_WX_FGKXS'',
                           ''WSS_WS_DZSX'') THEN
                      T1.ATTYPE_QTY
                   END) AS XFXGFSL,
               SUM(CASE
                     WHEN T1.C_DV_ISSUE_MODE LIKE ''%ZF'' OR
                          T1.C_DV_ISSUE_MODE IN (''WSS_WX_LG'', ''WSS_WS_PG'') THEN
                      T1.ATTYPE_QTY
                   END) AS ZFGFSL,
               SUM(T1.ATTYPE_COST_OC) AS QMCB,
               SUM(T1.ATTYPE_AMOUNT_OC) AS QMSZ,
               SUM(CASE
                     WHEN T1.C_DV_ISSUE_MODE = ''WSS_WX_FGKXS'' THEN
                      T1.ATTYPE_AMOUNT_OC
                   END) AS FLTGFSZ,
               S', '0', null, 'A1028', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('0CAA36205A7942668D8BE2C825F13111', 'A00065', '债券投资明细', '
--债券投资明细
/*
C_DV_ISSUE_MODE  发行方式
C_DV_INVEST_CLS  投资分类
C_DAI_CODE  核算项目
C_CA_CODE  帐户或费用代码
C_SEC_VAR_CODE  证券品种
*/


SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(T8.CPDM, '''') AS CPDM,
       NVL(T9.SSSC, T1.JYCSDM) AS JYCSDM,
       NVL(T1.ZQDM, '''') AS ZQDM,
       NVL(T1.ZQMC, '''') AS ZQMC,
       NVL(T2.MRSL, 0) AS MRSL,
       NVL(T2.MRJE, 0) AS MRJE,
       NVL(T2.MCSL, 0) AS MCSL,
       NVL(T2.MCJE, 0) AS MCJE,
       NVL(T1.QMSL, 0) AS QMSL,
       NVL(T1.QMCB, 0) AS QMCB,
       NVL(CASE
             WHEN T8.GZFF = ''1'' THEN
              T1.QMCB
             ELSE
              T1.QMSZ
           END,
           0) AS QMSZ,
       NVL(T1.QMGZZZ, 0) AS QMGZZZ,
       NVL(CASE
             WHEN T8.GZFF = ''1'' THEN
              T1.QMSZ
           END,
           0) AS YZJZ,
       NVL(NVL(T3.ZQLB, T9.ZQLB), '''') AS ZQLB,
       NVL(NVL(T3.FXRDM, T9.FXRDM), '''') AS FXRDM,
       NVL(NVL(T3.FXRMC, T9.FXRMC), '''') AS FXRMC,
       NVL(NVL(T3.HYFL, T9.HYFL), '''') AS HYFL,
       NVL(NVL(T6.N_JZCE, T9.N_JZCE), '''') AS FXRJZC,
       NVL(FU_GET_ZQPJ(''A00180'',T5.PJNR), ''无评级'') AS ZTPJ,
       NVL(FU_GET_ZQPJ(''A00167'',T4.PJNR), ''无评级'') AS ZXPJ,
       NVL(NVL(T3.FXRQ, T9.FXRQ), '''') AS FXRQ,
       NVL(NVL(T3.ZQDQRQ, T9.ZQDQRQ), '''') AS DQRQ,
       NVL(NVL(T3.ZQFXFS, T9.ZQFXFS), '''') AS FXFS,
       NVL(NVL(T3.ZQMZ, T9.ZQMZ), '''') AS MZ,
       NVL(NVL(T3.PMLL, T9.PMLL), ''0'') AS PMLL,
       NVL(NVL(T3.XZJQ, T9.XZJQ), '''') AS XZJQ,
       NVL(CASE
             WHEN T1.C_SEC_VAR_CODE_SUB = ''ZQ_ZCZQH'' THEN
              NVL(T3.ZCZCZQLB, T9.ZCZCZQLB)
           END,
           '''') AS ZCZCZQLB,
       NVL(CASE
             WHEN T1.C_SEC_VAR_CODE_SUB = ''ZQ_ZCZQH'' THEN
              NVL(T3.YSQYRDM, T9.YSQYRDM)
           END,
           '''') AS YSQYRDM,
       NVL(CASE
             WHEN T1.C_SEC_VAR_CODE_SUB = ''ZQ_ZCZQH'' THEN
              NVL(T3.YSQYRMC, T9.YSQYRMC)
           END,
           '''') AS YSQYRMC,
       NULL AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT T1.PF_ID,
               T1.BIZ_DATE,
               GET_CODE(''C_MKT_CODE'', T1.MARKET_CODE) AS JYCSDM,
               T1.MARKET_CODE,
               T1.SYMBOL_CODE,
               CASE
                 WHEN INSTR(T1.SYMBOL_CODE, '' '') > 0 THEN
                  SUBSTR(T1.SYMBOL_CODE,
                         1,
                         INSTR(T1.SYMBOL_CODE, '' '', -1) - 1)
                 ELSE
                  T1.SYMBOL_CODE
               END AS ZQDM,
               MAX(T1.SEC_CODE_NAME) AS ZQMC,
               SUM(T1.ATTYPE_QTY) AS QMSL,
               SUM(T1.ATTYPE_COST_OC) AS QMCB,
               SUM(T1.ATTYPE_AMOUNT_OC) AS QMSZ,
               SUM(T1.N_HLDVVA_L) AS QMGZZZ,
               MAX(T1.C_SEC_VAR_CODE_SUB) AS C_SEC_VAR_CODE_SUB
          FROM TC_HP_PB_DOM_INFO T1
         WHERE T1.PF_ID ${PFID}
           AND T1.BIZ_DATE = ''${FENDDATE}''
           AND T1.C_D', '0', null, 'A1029', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('90B96773858643679BE7EFA2B77EC91E', 'A00053', '账户汇总', '/*
UPDATE TC_PF_PB_TA_ACCOUNT SET MDFY_TIME = '''';
ALTER TABLE TC_PF_PB_TA_ACCOUNT MODIFY MDFY_TIME VARCHAR2(8);
UPDATE TC_PF_PB_TA_ACCOUNT T1 SET MDFY_TIME = (SELECT D_LASTMODIFY FROM TR_DF_TA_CUSTINFO T2
WHERE T2.C_FUNDACCO = T1.TAACCOUNTID AND T2.PF_TYPE = T1.PF_TYPE);
*/

WITH V_ACCOUNT AS
 (SELECT DJJGDM, --登记机构代码
         DJJGMC, --登记机构名称
         CUSTTYPE GRJGBZ, --个人机构标志
         F_INVESTTYPE AS TZZLX, --投资者类型 
         NVL(SUM(CASE
                   WHEN D_OPENDATE = ''${FENDDATE}'' THEN
                    KHSL
                 END),
             0) AS BQKHS, --本期开户数
         NVL(SUM(CASE
                   WHEN D_LASTMODIFY = ''${FENDDATE}'' AND F_ACCOUNT_STATUS = ''T'' THEN
                    KHSL
                 END),
             0) AS BQXHS, --本期销户数
         NVL(SUM(CASE
                   WHEN F_ACCOUNT_STATUS IN (''F'', ''N'') THEN
                    KHSL
                 END),
             0) AS QMZHS, --本期账户数
         NVL(SUM(CASE
                   WHEN IS_VALUES = ''1'' AND F_ACCOUNT_STATUS IN (''F'', ''N'') THEN
                    KHSL
                 END),
             0) AS QMYCCDHS, --期末有持仓的户数
         NVL(SUM(CASE
                   WHEN IS_VALUES = ''0'' AND F_ACCOUNT_STATUS IN (''F'', ''N'') THEN
                    KHSL
                 END),
             0) AS QMWCCDHS, --期末无持仓的户数
         NVL(SUM(CASE
                   WHEN IS_VALUES = ''0'' AND F_TRANSACTION = ''0'' AND
                        F_ACCOUNT_STATUS IN (''F'', ''N'') THEN
                    KHSL
                 END),
             0) AS JZQMCWYJYDHS, --截止期末从未有交易的户数
         NVL(SUM(CASE
                   WHEN IS_VALUES = ''0'' AND F_TRANSACTION = ''1'' AND
                        F_ACCOUNT_STATUS IN (''F'', ''N'') THEN
                    KHSL
                 END),
             0) AS JZQMCJYJYDHS --截止期末曾经有交易的户数
    FROM (SELECT MAX(T1.F_INVESTTYPE) AS F_INVESTTYPE, --投资者类型
                 MIN(T1.F_ACCOUNT_STATUS) AS F_ACCOUNT_STATUS, --账户状态
                 MAX(T1.F_TRANSACTION) AS F_TRANSACTION, --是否有交易 0 无交易 1 有交易
                 MAX(T1.CUSTTYPE) AS CUSTTYPE, --个人机构标志
                 MAX(T1.D_LASTMODIFY) AS D_LASTMODIFY, --修改日期
                 MIN(T1.D_OPENDATE) AS D_OPENDATE, --开户日期
                 MAX(CASE
                       WHEN T3.TAACCOUNTID IS NOT NULL THEN
                        ''1''
                       ELSE
                        ''0''
                     END) AS IS_VALUES, --是否有持仓 0 无 1 有
                 COUNT(DISTINCT T1.INVESTOR) AS KHSL,
                 T2.DJJGDM, --登记机构代码
                 T2.DJJGMC, --登记机构名称
                 T1.INVESTOR -- 同一个投资者
            FROM (SELECT T1.TAACCOUNTID,
                         T1.PF_TYPE,
                         CASE
                           WHEN T1.INDIVIDUALORINSTITUTION = ''1'' THEN
                            ''01''
                           WHEN T1.INDIVIDUALORINSTITUTION = ''0'' THEN
                            ''02''
                           WHEN T1.INDIVIDUALORINSTITUTION = ''2'' THEN
                            ''03', '0', null, 'A1016', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('FB1A257BE57F4F86897E80F003BF29E2', 'A00062', '资产组合', 'WITH TT1 AS --报表头部
 (SELECT MAX(KEY_ID) AS JGBH,
         SUBSTR(''${FENDDATE}'', 1, 4) AS BGND,
         ''1'' AS BGQJ,
         ''${FENDDATE}'' AS QCRQ,
         ''${FENDDATE}'' AS QMRQ
    FROM TP_GL_EXHIB_DATADICT
   WHERE CLASS_ID = ''A00253''),
/*TT2 AS --组合与报表模版
 (SELECT PF_ID, CPDM, ZCLB
    FROM (SELECT PF_ID, NVL(CPDM, TA_PF_ID) AS CPDM
            FROM V_PF_CPDM
           WHERE PF_ID is not null 
          ) T1,
         (SELECT ''1'' AS ZCLB
            FROM DUAL
          UNION ALL
          SELECT ''2''
            FROM DUAL
          UNION ALL
          SELECT ''9''
            FROM DUAL) T2),*/
TT3 AS
 (
  
  SELECT PF_ID, JYCSDM, ''199'' AS ZCLB, SUM(JE) AS JE,SUM(JE2) JE2
    FROM (
           --应收清算款 
           SELECT PF_ID, JYCSDM, ''3003'' AS ZCLB, --JE,JE2
           CASE WHEN JE>0 THEN JE WHEN ZCLB=''3102.48'' THEN JE ELSE 0 END JE,
           CASE WHEN JE2>0 THEN JE2 WHEN ZCLB=''3102.48'' THEN JE2 ELSE 0 END JE2
             FROM (SELECT PF_ID,
                           --MARKET_CODE,
                           GET_CODE(''C_MKT_CODE'', MARKET_CODE) AS JYCSDM,
                           SUBSTR(SUBJ_ID, 1, 7) AS ZCLB,
                           SUM(ATTYPE_AMOUNT_OC) AS JE
                           ,SUM(ATTYPE_COST_OC) AS JE2
                    --SELECT *
                      FROM TC_HP_PB_DOM_INFO
                     WHERE BIZ_DATE = ''${FENDDATE}''
                       AND PF_ID ${PFID} 
                       --AND SUBSTR(SUBJ_ID, 1, 4) = ''3003''
                      -- AND SUBSTR(SUBJ_ID, 1, 7) <> ''3003.05'' 
                      -- AND SUBSTR(SUBJ_ID, 1, 10) <> ''3003.01.08''
                       AND ((SUBSTR(SUBJ_ID, 1, 4) = ''3003''
                       AND SUBSTR(SUBJ_ID, 1, 7) <> ''3003.05'' 
                       --AND SUBSTR(SUBJ_ID, 1, 10) <> ''3003.01.08'')OR SUBSTR(SUBJ_ID, 1, 7)=''3102.47'')
                       AND SUBSTR(SUBJ_ID, 1, 10) <> ''3003.01.08'')OR SUBSTR(SUBJ_ID, 1, 7)=''3102.47''OR SUBSTR(SUBJ_ID, 1, 7)=''3102.48'')
                     GROUP BY PF_ID, SUBSTR(SUBJ_ID, 1, 7), MARKET_CODE) A
            --WHERE JE > 0 
           
           UNION ALL
           
           --1021:备付金、1031/1041:保证金、1203:应收股利、1204:应收利息、1207:应收销售款、1207:应收申购款、1221:其他应收款、1501:待摊费用
           SELECT PF_ID,
                   CASE
                     WHEN SUBSTR(SUBJ_ID, 1, 4) IN (''1021'', ''1031'', ''1041'') THEN
                      GET_CODE(''C_CA_CODE'', C_CA_CODE)
                     WHEN SUBSTR(SUBJ_ID, 1, 4) = ''1024'' AND C_DAI_CODE LIKE ''%ZJ'' THEN
                      GET_CODE(''C_CA_CODE'', C_CA_CODE)
                     WHEN SUBSTR(SUBJ_ID, 1, 4) IN (''1203'', ''1204'') THEN
                      GET_CODE(''C_MKT_CODE'', MARKET_CODE)
                     ELSE
                      ''199''
                   END AS JYCSDM,
                   SUBSTR(SUBJ_ID, 1, 4) AS ZCLB,
                   SUM(ATTYPE_AMOUNT_OC) AS JE
                   ,SUM(ATTYPE_COST_OC) AS JE2
             FROM TC_HP_PB_DOM_INFO
            WHERE BIZ_DATE = ''${FENDDATE}''
            ', '0', null, 'A1026', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('D32F1E102B1B42AEBB57FC4BDB7AF289', 'A00047', '产品成立信息', '/*

历史的成立数据需要初始化
有TA的数据从TA获取，无TA的数据需要从凭证表或维护的TA销售数据中获取，并与成立日凭证进行核对
报价回购没有成立数据，TA第一天的申购数据当成成立数据使用

*/

SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH, --机构编号
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND, --年度报告
       ''1'' AS BGQJ, --报告期间
       ''${FENDDATE}'' AS QCRQ, --期初日期
       ''${FENDDATE}'' AS QMRQ, --期末日期
       T3.CPDM, --产品代码
       CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          ''0''
         ELSE
          ''1''
       END AS HTSFYSX, --合同是否有效
       CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          ''''
         ELSE
          T1.PF_SETUP_DATE
       END AS HTSXRQ, --合同生效日期
       CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          0
         ELSE
              CASE WHEN T1.PF_SETUP_DATE = ''${FENDDATE}'' 
                  THEN NVL(T6.N_SELL_MONEY,SUM(T4.CONFIRMEDAMOUNT - NVL(T4.CHARGE, 0) + NVL(T4.INTEREST, 0)))
                  ELSE SUM(T4.CONFIRMEDAMOUNT - NVL(T4.CHARGE, 0) + NVL(T4.INTEREST, 0)) END
       END AS SJMJJE, --实际募集金额
       CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          0
         ELSE
        CASE WHEN T1.PF_SETUP_DATE = ''${FENDDATE}'' 
                  THEN   NVL(T6.N_SETT_MONEY,SUM(T4.CONFIRMEDVOL))
                  ELSE SUM(T4.CONFIRMEDVOL) END
       END AS SJMJFS, --实际募集份额
        CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          0
         ELSE
           CASE WHEN T3.JHLX=''1'' THEN 1 ELSE
          NVL(COUNT(DISTINCT T5.CERTIFICATENO || T5.CERTIFICATETYPE ||
                    T5.INVESTORNAME),
              0) END
       END AS YXRGRS, --有效认购人数
       CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          0
         ELSE
          (CASE
            WHEN T3.CPLX = ''1'' THEN
             SUM(CASE
                   WHEN T4.EXCHANGEFLAG IN (''0'', ''1'') THEN
                    T4.CONFIRMEDAMOUNT - NVL(T4.CHARGE, 0) + NVL(T4.INTEREST, 0)
                   ELSE
                    0
                 END)
            
          END)
       END AS CNMJJE, --场内募集金额
       CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          0
         ELSE
          (CASE
            WHEN T3.CPLX = ''1'' THEN
             SUM(CASE
                   WHEN T4.EXCHANGEFLAG IN (''0'', ''1'') THEN
                    T4.CONFIRMEDVOL
                   ELSE
                    0
                 END)
           
          END)
       END AS CNMJFS, --场内募集份额
       CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          0
         ELSE
          (CASE
            WHEN T3.CPLX = ''1'' THEN
             SUM(CASE
                   WHEN T4.EXCHANGEFLAG NOT IN (''0'', ''1'') THEN
                    T4.CONFIRMEDAMOUNT - NVL(T4.CHARGE, 0) + NVL(T4.INTEREST, 0)
                   ELSE
                    0
                 END)
           
          END)
       END AS CWMJJE, --场外募集金额
       CASE
         WHEN T1.FUND_TYPE = ''9'' THEN
          0
         ELSE
          (CASE
            WHEN T3.CPLX = ''1'' THEN
             SUM(CASE
                   WHEN EXCHANGEFLAG NOT IN (''0'', ''1'') THEN
                    CONFIRMEDVOL
                   ELSE
              ', '0', null, 'A1008', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('FD7A946A85D34958B053B7308A01A9B8', 'A00040', '产品基本信息', '/*

1、?同一产品下设的多个下属产品/份额类别统一投资运作时，本接口只报送主产品（如公募分级基金、结构化资产管理计划）。
2、?同一产品下设的多个下属产品/份额类别独立投资运作时，每个下属产品/份额类别都需要通过本接口分别报送（如管理人中管理人产品的子资产单元、养老金产品的分期账户）。
3、?公募基金和集合资产管理计划必须填写托管人相关信息，未作独立托管的单一资产管理计划可不填写托管人相关信息。
4、?“产品类别”中“股票基金”指80%以上的基金资产投资于股票的的公募基金；“债券基金”指80%以上的基金资产投资于债券的公募基金；“货币市场基金”指仅投资于货币市场工具的的公募基金；“基金中基金”是指80%以上的基金资产投资于其他基金份额的的公募基金；“混合基金”指投资于股票、债券、货币市场工具或其他基金份额，并且股票投资、债券投资、基金投资的比例不符合前述规定的公募基金；“其他基金”是指除以上类别之外的公募基金。
5、?“产品类别”中“固定收益类”指投资于存款、债券等债权类资产的比例不低于产品总资产80%的资产管理计划；“权益类”指投资于股票、未上市企业股权等股权类资产的比例不低于产品总资产80%的资产管理计划；“商品及金融衍生品类”指投资于商品及金融衍生品的持仓合约价值的比例不低于产品总资产80%，且衍生品账户权益超过产品总资产20%的资产管理计划；“混合类”投资于债权类、股权类、商品及金融衍生品类资产的比例未达到前三类产品标准的的资产管理计划。
6、?“受托责任”中“两者兼具”指产品采用指数化投资为主、主动性投资为辅的策略（如指数增强型基金）。通道类产品归为“被动投资”。
7、?“基金中基金”指80%以上的产品资产投资于其他产品份额的的产品。
8、?“混合投资偏向性”中“偏股”指产品合同约定投资于股票的资产占基金净值60%以上；“偏债”指产品合同约定投资于债券的资产占基金净值60%以上；合同内无相关偏向说明则归为“灵活配置”。
9、?一码通账户账号在下列日期孰早日完成首次报送：（1）开户日期起5个交易日（含）内；（2）使用账户开展投资活动首日。
10、?大集合产品“产品类型”填写“公募基金”，“是否大集合产品”填“是”，产品代码填写S码。
11、?需要中国证监会核准募集的公募基金在下列日期孰早日完成首次报送：（1）核准日期起5个交易日（含）内；（2）募集开始日期。
12、?公募基金从首次报送（含）到最后运作日期（含）之间的每个交易日报送。
13、?资产管理计划从成立日期（含）到计划终止日期（含）之间的每个交易日报送。


*/

SELECT 
  T0.JGBH,--机构编号
  T0.BGND,--报告年度
  T0.BGQJ,--报告期间
  T0.QCRQ,--期初日期
  T0.QMRQ,--期末日期
  t0.CPDM,--产品代码
  T0.CPMC,--产品名称
  T0.CPJC,--产品简称
  t0.CPYWMC,--产品英文名称
  t0.GLRDM,--管理人代码
  t0.GLRMC,--管理人名称
  t0.SFDSFTG,--是否第三方托管
  t0.TGRDM,--托管人代码
  t0.TGRMC,--托管人名称
  t0.TGRFZJGMC,--托管人分支机构名称
  t0.JWTGRZWMC,--境外托管人中文名称
  t0.JWTGRYWMC,--境外托管人英文名称
  t0.DJJGDM,--登记机构代码
  t0.DJJGMC,--登记机构名称
  t0.TZGWDM,--投资顾问代码
  t0.TZGWZWMC,--投资顾问中文名称
  t0.TZGWYWMC,--投资顾问英文名称
  t0.JWTZGWZWMC,--境外投资顾问中文名称
  t0.JWTZGWYWMC,--境外投资顾问英文名称
  t0.LSSWSDM,--律师事务所代码
  t0.LSSWSMC,--律师事务所名称
  t0.JBLSMC,--经办律师名称
  t0.KJSSWSDM,--会计师事务所代码
  t0.KJSSWSMC,--会计师事务所名称
  t0.YMTZHZH,--一码通账户账号
  t0.CPLB,--产品类别
  t0.YZFS,--运作方式
  t0.KFPL,--开放频率
  t0.STZR,--受托责任
  t0.YQMJJE,--预期募集金额
  --t0.CXQX,--存续期限
  CASE WHEN T0.CPLX=''1'' THEN ''9999''
       WHEN T0.CPLX=''2'' AND T0.PF_END_DATE_PRE  = ''99981231'' THEN ''9999''
       WHEN T0.PF_SETUP_DATE IS NULL THEN ''9999''
       ELSE TO_CHAR(ROUND((CEIL(TO_DATE(T0.PF_END_DATE_PRE,''yyyymmdd'')-TO_DATE(T0.PF_SETUP_DATE,''yyyymmdd'')))/360,1))
       END AS CXQX,--存续期限
  T0.JSBZ,--结算币种
  t0.MZ,--面值
  t0.GLFSF,--管理费算法
  --t0.GLFL,--管理费率
  --t0.TGFL,--托管费率
  --t0.XSFWFL,--销售服务费率
  ROUND(t0.GLFL,6) as GLFL,--管理费率
  ROUND(t0.TGFL,6) as TGFL,--托管费率
  ROUND(t0.XSFWFL,6) as XSFWFL,--销售服务费率
  t0.YJBJJZ,--业绩比较基准
  t0.SFTQYJBC,--是否提取业绩报酬
  t0.SFCZCYGPZYYW,--是否出资参与股票质押业务
  --CASE WHEN t0.FOFORMOM = ''1'' THEN ''1'' ELSE ''0'' END SFJJZJJ,--是否基金中基金
  --CASE WHEN t0.FOFORMOM = ''2'' THEN ''1'' ELSE ''0'' END SFGLRZGLRCP,--是否管理人中管理人产品
  t0.SFJJZJJ,--是否基金中基金 20191023 rtlhs
  t0.SFGLRZGLRCP,--是否管理人中管理人产品 20191023 rtlhs
  t0.SFZZCDY,--是否子资产单元
  t0.GLRZGLRCPDM,--管理人中管理人产品代码
  CASE WHEN t0.SFQDII = ''PB0027002'' THEN ''1'' ELSE ''0'' END SFQDII,--是否合格境内机构投资者
  t0.SFJZXCP,--是否净值型产品
  t0.GZFF, --估值方法
  t0.GZPL, --估值频率
  t0.SQQRTS,--申请确认天数
  t0.CPLX,--产品类型
  CASE WHEN t0.CPLX = ''1'' THEN t0.HZRQ END HZRQ,--核准日期
  CASE WHEN t0.CPLX = ''1'' THE', '0', null, 'A1001', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('6497CF43484E43B2B575CB70595D8C94', 'A00051', '产品净值信息', 'WITH TT AS
 (SELECT B.PF_ID,
         B.CPDM,
         B.TA_PF_ID,
         DECODE(C.ATTACHED_VALUE, ''PB22002'', 1, 0) AS IS_HB,
         D.CPLB
    FROM TC_PF_BSC_INFO A
    JOIN V_PF_CPDM B
      ON A.PF_ID = B.TA_PF_ID
     AND B.PF_ID ${PFID}
     AND B.CHG_DATE <= ''${FENDDATE}''
     AND B.END_DATE > ''${FENDDATE}''
    JOIN TC_PF_BSC_INFO_ATTACHED C
      ON A.PF_ID = C.PF_ID
     AND C.ATTACHED_CODE = ''PB0022''
    JOIN V_PF_BSC_INFO_ATTACHED D
      ON A.PF_ID = D.PF_ID)

SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,
       SUBSTR(''${FENDDATE}'', 1, 4) BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' QCRQ,
       ''${FENDDATE}'' QMRQ,
       CPZDM AS CPZDM,
       NVL(NVL(CPDM, FZJJDM), CPZDM) AS CPDM,
       ''${FENDDATE}'' AS GZRQ,
       ROUND(MAX(ZCZZ) OVER(PARTITION BY CPZDM ORDER BY CPZDM), 2) AS ZCZZ,
       ROUND(ZCJZ, 2) AS ZCJZ,
       ROUND(DWJZ, 4) AS DWJZ,
       ROUND(LJDWJZ, 4) AS LJDWJZ,
       ROUND(MWFSY, 6) AS MWFSY,
       ROUND(NVL(QRNHSYL, MWFSY), 6) AS QRNHSYL,
       '''' AS BZ,
       ''1060000001'' AS PF_ID
  FROM (SELECT T1.BIZ_DATE,
               T3.CPDM AS CPZDM,
               T1.FZJJDM,
               T4.CPDM,
               NVL(CASE
                     WHEN T3.CPLB = ''03'' THEN
                      T1.PF_SHARE
                     ELSE
                      T1.NV_MV
                   END,
                   T2.NV_MV) AS ZCJZ,
               T2.AT_TOT_MV AS ZCZZ,
               CASE
                 WHEN T3.IS_HB = 1 THEN
                  1
                 ELSE
                  NVL(T1.UNIT_NV, NVL(T2.UNIT_NV, 1))
               END AS DWJZ,
               CASE
                 WHEN T3.IS_HB = 1 THEN
                  1
                 ELSE
                  NVL(T1.AT_CALCFEE_TOT_MV,
                      NVL(T2.AT_CALCFEE_TOT_MV,
                          NVL(T1.UNIT_NV, NVL(T2.UNIT_NV, 1))))
               END AS LJDWJZ,
               NVL(T1.NV_MWFSY, NVL(T2.NV_MWFSY, '''')) AS MWFSY,
               T1.NV_QRNHSYL AS QRNHSYL
          FROM (select * from TC_PF_NAV_INFO where  BIZ_DATE = ''${FENDDATE}'') T2
          LEFT JOIN (select * from TC_PF_NAV_INFO_SUB where  BIZ_DATE = ''${FENDDATE}'') T1
            ON T1.PF_ID = T2.PF_ID
         INNER JOIN TT T3
            ON T3.PF_ID = T2.PF_ID
          LEFT JOIN TT T4
            ON T4.TA_PF_ID = T1.FZJJDM)
 --WHERE BIZ_DATE = ''${FENDDATE}''            ', '0', null, 'A1012', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('0D77527D936B4F1CBDFCA59396DFFE1E', 'A00045', '产品募集信息', '
SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH, --机构编号
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND, --年度报告
       ''1'' AS BGQJ, --报告期间
       ''${FENDDATE}'' AS QCRQ, --期初日期
       ''${FENDDATE}'' AS QMRQ, --期末日期
       T3.CPDM, --产品代码
       ''${FENDDATE}'' AS QRRQ, --确认日期
       T1.COLLECT_BEGIN_DATE AS MJKSRQ, --募集开始日期
       T1.COLLECT_END_DATE AS MJJSRQ, --募集结束日期
       CASE
         WHEN T1.COLLECT_END_DATE IS NOT NULL AND
              T1.COLLECT_END_DATE <= ''${FENDDATE}'' THEN
          ''1''
         ELSE
          ''0''
       END SFYJSMJ, --是否已经结束募集
       NVL(SUM(CASE
                 WHEN T4.TRANSACTIONCFMDATE = ''${FENDDATE}'' THEN
                  T4.CONFIRMEDAMOUNT
                 ELSE
                  0
               END),
           0) AS RGJE, --认购金额
       NVL(SUM(T4.CONFIRMEDAMOUNT), 0) AS LJRGJE, --累计认购金额
       NVL(SUM(CASE
                 WHEN T4.EXCHANGEFLAG IN (''0'', ''1'') AND
                      T4.TRANSACTIONCFMDATE = ''${FENDDATE}'' THEN
                  T4.CONFIRMEDAMOUNT
               END),
           0) AS CNRGJE, --场内认购金额
       NVL(SUM(CASE
                 WHEN T4.EXCHANGEFLAG IN (''0'', ''1'') THEN
                  T4.CONFIRMEDAMOUNT
               END),
           0) AS CNLJRGJE, --场内累计金额
       NVL(SUM(CASE
                 WHEN T4.EXCHANGEFLAG NOT IN (''0'', ''1'') AND
                      T4.TRANSACTIONCFMDATE = ''${FENDDATE}'' THEN
                  T4.CONFIRMEDAMOUNT
               END),
           0) AS CWRGJE, --场外认购金额
       NVL(SUM(CASE
                 WHEN T4.EXCHANGEFLAG NOT IN (''0'', ''1'') THEN
                  T4.CONFIRMEDAMOUNT
               END),
           0) AS CWLJRGJE, --场外累计认购金额
       NULL AS BZ --备注
       --,T2.PF_ID
       ,''1060000001'' as PF_ID
  FROM TC_PF_BSC_INFO T1
 INNER JOIN TP_GL_FUNDCODE_MAP T2
    ON T1.PF_ID = T2.FIN_PF_ID
   AND T2.SRC_SYS = ''TA''
 INNER JOIN V_PF_BSC_INFO_ATTACHED T3
    ON T1.PF_ID = T3.PF_ID
 LEFT JOIN TR_DF_TA_TDCON T4
    ON T2.TA_PF_ID = T4.FUNDCODE
   AND T4.TRANSACTIONCFMDATE <= ''${FENDDATE}''
   AND T4.BUSINESSCODE = ''01''
   AND T4.RETURNCODE = ''1''
 WHERE T3.CPLX = ''1''
   AND T2.PF_ID ${PFID}
   AND T1.COLLECT_BEGIN_DATE <= ''${FENDDATE}''
   AND (T1.COLLECT_END_DATE IS NULL OR T1.COLLECT_END_DATE >= ''${FENDDATE}'')

 GROUP BY T3.CPDM, T1.COLLECT_BEGIN_DATE, T1.COLLECT_END_DATE,T2.PF_ID
 ORDER BY T3.CPDM                                                                                                                                                                                                                                                                                                                                                                                ', '0', null, 'A1006', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('A148893E2405430BADB2E51B2646E7A6', 'A00049', '产品运行信息', '/*-- Create table
create table TC_PF_SHARECONV_INFO
(
  id             VARCHAR2(50) not null,
  pf_id          VARCHAR2(32) not null,
  pf_type        VARCHAR2(8),
  shareconv_date VARCHAR2(8) not null,
  shareconv_type VARCHAR2(8) not null,
  create_prsn    VARCHAR2(20),
  create_time    DATE,
  mdfy_prson     VARCHAR2(20),
  mdfy_time      DATE
)
tablespace DATA_INDB
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64K
    next 1M
    minextents 1
    maxextents unlimited
  );
-- Add comments to the columns 
comment on column TC_PF_SHARECONV_INFO.id
  is ''ID'';
comment on column TC_PF_SHARECONV_INFO.pf_id
  is ''产品代码'';
comment on column TC_PF_SHARECONV_INFO.pf_type
  is ''产品类型'';
comment on column TC_PF_SHARECONV_INFO.shareconv_date
  is ''份额折算日期'';
comment on column TC_PF_SHARECONV_INFO.shareconv_type
  is ''份额折算类型'';
comment on column TC_PF_SHARECONV_INFO.create_prsn
  is ''创建人'';
comment on column TC_PF_SHARECONV_INFO.create_time
  is ''创建时间'';
comment on column TC_PF_SHARECONV_INFO.mdfy_prson
  is ''修改人'';
comment on column TC_PF_SHARECONV_INFO.mdfy_time
  is ''修改时间'';
  
  
  
  
1、同一产品下设多个下属产品/份额类别时，按照产品主代码报送。
2、产品募集期间交易状态为“可认购”，产品成立后，在开放申赎之前，交易状态为“停止认购”。
3、涉及转型的产品按照转型后的信息填写合同生效日期、合同到期日期等信息。
4、已清算规模是指产品在当期清算分配的规模。若产品一次清算完毕，则已清算规模=产品清算终止日的资产净值，产品资产净值为0；若产品需二次清算，已清算规模=产品清算终止日的资产净值-产品资产净值（期末报送时点）。对于单一资产管理计划，已清算规模按照最后一个估值日资产净值填写。
5、费用总和：从产品资产中支付的所有费用，其中托管费、销售服务费、管理费、业绩报酬采用计提口径。
6、LOF、ETF、保证金理财货币基金和分级基金等需要填写场内总份数。
7、ETF基金、保证金理财货币基金和分级基金需填写份额折算日期，其中分级基金填写最近一次份额折算日期。
8、前款中的保证金理财货币基金指T日赎回，T日当天即可将此资金用于股票投资的场内T+0货币基金。
9、公募基金从合同生效日期（含）到最后运作日期（含）之间的每个交易日报送。
资产管理计划从成立日期（含）到计划终止日期（含）之间的每个交易日报送。

交易状态    
1-可认购
2-停止认购
3-可申购赎回
4-可申购不可赎回
5-不可申购可赎回
6-停止申购赎回

*/


-- 产品级信息
WITH V_DATA_FUNDCODE AS (
SELECT T1.PF_ID AS FUNDCODE, -- 产品代码
       T2.CPDM, -- 备案代码
        CASE
          WHEN T3.PF_ID =''1060380069''  THEN ''1''
         WHEN T1.PF_END_DATE_PRE <= ''${FENDDATE}'' THEN
          ''1''
         ELSE
          ''0''
       END AS HTSFYZZ, --合同是否已终止
       CASE 
         WHEN T3.PF_ID =''1060380069''  THEN ''1''
         ELSE ''0''  END
      AS CPSFZTYZ, --产品是否暂停运作
       CASE
         WHEN T3.PF_ID =''1060380069''  THEN ''20190131''
         WHEN T2.CPLX = ''1'' THEN T1.PF_REAL_END_DATE
         ELSE T1.PF_END_DATE_PRE 
           END   AS HTZZRQ, --合同终止日期
       ROUND(T2.GLFL, 6) AS GLFL, --管理费率
       NVL(T5.TZGLFXZBJ, 0) AS TZGLFXZBJ, --投资管理风险准备金
       CASE
         WHEN T2.CPLX = ''1'' AND T2.SFSSJY = ''1'' THEN
          T2.SSRQ
         ELSE
          NULL
       END AS SSRQ, --上市日期
       CASE
         WHEN T2.CPLX = ''1'' AND T2.YZFS = ''1'' THEN
                NVL( FU_GET_ZJJRQ(T1.PF_ID, ''${FENDDATE}''),NVL(FU_GET_SGSHRQ(T2.CPDM,''${FENDDATE}''),''${FENDDATE}''))
       END AS SGKSRQ, --申购开始日期
       CASE
         WHEN T2.CPLX = ''1'' AND T2.YZFS = ''1'' THEN
                  NVL( FU_GET_ZJJRQ(T1.PF_ID, ''${FENDDATE}''),NVL(FU_GET_SGSHRQ(T2.CPDM,''${FENDDATE}''),''${FENDDATE}''))
       END AS SHKSRQ, --赎回开始日期
       CASE
         WHEN T2.CPLX = ''1'' THEN
          T6.SHARECONV_DA', '0', null, 'A1010', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('6971C4003CFD458DAA13EE75A0193218', 'A00058', '份额汇总', '                  
SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH, --机构编码
       SUBSTR(''${FENDDATE}'', 0, 4) BGND, --报告年度
       ''1'' BGQJ, --报告期间
       ''${FENDDATE}'' QCRQ, --期初日期
       ''${FENDDATE}'' QMRQ, --期末日期
       CPDM, --产品代码
       CNWBZ, --场内外标志
       NVL(TRIM(DISTRIBUTORCODE), ''209'') XSJGBH, --销售机构编码 大成为空暂时默认为直销
       CUSTTYPE AS GRJGBZ, --个人机构标志
       F_INVESTTYPE AS TZZLX, -- 投资者类型
       NVL(COUNT(TAACCOUNTID), 0) CYRS, --持有人数
       NVL(SUM(TOTVOLOFDISTA), 0) CYFS, --持有份数
       ROUND(NVL(SUM(CYSZ), 0),8) CYSZ, --持有市值
       '''' BZ,
       PFID
  FROM (SELECT SUM(CASE
                     WHEN T1.FUNDCODE IN (''511910'', ''511690'') THEN
                      T1.TOTVOLOFDISTA * 100
                     ELSE
                      T1.TOTVOLOFDISTA
                   END) TOTVOLOFDISTA,
               SUM(CASE
                     WHEN T1.FUNDCODE IN (''519898'') THEN
                      T1.TOTVOLOFDISTA * 0.01
                     ELSE
                      T1.TOTVOLOFDISTA * T3.NAV
                   END) CYSZ,
               T1.TAACCOUNTID, --基金账号
               T6.CPDM, --产品代码
                CASE
                 WHEN T1.EXCHANGEFLAG IN (''0'', ''1'') THEN
                  ''0'' --场内
                 ELSE
                  ''1''  --场外
               END AS CNWBZ, --场内外标志
               T1.DISTRIBUTORCODE, --销售商代码
               DECODE(T4.INDIVIDUALORINSTITUTION,
                      ''1'',
                      ''01'',
                      ''0'',
                      ''02'',
                      ''2'',
                      ''03'') AS CUSTTYPE, --个人机构标志
               T4.F_INVESTTYPE --投资者类型
               ,T2.PF_ID as PFID
          FROM TR_DF_TA_ACCRECDATA partition (PART_${FENDDATE}) T1 -- 份额数据
         INNER JOIN TP_GL_FUNDCODE_MAP T2
            ON T1.FUNDCODE = T2.TA_PF_ID
           AND T2.SRC_SYS = ''TA''
         INNER JOIN TR_DF_TA_DYINFOLITEM T3
            ON T3.TRANSACTIONCFMDATE = ''${FENDDATE}''
           AND T3.FUNDCODE = T1.FUNDCODE
           AND T3.PF_TYPE = ''YSS_45'' --NAV获取单位净值
         INNER JOIN TC_PF_PB_TA_ACCOUNT T4
            ON T1.TAACCOUNTID = T4.TAACCOUNTID
           AND T1.PF_TYPE = T4.PF_TYPE
         INNER JOIN TC_PF_BSC_INFO T5
            ON T2.FIN_PF_ID = T5.PF_ID
         INNER JOIN V_PF_CPDM T6
            ON T2.FIN_PF_ID = T6.TA_PF_ID
         WHERE  T1.TOTVOLOFDISTA > 0
           AND T2.PF_ID ${PFID}
           AND T5.PF_SETUP_DATE <= ''${FENDDATE}''
           AND T5.PF_REAL_END_DATE >= ''${FENDDATE}''
           AND T1.DISTRIBUTORCODE IN (SELECT XSJGBH FROM TC_DF_XSJGBH)
         GROUP BY T1.TAACCOUNTID,
                  T6.CPDM,
                  CASE
                    WHEN T1.EXCHANGEFLAG IN (''0'', ''1'') THEN
                     ''0''
                    ELSE
                     ''1''
                  END,
                  T1.DISTRIBUTORCODE,
                  T4.INDIVIDUALORINSTITUTION,
                  T4.F_INVESTTYPE,
                  T2.PF_ID
                  ) T
 GROUP BY CPDM, CNWBZ, DISTRIBUTORCODE, CUSTTY', '0', null, 'A1021', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('1D056EF7863A4E14B74440BBEC2FC1A0', 'A00063', '股票投资明细', '--股票投资明细
/*
C_DV_ISSUE_MODE  发行方式
C_DV_INVEST_CLS  投资分类
C_DAI_CODE  核算项目
C_CA_CODE  帐户或费用代码
C_SEC_VAR_CODE  证券品种
*/

SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(T4.CPDM, '''') AS CPDM,
       NVL(T1.JYCSDM, '''') AS JYCSDM,
       NVL(T1.ZQDM, '''') AS ZQDM,
       NVL(T1.ZQMC, '''') AS ZQMC,
       NVL(T2.MRSL, 0) AS MRSL,
       NVL(T2.MRJE, 0) AS MRJE,
       NVL(T2.MCSL, 0) AS MCSL,
       NVL(T2.MCJE, 0) AS MCJE,
       NVL(T1.QMSL, 0) AS QMSL,
       NVL(T1.FLTGFSL, 0) AS FLTGFSL,
       NVL(T1.LTSXGFSL, 0) AS LTSXGFSL,
       NVL(T1.QTLTSXGFSL, 0) AS QTLTSXGFSL,
       NVL(T1.XFXGFSL, 0) AS XFXGFSL,
       NVL(T1.ZFGFSL, 0) AS ZFGFSL,
       NVL(T1.QMCB, 0) AS QMCB,
       NVL(T1.QMSZ, 0) AS QMSZ,
       NVL(T1.FLTGFSZ, 0) AS FLTGFSZ,
       NVL(T1.LTSXGFSZ, 0) AS LTSXGFSZ,
       NVL(T1.QTLTSXGFSZ, 0) AS QTLTSXGFSZ,
       NVL(T1.XFXGFSZ, 0) AS XFXGFSZ,
       NVL(T1.ZFGFSZ, 0) AS ZFGFSZ,
       NVL(T3.GPLB, T4.GPLB) AS GPLB,
       NVL(T3.FXRDM, T4.FXRDM) AS FXRDM,
       NVL(T3.FXRMC, T4.FXRMC) AS FXRMC,
       NVL(T3.HYFL, T4.HYFL) AS HYFL,
       NULL AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT T1.PF_ID,
               T1.BIZ_DATE,
               GET_CODE(''C_MKT_CODE'', T1.MARKET_CODE) AS JYCSDM,
               T1.MARKET_CODE,
               T1.SYMBOL_CODE,
               CASE
                 WHEN INSTR(T1.SYMBOL_CODE, '' '') > 0 THEN
                  SUBSTR(T1.SYMBOL_CODE,
                         1,
                         INSTR(T1.SYMBOL_CODE, '' '', -1) - 1)
                 ELSE
                  T1.SYMBOL_CODE
               END AS ZQDM,
               MAX(T1.SEC_CODE_NAME) AS ZQMC,
               SUM(T1.ATTYPE_QTY) AS QMSL,
               SUM(CASE
                     WHEN T1.C_DV_ISSUE_MODE = ''WSS_WX_FGKXS'' THEN
                      T1.ATTYPE_QTY
                   END) AS FLTGFSL,
               SUM(CASE
                     WHEN T1.C_DV_ISSUE_MODE = ''WSS_WS_DZSX'' THEN
                      T1.ATTYPE_QTY
                   END) AS LTSXGFSL,
               SUM(CASE
                     WHEN T1.C_DV_ISSUE_MODE = ''SS'' AND T1.IS_STOP = ''0'' THEN
                      T1.ATTYPE_QTY
                   END) AS QTLTSXGFSL,
               SUM(CASE
                     WHEN (T1.C_DV_ISSUE_MODE LIKE ''WSS_WX%'' OR
                          T1.C_DV_ISSUE_MODE LIKE ''WSS_WS%'') AND
                          T1.C_DV_ISSUE_MODE NOT LIKE ''%ZF'' AND
                          T1.C_DV_ISSUE_MODE NOT IN
                          (''WSS_WX_LG'',
                           ''WSS_WS_PG'',
                           ''WSS_WX_FGKXS'',
                           ''WSS_WS_DZSX'') THEN
                      T1.ATTYPE_QTY
                   END) AS XFXGFSL,
               SUM(CASE
                     WHEN T1.C_DV_ISSUE_MODE LIKE ''%ZF'' OR
                          T1.C_DV_ISSUE_MODE IN (''WSS_WX_LG'', ''WSS_WS_PG'') THEN
                      T1', '0', null, 'A1027', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('D671087E7A9A49CB8AF364AD1F6A4A65', 'A00056', '交易汇总', '/*
1、?同一产品设置多个下属产品/份额类别时，按照产品主代码报送。
2、?只对本报告期的交易确认进行汇总报送，不包括失败的交易。
3、?场内交易第18-24项填写0。
4、?公募基金从募集开始日期（含）到最后运作日期（含）之间的每个交易确认日期报送。
资产管理计划从成立日期（含）到计划终止日期（含）之间的每个交易确认日期报送。
126转托管
127转托管入
128转托管出

133非交易过户
134非交易过户入
135非交易过户出


136 转换
137 转换入
138 转换出

1-转出
2-转入

01-个人
02-机构
03-产品

*/

WITH V_TRADE AS
 (SELECT FUNDCODE, --产品代码
         CUSTTYPE, --个人机构标识
         F_INVESTTYPE, -- 投资者类型
         TRANSACTIONACCOUNTID, --交易账号
         DISTRIBUTORCODE, --销售机构编号
         CNWBZ, --场内外标识
         SUM(QRFS) AS QRFS, --确认份额
         SUM(QRJE) AS QRJE, --确认金额
         BUSINESSCODE, --业务代码
         ZRZCBZ, --转入转出标志
         SUM(GHF) AS GHF, --过户费
         SUM(SXF) SXF, --手续费
         SUM(F_TOTALFARE) F_TOTALFARE, --费用合计
         SUM(SXFGGLR) SXFGGLR, --手续费归管理人
         SUM(SXFGXSJG) SXFGXSJG, --手续费归销售机构
         SUM(SXFGCPZC) SXFGCPZC, --手续费归产品资产
         SUM(HSF) HSF, --后收费
         SUM(HSFGGLR) HSFGGLR, --后收费归管理人
         SUM(HSFGXSJG) HSFGXSJG --后收费归销售机构
    FROM (SELECT B.FIN_PF_ID AS FUNDCODE, --产品代码
                 DECODE(E.INDIVIDUALORINSTITUTION,
                        ''1'',
                        ''01'',
                        ''0'',
                        ''02'',
                        ''2'',
                        ''03'') AS CUSTTYPE, --个人机构标识
                 E.F_INVESTTYPE, -- 投资者类型
                 A.TRANSACTIONACCOUNTID, --交易账号
                 DISTRIBUTORCODE, --销售机构编号
                 CASE
                   WHEN EXCHANGEFLAG IN (''0'', ''1'') THEN
                    ''0''
                   ELSE
                    ''1''
                 END CNWBZ, --场内外标识
                 SUM(CONFIRMEDVOL) QRFS, --确认份额
                 SUM(CONFIRMEDAMOUNT) QRJE, --确认金额
                 CASE
                   --ZJ_TA、JZ_SS，非交易过户的数据，如果外部业务代码为098 快速过户的，则返回 198快速过户
                   WHEN A.BUSINESSCODE IN (''12'',''14'',''15'') AND A.OUTBUSINESSCODE IN (''98'',''098'') THEN
                    ''198''
                   ELSE
                    D.RISK_CODE
                 END AS BUSINESSCODE, --业务代码
                 SUM(TRANSFERFEE) GHF, --过户费                 
                 --JZ_SS 的BUSINESSCODE=98  转为了  BUSINESSCODE=14，OUTBUSINESSCODE=98
                 CASE 
                   WHEN A.BUSINESSCODE = ''14'' AND A.OUTBUSINESSCODE IN (''98'',''098'') THEN ''1''
                   WHEN A.BUSINESSCODE = ''15'' AND A.OUTBUSINESSCODE IN (''98'',''098'') THEN ''2''
                   ELSE ''0''
                 END as ZRZCBZ,
                 --SUM(CASE WHEN BUSINESSCODE IN (''13'',''16'' ) THEN CHANGEFEE ELSE CHARGE END) SXF,--手续费
                 SUM(CHARGE) SXF, --手续费
                 SUM(TOTALTRANSFEE) F_TOTALFARE, --费用合计
                 --后收费的申购，不计算管理人费用
                 SUM(CASE WHEN A.BUSINESSCODE = ''02'' AND A.SHARECLASS = ''B'' THEN 0 
                   ELSE NVL(CHARGE, 0) - NVL(TRADEFARE4AGT, 0) - NVL(TRADEFARE4FUND, 0) 
                 END) SXFGGLR, --手续费归管理人
                 SUM(TRADEFARE4AGT) SXFGXSJG, --手续费归销售机构
                 SUM(TRADEFARE4FUND) SXFGCPZC, --手续费归产品资产
                 SUM(TOTALB', '0', null, 'A1019', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('D09E1A0D10B14E09BFDE4684106A5481', 'A00044', '产品文件信息', '/*
05产品文件信息
1、?同一产品下设多个下属产品/份额类别时，按照产品主代码报送。
2、?公募基金变更注册事项导致基金合同更改时，按“更新基金合同”报送。
3、?资产管理计划变更备案事项导致资产管理合同更改时，按“更新资产管理合同”报送。
4、?资产管理计划的计划说明书的内容发生变更后，按“更新计划说明书”报送。
5、?资产管理计划的风险揭示书的内容发生变更后，按“更新风险揭示书”报送。
6、?在文件生效日期起5个工作日（含）内报送。
首次全量报送存续的产品，报送最近生效日期的文件。
 */
 
 
 
 SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,--机构编号
       SUBSTR(''${FENDDATE}'', 1, 4) BGND,--报告年度
       ''1'' BGQJ,--报告期间
       ''${FENDDATE}'' QCRQ,--期初日期
       ''${FENDDATE}'' QMRQ,--期末日期
       NVL(D.CPDM, D.PF_ID) CPDM,--产品代码
       F.FILE_TYPE WJLX,--文件类型D
       F.OPERATEDATE SXRQ,--生效日期
       F.FILE_NAME WJMC,--文件名称
       '''' BZ--备注
      -- ,''1060000001'' as PF_ID
      ,C.PF_ID
  FROM TC_PF_BSC_INFO A
  INNER JOIN V_PF_BSC_INFO_ATTACHED D ON A.PF_ID = D.PF_ID
  INNER JOIN TC_REP_FILEUPLOAD F ON D.cpdm = F.CODE  
  INNER JOIN (SELECT DISTINCT PF_ID ,FIN_PF_ID FROM TP_GL_FUNDCODE_MAP WHERE SRC_SYS = ''TA'')  C  ON C.FIN_PF_ID  = A.PF_ID
 WHERE  F.TABLE_NAME=''TC_PF_FILE_INFO''
   AND A.PF_SETUP_DATE <= ''${FENDDATE}'' 
   AND C.PF_ID IS NOT NULL
   AND NVL(D.SFYLJCP, ''0'') <> ''1''
   AND NVL(D.SFJBYLJ, ''0'') <> ''1''
   AND NVL(D.SFSBJJ, ''0'') <> ''1''
   AND NVL(D.SFYYNJ, ''0'') <> ''1''
   AND F.OPERATEDATE = ''${FENDDATE}''
null, 'A1005', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('2BDAED272C0C406CBEA7043AECCDC406', 'A00026', '表3-1  存续产品分合同期限募集余额', '-- 取数据 测试条件 20181201 -20181231 
WITH TT AS (
select T0.CUR_D,
       T0.PF_OPERATING,
       T0.MV_AMOUNT,
       T0.PF_BEGIN_DATE,
       T0.PFTERMINATION_END_ID
  FROM (SELECT T0.PF_ID,
               T1.CUR_D, -- 币种
               T1.MV_AMOUNT, --期末金额
               T0.PF_OPERATING, --运行方式
               T0.PF_BEGIN_DATE, --产品起始时间
               T0.PFTERMINATION_END_ID, --产品实际终止日期 
               T1.BIZ_DATE
          FROM TMP_PF_PB_INFO T0
         INNER JOIN TC_PF_PB_COLLECT_RENEW T1
            ON T0.PF_ID = T1.PF_ID
         WHERE TO_CHAR(T0.PFTERMINATION_END_ID, ''YYYYMMDD'') > ''${FENDDATE}'' --存续产品
           AND T1.MV_SHARES > 0 --期末有持仓
           AND T1.BIZ_DATE = ''${FENDDATE}''
           AND NVL(T1.MV_AMOUNT, 0) > 0) T0
 INNER JOIN (SELECT DISTINCT T1.PF_ID
               FROM TP_GL_FUNDCODE_MAP T1
              INNER JOIN TC_PF_BSC_INFO_ATTACHED T2
                 ON T2.PF_ID = T1.FIN_PF_ID
              WHERE T1.SRC_SYS = ''TA''
                AND T2.ATTACHED_VALUE = ''${FUNDTYPE}'') T2
    ON T0.PF_ID = T2.PF_ID
)
SELECT LINE_ID, --行编号
       LINE_NAME1, --运行方式中文名称
       LINE_NAME2, -- 年份信息
       CASE WHEN SUM(AMOUNT_RMB) = 0 THEN NULL ELSE SUM(AMOUNT_RMB)/10000 END AS AMOUNT_RMB, --人民币总和
       CASE WHEN SUM(AMOUNT_WB) = 0 THEN NULL ELSE SUM(AMOUNT_WB)/10000 END  AS AMOUNT_WB, --外币总和
       CASE WHEN SUM(NVL(AMOUNT_RMB,0)+NVL(AMOUNT_WB,0))=0 THEN NULL ELSE SUM(NVL(AMOUNT_RMB,0)+NVL(AMOUNT_WB,0))/10000 END  AS HJ
  FROM (SELECT T0.LINE_ID, --行编号
               T0.LINE_NAME1, --运行方式中文名称
               T0.LINE_NAME2, -- 年份信息
               CASE WHEN CUR_D = ''CNY'' THEN NVL(MV_AMOUNT,0) ELSE 0  END AS AMOUNT_RMB,
               CASE WHEN CUR_D <> ''CNY'' THEN NVL(MV_AMOUNT,0) ELSE 0  END AS AMOUNT_WB
          FROM (SELECT *
                  FROM TP_GL_PB_HEAD T
                 WHERE REP_ID = ''PB12''
                   AND LINE_ID NOT IN (''e10000'',
                                       ''e20000'',
                                       ''e30000'',
                                       ''e40000'',
                                       ''e00000'')) T0
          LEFT JOIN
          (SELECT CUR_D, -- 币种
                SUM(MV_AMOUNT) AS MV_AMOUNT, --期末金额
                PF_OPERATING, --运行方式
                DATETYPE
           FROM (SELECT CUR_D, -- 币种
                        MV_AMOUNT, --期末金额
                        PF_OPERATING, --运行方式
                        CASE
                              WHEN PF_OPERATING IN (''PB2003'', ''PB2004'') AND
                               PFTERMINATION_END_ID - PF_BEGIN_DATE <= 30 THEN
                           ''1个月（含）以下''
                          WHEN PF_OPERATING IN (''PB2003'', ''PB2004'') AND
                               30 < PFTERMINATION_END_ID - PF_BEGIN_DATE AND
                               PFTERMINATION_END_ID - PF_BEGIN_DATE <= 90 THEN
                           ''1-3个月（含）''
                          WHEN PF_OPERATING IN (''PB2003'', ''PB2004'') AND
                               90 < PFTERMINATION_END_ID - PF_B', '1', 0, 'A12', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('7FAD42727C4546998498682CB8BDA774', 'A00027', '表3-2  新发产品分合同期限募集金额', '-- 取数据 测试条件 20181201 -20181231  PB3001
with tradedata_v  as (
SELECT  T0.TransactionCfmDate,--交易确认日期
  T2.CurrencyType AS CUR_D,--结算币种
  T0.ConfirmedAmount,--确认金额
  T0.CONFIRMEDVOL,--确认份额
  T0.FundCode,--基金代码
  T0.ReturnCode，--交易处理返回代码  1 处理成功 2 处理失败
  T0.TransactionAccountID,--交易帐号
  T0.DistributorCode AS DistributorCode,--销售人代码
  T0.BusinessCode,--业务代码
  t0.TAAccountID,--基金账号
  t0.BranchCode,--网点号码
  T1.RISK_TYPE, -- 100011:募集  100012:兑付
  T4.PF_OPERATING,-- 运行方式
  T4.PF_BEGIN_DATE,--基金成立日期
  T4.PFTERMINATION_END_ID--基金实际结束日期
--SELECT COUNT(*)
FROM(
  -- 交易数据  
  SELECT T.TRANSACTIONCFMDATE,--交易确认日期
    '''' AS CURRENCYTYPE,--结算币种
    case when t.BusinessCode = ''50'' then t.confirmedvol else T.CONFIRMEDAMOUNT end CONFIRMEDAMOUNT,--确认金额
    T.CONFIRMEDVOL,--确认份额
    T.FUNDCODE,--基金代码
    T.RETURNCODE，--交易处理返回代码  1 处理成功 2 处理失败
    T.TRANSACTIONACCOUNTID,--交易帐号
    T.DISTRIBUTORCODE,--销售人代码
    T.BusinessCode,--业务代码
    t.TAAccountID,--基金账号
    t.BranchCode--网点号码
/* SELECT DISTINCT FUNDCODE*/  FROM TR_DF_TA_TDCON T 
  WHERE T.TRANSACTIONCFMDATE BETWEEN FU_GET_CPYWDATE(''7'',''${FBEGINDATE}'') AND ''${FENDDATE}''
  AND T.RETURNCODE = ''1''
  )T0 
  --获取业务代码分类
  INNER JOIN (SELECT T.RISK_TYPE, T.TA_CODE   FROM TP_GL_TA_CORRESPD T WHERE T.RISK_TYPE = ''100011'' ) T1 ON T0.BusinessCode = t1.TA_CODE
  INNER JOIN TR_DF_TA_DYINFOLITEM T2 ON T0.FUNDCODE=T2.FUNDCODE AND UPDATEDATE=''${FENDDATE}''  and pf_type = ''YSS_45''  --注意行情全部从4.5估值取
  INNER JOIN (SELECT DISTINCT B.PF_ID,B.FIN_PF_ID,B.TA_PF_ID,A.PF_BEGIN_DATE,A.PFTERMINATION_END_ID,A.PF_OPERATING FROM TMP_PF_PB_INFO A
                      LEFT JOIN TP_GL_FUNDCODE_MAP B ON A.PF_ID=B.PF_ID AND B.SRC_SYS=''TA''  
                      LEFT JOIN TC_PF_BSC_INFO_ATTACHED C ON C.PF_ID=B.FIN_PF_ID 
              WHERE C.ATTACHED_VALUE=''${FUNDTYPE}'' AND A.PF_BEGIN_DATE BETWEEN TO_DATE(''${FBEGINDATE}'',''YYYYMMDD'') AND TO_DATE(''${FENDDATE}'',''YYYYMMDD'')) T4 ON T0.FUNDCODE=T4.TA_PF_ID
                      
 -- INNER JOIN (SELECT T5.PF_ID FROM TP_GL_FUNDCODE_MAP T5 INNER JOIN TC_PF_BSC_INFO_ATTACHED T6 ON T5.FIN_PF_ID=T6.PF_ID AND T6.ATTACHED_VALUE=''PB11008'') T3 ON T4.PF_ID=T3.PF_ID
)
SELECT Line_Id, --行编号
       line_name1, --运行方式中文名称
       line_name2, -- 年份信息
       CASE WHEN SUM(NVL(AMOUNT_RMB,0)) = 0 THEN NULL ELSE SUM(NVL(AMOUNT_RMB,0))/10000 END AS AMOUNT_RMB, --人民币总和
       CASE WHEN SUM(NVL(AMOUNT_WB,0)) = 0 THEN NULL ELSE SUM(NVL(AMOUNT_WB,0))/10000 END AS AMOUNT_WB, --外币总和
       CASE WHEN SUM(NVL(AMOUNT_RMB,0))  + SUM(NVL(AMOUNT_WB,0)) = 0 THEN NULL ELSE SUM(NVL(AMOUNT_RMB,0))/10000  + SUM(NVL(AMOUNT_WB,0))/10000 END  as HJ
  FROM (select T0.Line_Id, --行编号
               t0.line_name1, --运行方式中文名称
               t0.line_name2, -- 年份信息
                CASE when CUR_D = ''CNY'' THEN NVL(ConfirmedAmount,0) ELSE 0   END AS AMOUNT_RMB,
               CASE when CUR_D <> ''CNY'' THEN NVL(ConfirmedAmount,0) ELSE 0  END AS AMOUNT_WB
          from (SELECT *
                  FROM TP_GL_PB_HEAD T
                 where rep_id = ''PB13''
', '1', 0, 'A13', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('544A05FEE9224148B0481BAB8AB866A3', 'A00017', '表1-3只数情况', '-- 测试条件  20181201 - 20181231 PB3001
WITH V_FUNDCODEDATE AS( SELECT   
              PF_OPERATING ,--运行方式 PB0002
              PF_TYPE,--产品类型 PB0006
              PF_COLLECTING,--募集方式 PB0003
              PF_MANAGEMENT,--管理方式 PB0004
              PF_TRANCH,--分级产品标识 PB0007
              PF_OBLIGATION,--受托职责 PB0005
              PF_MMF,--货币市场基金标识 PB0022
              PF_INTEREST,--收益权转让产品标识  PB0021
              TO_CHAR(T0.PF_BEGIN_DATE,''yyyyMMdd'') AS PF_BEGIN_DATE,
              TO_CHAR(T0.PFTERMINATION_END_ID,''yyyyMMdd'') AS PFTERMINATION_END_ID,
              T0.PFCOLLECTING_CUR AS PFCOLLECTING_CUR
              FROM (SELECT nvl(TRIM(PFCOLLECTING_CUR),''CNY'') AS PFCOLLECTING_CUR,--币种
                  T.PF_OPERATING,--运行方式
                  t.PF_TYPE,--产品类型
                  t.PF_COLLECTING,--募集方式
                  t.PF_MANAGEMENT,--管理方式
                  t.PF_TRANCH,--分级产品标识 
                  t.PF_OBLIGATION,--受托职责
                  t.PF_MMF,--货币市场基金标识
                  t.PF_INTEREST,--收益权转让产品标识  
                  T.PFTERMINATION_END_ID,
                  T.VARIETY_TYPE_D,--产品品种
                  T.PF_BEGIN_DATE
                  FROM TMP_PF_PB_INFO T
                  --LEFT JOIN TC_PF_PB_COLLECT_RENEW T1 ON T.PF_ID = T1.PF_ID
                  -- 获取产品类别
                  INNER JOIN (SELECT DISTINCT  A.PF_ID,A.FIN_PF_ID FROM  TP_GL_FUNDCODE_MAP  A
                        --INNER JOIN TP_DF_LSETLIST B ON A.FIN_PF_ID = B.FIN_PF_ID
                        INNER JOIN TC_PF_BSC_INFO_ATTACHED C ON C.PF_ID = A.FIN_PF_ID
                        WHERE A.SRC_SYS=''TA'' --AND B.SRC_SYS=''TA''  
                        AND C.ATTACHED_VALUE = ''${FUNDTYPE}''
                  
                  ) T4 ON T.PF_ID = T4.PF_ID
              ) T0
              --INNER JOIN TC_PF_BSC_INFO T1 ON T0.PF_ID = T1.PF_ID
              LEFT JOIN TP_GL_CURRFND_CODE_MAP T2 ON T0.PFCOLLECTING_CUR = T2.CUR_NUM --T2.CUR_LETTER
              --WHERE TO_CHAR( PFTERMINATION_END_ID,''yyyyMMdd'') > ''${FENDDATE}'' AND to_char(PF_BEGIN_DATE,''yyyyMMdd'') <= ''${FENDDATE}''
          )
SELECT  
LINE_ID,--行编号
LINE_NAME1,--行名称
CASE WHEN SUM(NVL(RMB_XC,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_XC,0)) END  as RMB_XC,--续存人民币
CASE WHEN SUM(NVL(WB_XC,0)) = 0 THEN NULL ELSE SUM(NVL(WB_XC,0)) END as WB_XC,--续存外币
CASE WHEN SUM(NVL(RMB_XC,0)+NVL(WB_XC,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_XC,0)+NVL(WB_XC,0)) END  as HJ_XC,--续存合计
CASE WHEN SUM(NVL(RMB_XF,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_XF,0)) END  as RMB_XF,--新发人民币
CASE WHEN SUM(NVL(WB_XF,0)) = 0 THEN NULL ELSE SUM(NVL(WB_XF,0)) END  as WB_XF,--新发外币
CASE WHEN SUM(NVL(RMB_XF,0) + NVL(WB_XF,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_XF,0) + NVL(WB_XF,0)) END  AS HJ_XF,--新发合计
CASE WHEN SUM(NVL(RMB_ZZ,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_ZZ,0)) END  as RMB_ZZ,--终止人民币
CASE WHEN SUM(NVL(WB_ZZ,0)) = 0 THEN NULL ELSE SUM(NVL(WB_ZZ,0)) END  as WB_ZZ,--终止外币
CASE WHEN SUM(NVL(RMB_ZZ,0)+ NVL(WB_ZZ,0)) = 0 THEN NULL ELSE SUM(NVL(RMB_ZZ,0)+ NVL(WB_ZZ,0)) END  AS HJ_ZZ--终止合计
from (
  --附属信息有', '1', 0, 'A03', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('B6E0A3279B7443C091CEB27AFFB1BA59', 'A00028', '表3-3资产负债剩余期限', '--表3-3 资管产品资产负债剩余期限统计模板完整取数SQL

WITH TT_PF AS
(
SELECT T1.PF_ID, PB0011, PB1001, NVL(T2.NEXT_DAYS, 1) AS NEXT_DAYS
  FROM (SELECT A.PF_ID,
               MAX(A.CHG_DATE) AS CHG_DATE,
               MAX(A.END_DATE) AS END_DATE,
               MAX(DECODE(B.ATTACHED_CODE, ''PB0011'', B.ATTACHED_VALUE)) AS PB0011, --区分公募、专户
               MAX(DECODE(B.ATTACHED_CODE, ''PB1001'', B.ATTACHED_VALUE)) AS PB1001 --区分成本估值、市值估值       
          FROM TP_GL_FUNDCODE_MAP A
          JOIN TC_PF_BSC_INFO_ATTACHED B
            ON A.FIN_PF_ID = B.PF_ID
          LEFT JOIN TP_GL_EXHIB_DATADICT C
            ON B.ATTACHED_VALUE = C.KEY_ID
         WHERE A.IS_VALID = 1
           AND B.ATTACHED_CODE IN
               (''PB0011'', ''PB1001'', ''PB0024'', ''PB0026'', ''PB0025'')
           AND A.SRC_SYS = ''45''
              -- AND A.CHG_DATE <=''${FENDDATE}''  AND A.END_DATE >''${FENDDATE}''
           AND (A.CHG_DATE <= ''${FENDDATE}'' AND A.END_DATE > ''${FENDDATE}'')
         GROUP BY A.PF_ID) T1
  LEFT JOIN (SELECT PF_ID,
                    TO_DATE(MIN(OPEN_DATE), ''YYYYMMDD'') -
                    TO_DATE(''${FENDDATE}'', ''YYYYMMDD'') AS NEXT_DAYS
               FROM TC_ACCT_OPEN_DATE_INFO
              WHERE OPEN_DATE >= ''${FENDDATE}''
              GROUP BY PF_ID) T2
    ON T1.PF_ID = T2.PF_ID
 WHERE PB0011 = ''${FUNDTYPE}''
)


SELECT A.LINE_ID,
       A.LINE_NAME1,
       B.ZC_ZWGJ,
       B.GQ,TDZT,
       B.FZ_ZWGJ,
       B.SSBJ
  FROM TP_GL_PB_HEAD A LEFT JOIN
  (
  SELECT DECODE(GROUPING(SHEET_NAME), 1, ''总计'',SHEET_NAME) AS SHEET_NAME,
         SUM(CASE WHEN A.NODE_ID = ''PB1401'' THEN CJJE END)/10000 AS ZC_ZWGJ,
         SUM(CASE WHEN A.NODE_ID = ''PB1402'' THEN CJJE END)/10000 AS GQ,
         SUM(CASE WHEN A.NODE_ID = ''PB1403'' THEN CJJE END)/10000 AS TDZT,
         SUM(CASE WHEN A.NODE_ID = ''PB1404'' THEN CJJE END)/10000 AS FZ_ZWGJ,
         SUM(CASE WHEN A.NODE_ID = ''PB1405'' THEN CJJE END)/10000 AS SSBJ
         FROM
         
   --回购、存款
   (SELECT NODE_ID,
          NODE_NAME,
          NVL(SHEET_NAME, ''无固定期限'') AS SHEET_NAME,
          SUM(CJJE) AS CJJE
     FROM (SELECT --A.PF_ID,
            CASE 
              WHEN A.HGFX = ''HGJY_ZHG'' THEN ''PB1404'' --负债债务工具
              WHEN A.HGFX = ''HGJY_NHG'' THEN ''PB1401'' --资产债务工具
              WHEN A.HGFX = ''CK'' THEN ''PB1401'' --资产债务工具
            END NODE_ID, 
            CASE 
              WHEN A.HGFX = ''HGJY_ZHG'' THEN ''负债债务工具''
              WHEN A.HGFX = ''HGJY_NHG'' THEN ''资产债务工具''
              WHEN A.HGFX = ''CK'' THEN ''资产债务工具'' 
            END NODE_NAME,
            CASE 
              WHEN TO_DATE(A.HGDQRQ, ''YYYYMMDD'') - TO_DATE(''${FENDDATE}'', ''YYYYMMDD'') BETWEEN 0 AND 30 THEN ''1个月（含）以下''
              WHEN TO_DATE(A.HGDQRQ, ''YYYYMMDD'') - TO_DATE(''${FENDDATE}'', ''YYYYMMDD'') BETWEEN 31 AND 90 THEN ''1-3个月（含）''
              WHEN TO_DATE(A.HGDQRQ, ''YYYYMMDD'') - TO_DATE(''${FENDDATE}'', ''YYYYMMDD'') BETWEEN 91 AND 180 THEN ''3-6个月（含）''
              WHEN TO_DATE(A.HGDQRQ, ''YYYYMMDD'') - TO_DATE(''${FENDDATE}'', ''YYYYMMDD'') BETWEEN 181 AND 360 THEN ''6-12个月（', '1', 0, 'A14', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('2A2654D1E30E4562834E38B4D1D90E6E', 'A00015', '表1-1 募集余额', '--续存募集余额(1.产品起始时间和结束时间在报告期间 , 2 客户维度 份额表.份额*行情表.单位净值 3. 产品维度直接取 TC_PF_PB_COLLECT_RENEW 字段 MV_AMOUNT )
--测试条件  ${FBEGINDATE}：20190228    ${FUNDTYPE}：PB11008(08-公募基金)  PB11004(04-基金管理公司及其子公司专户)
WITH V_FUND_DATA AS (SELECT A.PF_ID,--产品编码
            A.PF_OPERATING,-- 运行方式
            A.PF_COLLECTING,--募集方式
            A.PF_MANAGEMENT,--管理方式
            A.PF_OBLIGATION,--受托职责
            A.PF_TYPE,--产品类型
            B.MV_AMOUNT,
            B.CUR_D,
            A.PF_TRANCH,--分级基金
            A.PF_INTEREST,--收益权转让产品
            A.PF_MMF--货币市场基金
         -- SELECT COUNT(*)
          FROM TMP_PF_PB_INFO A
          INNER JOIN TC_PF_PB_COLLECT_RENEW B ON A.PF_ID=B.PF_ID
          INNER JOIN (SELECT DISTINCT B.PF_ID FROM TP_GL_FUNDCODE_MAP B
                          INNER JOIN TC_PF_BSC_INFO_ATTACHED C ON C.PF_ID=B.FIN_PF_ID AND B.SRC_SYS=''TA'' AND C.ATTACHED_VALUE=''${FUNDTYPE}'') D
          ON A.PF_ID=D.PF_ID
          WHERE TO_CHAR(A.PF_BEGIN_DATE,''YYYYMMDD'') <=''${FENDDATE}'' AND TO_CHAR(A.PFTERMINATION_END_ID,''YYYYMMDD'')> ''${FENDDATE}''
          AND  B.BIZ_DATE =''${FENDDATE}'' 
      AND B.MV_SHARES <> 0
          /*AND C.SRC_SYS = ''TA'' AND D.ATTACHED_VALUE = ''${FUNDTYPE}''*/
         ),
 V_DYINFOLITEM_DATE AS ( SELECT  B.PF_ID,
          A.TOTVOLOFDISTA  as TOTVOLOFDISTA,
          B.CURRENCYTYPE,
          B.NAV,
      B.FUNDSIZE,
          --CASE WHEN a.PF_TYPE= ''HS_BJHG40'' THEN ''PB1004'' ELSE nvl(TRIM(F_CUSTTYPE1),nvl(C.F_CUSTTYPE,''PB1001'')) END  as F_CUSTTYPE
     nvl(TRIM(F_CUSTTYPE1),nvl(C.F_CUSTTYPE,''PB1001''))   as F_CUSTTYPE
        FROM TR_DF_TA_ACCRECDATA A--基金份额表  
        --基金行情表 
        INNER JOIN (SELECT 
            T0.UPDATEDATE AS UPDATEDATE,--单位净值日期
            T0.FUNDCODE,--基金代码
            T0.NAV   AS NAV,--单位净值
            T0.CURRENCYTYPE  AS CURRENCYTYPE,--结算币种
            T3.PF_ID AS PF_ID,
      FUNDSIZE,
      T0.PF_TYPE AS PF_TYPE
          FROM  TR_DF_TA_DYINFOLITEM T0
          --INNER JOIN  TP_GL_CURRFND_CODE_MAP T1 ON T0.CURRENCYTYPE=T1.CUR_NUM
          INNER JOIN TP_GL_FUNDCODE_MAP T3 ON T0.FUNDCODE = T3.TA_PF_ID 
          INNER JOIN TC_PF_BSC_INFO_ATTACHED T4 ON T4.PF_ID = T3.FIN_PF_ID
          WHERE T0.TRANSACTIONCFMDATE = ''${FENDDATE}''
      AND T3.SRC_SYS = ''TA'' 
      AND T4.ATTACHED_VALUE = ''${FUNDTYPE}'' 
      AND T0.TOTALFUNDVOL <> 0 
      AND T0.PF_TYPE = ''YSS_45''
        )B ON A.FUNDCODE=B.FUNDCODE
        INNER JOIN TMP_PF_PB_INFO BI ON B.PF_ID=BI.PF_ID
        LEFT JOIN TC_PF_PB_TA_ACCOUNT C ON A.TAACCOUNTID=C.TAACCOUNTID and A.PF_TYPE=C.PF_TYPE--  投资人基金账号         
        where A.TRANSACTIONCFMDATE=''${FENDDATE}''  
        AND A.TOTVOLOFDISTA <> 0  
    --AND LENGTH(A.TAACCOUNTID) <> 6
        AND TO_CHAR(BI.PF_BEGIN_DATE,''YYYYMMDD'') <= ''${FENDDATE}'' AND TO_CHAR(BI.PFTERMINATION_END_ID,''YYYYMMDD'')> ''${FENDDATE}''
  
 )
  

SELECT t.HBH,--行编号
  t.ZM,--项目
  (CASE WHEN t.RMB = 0  THEN NULL ELSE T.RMB /10000 END)  AS RMB,--人民币
  (CASE WHEN t.MYZRMB= 0  THEN NULL ELSE t.MYZRMB /10000 END)  AS MYZRMB,--美元折人民币
  (CA', '1', 0, 'A01', 0, null, 'admin', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('0D91B19A01CE44FE8D51CFA57D7081FF', 'A00016', '表1-2募集及兑付发生额', '--1-2
with  
V_1 AS 
(SELECT TRANSACTIONCFMDATE,
       FUNDCODE,
       TAACCOUNTID,
       PF_TYPE,
       TOTVOLOFDISTA,
       RATIO_TO_REPORT(TOTVOLOFDISTA) OVER(PARTITION BY TRANSACTIONCFMDATE, FUNDCODE) AS BL
  FROM TR_DF_TA_ACCRECDATA
 WHERE TOTVOLOFDISTA > 0 
   AND (TRANSACTIONCFMDATE, FUNDCODE) IN
       (SELECT TRANSACTIONCFMDATE, FUNDCODE
          FROM TR_DF_TA_TDCON
         WHERE BUSINESSCODE = ''1''
           AND TRANSACTIONCFMDATE BETWEEN ''${FBEGINDATE}'' AND ''${FENDDATE}'')
           ),
 V_2 AS 
(SELECT TRANSACTIONCFMDATE,
       FUNDCODE,
       TAACCOUNTID,
       PF_TYPE,
       TOTVOLOFDISTA,
       RATIO_TO_REPORT(TOTVOLOFDISTA) OVER(PARTITION BY TRANSACTIONCFMDATE, FUNDCODE) AS BL
  FROM TR_DF_TA_ACCRECDATA
 WHERE TOTVOLOFDISTA > 0 
   AND (TRANSACTIONCFMDATE, FUNDCODE) IN
       (SELECT END_DATE,TA_PF_ID FROM TP_GL_FUNDCODE_MAP WHERE END_DATE BETWEEN ''${FBEGINDATE}'' AND ''${FENDDATE}'' AND SRC_SYS = ''45'')
           ),
tradedata_v1 as (
select  T.FUNDCODE,
  T1.RISK_TYPE,
  T.PF_TYPE,
  NVL(TRIM(T2.F_CUSTTYPE),''PB1001'')  AS F_CUSTTYPE,--客户类型
  TRIM(T2.F_CUSTTYPE1)  AS F_CUSTTYPE1,--客户类型(金融机构实体、特定目的载体)   
  SUM(T.CONFIRMEDVOL) AS CONFIRMEDVOL,
  SUM(T.CONFIRMEDAMOUNT * NVL(T3.BL,1)) AS CONFIRMEDAMOUNT
FROM TR_DF_TA_TDCON T 
INNER JOIN TP_GL_TA_CORRESPD T1 ON T1.TA_CODE=T.BusinessCode  AND T1.RISK_TYPE in (''100011'',''100012'')
LEFT JOIN V_1 T3 ON T.BusinessCode = ''1'' AND T.TAACCOUNTID = T3.FUNDCODE
LEFT JOIN TC_PF_PB_TA_ACCOUNT T2 ON NVL(T3.TAACCOUNTID, T.TAACCOUNTID) = T2.TAACCOUNTID  
WHERE T.TRANSACTIONCFMDATE BETWEEN ''${FBEGINDATE}'' AND ''${FENDDATE}''
AND NOT EXISTS (select 1 from tr_df_ta_DZKH_HS_SS T6 WHERE T.TAAccountID = T6.TAAccountID AND T.PF_TYPE = ''HS_SS'') 
AND NOT EXISTS (select 1 from tr_df_ta_DZKH_JZ_SS T7  WHERE T.TAAccountID = T7.TAAccountID AND T.PF_TYPE = ''JZ_SS'') 
AND (-- 交易数据(金正实时、恒生实时募集及兑付)
      T.PF_TYPE IN (''HS_SS'') AND  T.RETURNCODE = ''2'' 
  OR T.PF_TYPE IN (''JZ_SS'')
  --交易数据(恒生自建、LOF、ETF、BJHG 兑付)
  OR T.PF_TYPE IN (''HS_ZJ40'',''HS_LOF40'',''HS_ETF22'',''NO_TA'',''HS_BJHG40'') AND T.RETURNCODE = ''1'' 
  AND not exists (select 1 
     from tr_df_ta_cust_nostat t1
     where t1.c_fundacco = T.TAACCOUNTID
     and (instr(t1.c_tradeacco, T.TRANSACTIONACCOUNTID, 1)>0 or t1.c_tradeacco = ''-1'')
     and (instr(t1.c_fundcode, T.fundcode, 1)>0 or t1.c_fundcode = ''-1'')
     and (instr(t1.c_businflag, T.BUSINESSCODE, 1)>0 or t1.c_businflag = ''-1'')
     and T.TRANSACTIONCFMDATE between to_char(t1.d_cdate_begin) and to_char(t1.d_cdate_end))  --不统计申赎的账户
  
  )
  GROUP BY T.FUNDCODE , T1.RISK_TYPE,T2.F_CUSTTYPE,T.PF_TYPE,T2.F_CUSTTYPE1


  UNION ALL
  --HS_SS 部分
  SELECT T.FUNDCODE,
         T1.RISK_TYPE,
         T.PF_TYPE,
         ''PB1001'' AS F_CUSTTYPE, --客户类型
         NULL AS F_CUSTTYPE1, --客户类型(金融机构实体、特定目的载体)   
         SUM(T.CONFIRMEDVOL) AS CONFIRMEDVOL,
         SUM(T.CONFIRMEDAMOUNT) AS CONFIRMEDAMOUNT
    FROM TR_DF_TA_TDCON_HZ T
   INNER JOIN TP_GL_TA_CORRESPD T1
      ON T1.TA_CODE = T.FBUSINESSCODE
     AND T1.RIS', '1', 0, 'A02', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('6BC6E24146F343E39B1E635F87C1E965', 'A00018', '表1-4 境内募集余额分地区', '--获取单个对应地区金额


WITH 


v_total as (
 select A.CUR_D , sum(A.MV_AMOUNT)/10000  AS TOTAL  FROM TC_PF_PB_COLLECT_RENEW A 
  --获取币种
  INNER JOIN TMP_PF_PB_INFO B  ON A.PF_ID=B.PF_ID
  --获取产品类型
  INNER JOIN (SELECT DISTINCT B.PF_ID FROM TP_GL_FUNDCODE_MAP B
                          INNER JOIN TC_PF_BSC_INFO_ATTACHED C ON C.PF_ID=B.FIN_PF_ID AND B.SRC_SYS=''TA'' AND C.ATTACHED_VALUE=''${FUNDTYPE}'') D
          ON A.PF_ID=D.PF_ID
  WHERE  BIZ_DATE = ''${FENDDATE}'' AND A.MV_SHARES>0
  AND TO_CHAR(B.PF_BEGIN_DATE,''YYYYMMDD'') <= ''${FENDDATE}'' AND TO_CHAR(B.PFTERMINATION_END_ID,''YYYYMMDD'')> ''${FENDDATE}''
group by CUR_D

),

V_TOTVOLOFDISTA AS (SELECT sum(T0.TOTVOLOFDISTA * T2.NAV)/10000  AS MV_AMOUNT,--金额
                trim(T3.F_REGIONNO) AS F_REGIONNO,--T2.F_REGIONNO, --区域
                T2.CURRENCYTYPE  AS CUR_D--结算币种
              --  SUM(T2.FUNDSIZE)/COUNT(*)/10000 AS FUNDSIZE,
                ,T0.FUNDCODE
                ,FUNDSIZE/10000 AS FUNDSIZE
                ,T3.F_CUSTTYPE
              FROM TR_DF_TA_ACCRECDATA T0--份额数据
              --关联基金信息
              INNER JOIN(SELECT A.TA_PF_ID,
                      A.PF_ID,
                      C.PF_BEGIN_DATE,
                      C.PFTERMINATION_END_ID
                    FROM TP_GL_FUNDCODE_MAP  A 
                    INNER JOIN TC_PF_BSC_INFO_ATTACHED B ON A.FIN_PF_ID =  B.PF_ID
                    INNER JOIN TMP_PF_PB_INFO C ON A.PF_ID = C.PF_ID--获取日期
                    WHERE A.SRC_SYS = ''TA'' AND B.ATTACHED_VALUE = ''${FUNDTYPE}''
                    AND C.PF_BEGIN_DATE <= to_date(''${FENDDATE}'',''yyyyMMdd'') AND C.PFTERMINATION_END_ID > to_date(''${FENDDATE}'',''yyyyMMdd'')
               ) T1 ON T0.FUNDCODE = T1.TA_PF_ID
              INNER JOIN (SELECT FUNDCODE,
                    NVL(b.CUR_LETTER,''CNY'') AS CURRENCYTYPE , 
                    A.NAV   AS NAV --单位净值
                    ,FUNDSIZE
                  FROM TR_DF_TA_DYINFOLITEM A    
                  LEFT JOIN TP_GL_CURRFND_CODE_MAP B ON A.CURRENCYTYPE=B.CUR_NUM--币种
                  WHERE UPDATEDATE = (SELECT MAX(UPDATEDATE) FROM TR_DF_TA_DYINFOLITEM C WHERE UPDATEDATE <= ''${FENDDATE}'') 
                  and A.pf_type = ''YSS_45''
                  AND A.TRANSACTIONCFMDATE = ''${FENDDATE}''
                  AND A.TOTALFUNDVOL >0
               ) T2 ON T0.FUNDCODE = T2.FUNDCODE--行情数据
              LEFT JOIN (SELECT DISTINCT  F_REGIONNO,TAACCOUNTID,F_CUSTTYPE FROM  TC_PF_PB_TA_ACCOUNT T ) T3 ON T0.TAACCOUNTID = T3.TAACCOUNTID--基金账号
              --INNER JOIN TC_PF_BSC_INFO_ATTACHED T4 ON T0.FUNDCODE = T6.PF_ID
              WHERE T0.TRANSACTIONCFMDATE  = ''${FENDDATE}'' and T0.TOTVOLOFDISTA>0  --AND  (T3.F_CUSTTYPE <> ''PB1015''  OR T3.F_CUSTTYPE IS NULL)
              group by T3.F_REGIONNO,T2.CURRENCYTYPE,T0.FUNDCODE,FUNDSIZE,T3.F_CUSTTYPE--,T0.FUNDCODE
      
            ),
            --计算总金额(行情总金额-境外值)
  V_TOTVOLOFDISTA_1 AS (
          SELECT SUM(TOTAL) AS TOTAL, CUR_D FROM (
            SELECT SUM(TOTAL) AS TOTAL,  CUR_D  FROM v_total GROUP ', '1', 0, 'A04', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('8AF172ED3B454D53BE8400D755ACD54A', 'A00019', '表1-5 资管产品提前及延期兑付情况', '--人行-资管产品提前及延期兑付情况
SELECT A.HBH       AS HBH, --行编号
   A.ZM        AS ZM, --项目
   CASE WHEN A.TQ_ZS  =0 THEN NULL  ELSE   A.TQ_ZS END   AS TQ_ZS, --提前只数
   CASE WHEN A.TQ_RMB =0 then null ELSE  A.TQ_RMB/10000 END   AS TQ_RMB, --提前人民币
   CASE WHEN A.TQ_WBZRMB = 0 THEN NULL ELSE A.TQ_WBZRMB/10000 END  AS TQ_WBZRMB, --提前外币折人民币
   CASE WHEN A.TQ_HZ = 0 THEN NULL ELSE A.TQ_HZ/10000 END      AS TQ_HZ, --提前合计
   CASE WHEN A.YQ_ZS =0 THEN NULL ELSE  A.YQ_ZS END    AS YQ_ZS, --延期只数
   CASE WHEN A.YQ_RMB =0 THEN NULL ELSE A.YQ_RMB/10000  END    AS YQ_RMB, --延期人民币
   CASE WHEN A.YQ_WBZRMB  = 0 THEN NULL ELSE A.YQ_WBZRMB/10000 END AS YQ_WBZRMB, --延期外币折人民币
   CASE WHEN A.YQ_HZ = 0 THEN NULL ELSE  A.YQ_HZ/10000 END     AS YQ_HZ --延期合计
   --客户类型
FROM(SELECT A.LINE_ID AS HBH, --行编号
    CASE  WHEN A.LINE_ID = ''515000'' THEN  ''    特定目的载体''  WHEN A.LINE_ID = ''514000'' THEN   ''    金融机构（实体）'' ELSE  A.LINE_NAME1  END AS ZM, --项目
    NULL AS TQ_ZS, --提前只数
    SUM(CASE WHEN B.PFTERMINATION_END_ID < B.PF_END_DATE AND  D.CURRENCYTYPE = ''CNY'' THEN  D.CONFIRMEDAMOUNT   END) AS TQ_RMB, --提前人民币
    SUM(CASE  WHEN B.PFTERMINATION_END_ID < B.PF_END_DATE AND D.CURRENCYTYPE <> ''CNY'' THEN  D.CONFIRMEDAMOUNT   END) AS TQ_WBZRMB, --提前外币折人民币
    SUM(CASE WHEN B.PFTERMINATION_END_ID < B.PF_END_DATE THEN D.CONFIRMEDAMOUNT    END) AS TQ_HZ, --提前合计
    NULL AS YQ_ZS, --延期只数
    SUM(CASE  WHEN B.PFTERMINATION_END_ID > B.PF_END_DATE AND   D.CURRENCYTYPE = ''CNY'' THEN D.CONFIRMEDAMOUNT   END) AS YQ_RMB, --延期人民币
    SUM(CASE WHEN B.PFTERMINATION_END_ID > B.PF_END_DATE AND  D.CURRENCYTYPE <> ''CNY'' THEN   D.CONFIRMEDAMOUNT  END) AS YQ_WBZRMB, --延期外币折人民币
    SUM(CASE  WHEN B.PFTERMINATION_END_ID > B.PF_END_DATE THEN D.CONFIRMEDAMOUNT     END) AS YQ_HZ --延期合计
  FROM (SELECT A.LINE_ID, -- 行编号
          A.LINE_NAME1, -- 行名称 
          A.MATCHUP_ID, -- 对应关系
          B.TAACCOUNTID, --投资人基金账号
          B.TRANSACTIONACCOUNTID --投资人基金交易账号
         FROM (SELECT * FROM TP_GL_PB_HEAD A   WHERE A.REP_ID = ''PB05'' AND SUBSTR(A.LINE_ID, 1, 2) = 51   AND A.IS_FILL = 1) A --获取行编号
         /*LEFT JOIN (SELECT TAACCOUNTID, TRANSACTIONACCOUNTID, NVL(F_CUSTTYPE,''PB1001'') AS F_CUSTTYPE   FROM TC_PF_PB_TA_ACCOUNT) B  ON A.MATCHUP_ID = B.F_CUSTTYPE -- 根据客户地区获取客户账户资料*/
                  LEFT JOIN (SELECT TAACCOUNTID, TRANSACTIONACCOUNTID, NVL(F_CUSTTYPE,''PB1001'') AS F_CUSTTYPE,F_CUSTTYPE1   FROM TC_PF_PB_TA_ACCOUNT) B  ON A.MATCHUP_ID =nvl(TRIM(B.F_CUSTTYPE1),nvl(B.F_CUSTTYPE,''PB1001''))-- B.F_CUSTTYPE -- 根据客户地区获取客户账户资料

      ) A
    -- 取出清盘方案 ()
  LEFT JOIN( SELECT T0.CONFIRMEDAMOUNT,--确认金额
          T2.PF_ID,--
          T5.CUR_LETTER AS CURRENCYTYPE,--结算币种
          T0.TAACCOUNTID,--基金账号
          T0.TRANSACTIONACCOUNTID--交易账号
        FROM TR_DF_TA_TDCON T0 --交易表确认数据
        INNER JOIN TP_GL_CURRFND_CODE_MAP T5 ON T0.CURRENCYTYPE = T5.CUR_NUM 
        --获取清盘信息,获取的确认日期必须跟清盘日期相等
        INNER JOIN TR_DF_TA_LQDSCE T1 ON T0.FUNDCODE  =T1.FUNDCODE AND T0.TRANSACTIONCFMDATE = T1.LQDDT
        --获取PF_ID 与 fundcode 对应关系
       ', '1', 0, 'A05', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('E3C235E8490147678F94272D14314248', 'A00020', '表1-6 资管产品到期未兑付情况', '--到期未兑付
SELECT A.HBH          AS HBH, --行编号
       A.ZM           AS ZM, --项目
       CASE WHEN A.DQWDF_ZS =0 THEN NULL ELSE A.DQWDF_ZS END     AS DQWDF_ZS, --提前只数
       CASE WHEN A.DQWDF_RMB = 0  THEN NULL ELSE  A.DQWDF_RMB/10000 END AS DQWDF_RMB, --提前人民币
       CASE WHEN A.DQWDF_WBZRMB= 0  THEN NULL ELSE A.DQWDF_WBZRMB/10000 END  AS  DQWDF_WBZRMB, --提前外币折人民币
       CASE WHEN A.DQWDF_HZ = 0  THEN NULL ELSE  A.DQWDF_HZ/10000  END AS DQWDF_HZ --提前合计
  FROM (
        --客户类型
        SELECT A.LINE_ID AS HBH, --行编号
                CASE
                  WHEN A.LINE_ID = ''615000'' THEN
                   ''    特定目的载体''
                  WHEN A.LINE_ID = ''614000'' THEN
                   ''    金融机构（实体）''
                  ELSE A.LINE_NAME1
                END AS ZM, --项目
                NULL AS DQWDF_ZS, --提前只数
                SUM(CASE
                      WHEN /*C.PFPAYOFF_CUR*/NVL(E.CURRENCYTYPE,''CNY'') = ''CNY'' THEN
                       ROUND(B.TOTVOLOFDISTA * E.NAV,2)
                    END) AS DQWDF_RMB, --到期未兑付人民币
                SUM(CASE
                      WHEN /*C.PFPAYOFF_CUR*/NVL(E.CURRENCYTYPE,''CNY'') <> ''CNY'' THEN
                       ROUND(B.TOTVOLOFDISTA * E.NAV,2)
                    END) AS DQWDF_WBZRMB, --到期未兑付外币折人民币
                SUM(ROUND(NVL(B.TOTVOLOFDISTA * E.NAV,0),2)) AS DQWDF_HZ --到期未兑付合计
--SELECT COUNT(*)
          FROM  (SELECT * FROM TR_DF_TA_ACCRECDATA WHERE TRANSACTIONCFMDATE=''${FENDDATE}'')B 
          LEFT JOIN TP_GL_FUNDCODE_MAP C ON B.FUNDCODE=C.TA_PF_ID AND C.src_sys= ''TA''
          INNER JOIN TMP_PF_PB_INFO D ON C.PF_ID = D.PF_ID and TO_CHAR(D.PF_END_DATE, ''YYYYMMDD'') < ''${FENDDATE}''
                        AND TO_CHAR(D.PF_BEGIN_DATE, ''YYYYMMDD'') < ''${FBEGINDATE}''
                               AND TO_CHAR(D.PFTERMINATION_END_ID, ''YYYYMMDD'') > ''${FENDDATE}'' /*AND D.VARIETY_TYPE_D=''${FUNDTYPE}''*/
      --基金行情表
          LEFT JOIN (SELECT DISTINCT B.PF_ID,B.TA_PF_ID,H.CUR_LETTER  as  CURRENCYTYPE,NAV
         --SELECT COUNT(*)
                          FROM TR_DF_TA_DYINFOLITEM A
          LEFT JOIN TP_GL_CURRFND_CODE_MAP H ON A.CURRENCYTYPE=H.CUR_NUM
          INNER JOIN TP_GL_FUNDCODE_MAP B ON B.src_sys= ''TA''AND  A.FUNDCODE=B.TA_PF_ID
          INNER JOIN (SELECT DISTINCT MAX(T.UPDATEDATE) OVER(PARTITION BY FUNDCODE)as MAXB,   FUNDCODE  FROM TR_DF_TA_DYINFOLITEM T WHERE UPDATEDATE < = ''${FENDDATE}'') C ON A.FUNDCODE = C.FUNDCODE AND C.MAXB = A.UPDATEDATE
                          )E  ON C.PF_ID = E.PF_ID and C.TA_PF_ID=E.TA_PF_ID
          --LEFT JOIN  TP_GL_FUNDCODE_MAP T1 on t1.ta_pf_id=b.fundcode
          INNER JOIN TC_PF_BSC_INFO_ATTACHED T2 ON T2.PF_ID = B.FUNDCODE AND T2.ATTACHED_VALUE = ''${FUNDTYPE}''
                --WHERE T1.SRC_SYS = ''TA'' AND T2.ATTACHED_VALUE = ''${FUNDTYPE}''
          INNER join (SELECT NVL(F_CUSTTYPE,''PB1001'') AS F_CUSTTYPE,TAACCOUNTID,REPLACE(F_CUSTTYPE1,'' '','''') AS F_CUSTTYPE1 FROM TC_PF_PB_TA_ACCOUNT) M on M.TAACCOUNTID=B.TAACCOUNTID
          RIGHT JOIN (SELECT A.LINE_ID, -- 行编号
     ', '1', 0, 'A06', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('D5E31DF70E954AE18CBD797155894934', 'A00001', '表1-1 募集余额', '--续存募集余额(1.产品起始时间和结束时间在报告期间 , 2 客户维度 份额表.份额*行情表.单位净值 3. 产品维度直接取 TC_PF_PB_COLLECT_RENEW 字段 MV_AMOUNT )
--测试条件  ${FBEGINDATE}：20190228    ${FUNDTYPE}：PB11008(08-公募基金)  PB11004(04-基金管理公司及其子公司专户)
WITH V_FUND_DATA AS (SELECT A.PF_ID,--产品编码
            A.PF_OPERATING,-- 运行方式
            A.PF_COLLECTING,--募集方式
            A.PF_MANAGEMENT,--管理方式
            A.PF_OBLIGATION,--受托职责
            A.PF_TYPE,--产品类型
            B.MV_AMOUNT,
            B.CUR_D,
            A.PF_TRANCH,--分级基金
            A.PF_INTEREST,--收益权转让产品
            A.PF_MMF--货币市场基金
         -- SELECT COUNT(*)
          FROM TMP_PF_PB_INFO A
          INNER JOIN TC_PF_PB_COLLECT_RENEW B ON A.PF_ID=B.PF_ID
          INNER JOIN (SELECT DISTINCT B.PF_ID FROM TP_GL_FUNDCODE_MAP B
                          INNER JOIN TC_PF_BSC_INFO_ATTACHED C ON C.PF_ID=B.FIN_PF_ID AND B.SRC_SYS=''TA'' AND C.ATTACHED_VALUE=''${FUNDTYPE}'') D
          ON A.PF_ID=D.PF_ID
          WHERE TO_CHAR(A.PF_BEGIN_DATE,''YYYYMMDD'') <=''${FENDDATE}'' AND TO_CHAR(A.PFTERMINATION_END_ID,''YYYYMMDD'')> ''${FENDDATE}''
          AND  B.BIZ_DATE =''${FENDDATE}'' 
      AND B.MV_SHARES <> 0
          /*AND C.SRC_SYS = ''TA'' AND D.ATTACHED_VALUE = ''${FUNDTYPE}''*/
         ),
 V_DYINFOLITEM_DATE AS ( SELECT  B.PF_ID,
          A.TOTVOLOFDISTA  as TOTVOLOFDISTA,
          B.CURRENCYTYPE,
          B.NAV,
      B.FUNDSIZE,
          --CASE WHEN a.PF_TYPE= ''HS_BJHG40'' THEN ''PB1004'' ELSE nvl(TRIM(F_CUSTTYPE1),nvl(C.F_CUSTTYPE,''PB1001'')) END  as F_CUSTTYPE
     nvl(TRIM(F_CUSTTYPE1),nvl(C.F_CUSTTYPE,''PB1001''))   as F_CUSTTYPE
        FROM TR_DF_TA_ACCRECDATA A--基金份额表  
        --基金行情表 
        INNER JOIN (SELECT 
            T0.UPDATEDATE AS UPDATEDATE,--单位净值日期
            T0.FUNDCODE,--基金代码
            T0.NAV   AS NAV,--单位净值
            T0.CURRENCYTYPE  AS CURRENCYTYPE,--结算币种
            T3.PF_ID AS PF_ID,
      FUNDSIZE,
      T0.PF_TYPE AS PF_TYPE
          FROM  TR_DF_TA_DYINFOLITEM T0
          --INNER JOIN  TP_GL_CURRFND_CODE_MAP T1 ON T0.CURRENCYTYPE=T1.CUR_NUM
          INNER JOIN TP_GL_FUNDCODE_MAP T3 ON T0.FUNDCODE = T3.TA_PF_ID 
          INNER JOIN TC_PF_BSC_INFO_ATTACHED T4 ON T4.PF_ID = T3.FIN_PF_ID
          WHERE T0.TRANSACTIONCFMDATE = ''${FENDDATE}''
      AND T3.SRC_SYS = ''TA'' 
      AND T4.ATTACHED_VALUE = ''${FUNDTYPE}'' 
      AND T0.TOTALFUNDVOL <> 0 
      AND T0.PF_TYPE = ''YSS_45''
        )B ON A.FUNDCODE=B.FUNDCODE
        INNER JOIN TMP_PF_PB_INFO BI ON B.PF_ID=BI.PF_ID
        LEFT JOIN TC_PF_PB_TA_ACCOUNT C ON A.TAACCOUNTID=C.TAACCOUNTID and A.PF_TYPE=C.PF_TYPE--  投资人基金账号         
        where A.TRANSACTIONCFMDATE=''${FENDDATE}''  
        AND A.TOTVOLOFDISTA <> 0  
    --AND LENGTH(A.TAACCOUNTID) <> 6
        AND TO_CHAR(BI.PF_BEGIN_DATE,''YYYYMMDD'') <= ''${FENDDATE}'' AND TO_CHAR(BI.PFTERMINATION_END_ID,''YYYYMMDD'')> ''${FENDDATE}''
  
 )
  

SELECT t.HBH,--行编号
  t.ZM,--项目
  (CASE WHEN t.RMB = 0  THEN NULL ELSE T.RMB /10000 END)  AS RMB,--人民币
  (CASE WHEN t.MYZRMB= 0  THEN NULL ELSE t.MYZRMB /10000 END)  AS MYZRMB,--美元折人民币
  (CA', '0', 0, 'A01', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('D5E31DF70E954AE18CBD797155894956', 'A00002', '表1-2募集及兑付发生额', '--1-2
with  
V_1 AS 
(SELECT TRANSACTIONCFMDATE,
       FUNDCODE,
       TAACCOUNTID,
       PF_TYPE,
       TOTVOLOFDISTA,
       RATIO_TO_REPORT(TOTVOLOFDISTA) OVER(PARTITION BY TRANSACTIONCFMDATE, FUNDCODE) AS BL
  FROM TR_DF_TA_ACCRECDATA
 WHERE TOTVOLOFDISTA > 0 
   AND (TRANSACTIONCFMDATE, FUNDCODE) IN
       (SELECT TRANSACTIONCFMDATE, FUNDCODE
          FROM TR_DF_TA_TDCON
         WHERE BUSINESSCODE = ''1''
           AND TRANSACTIONCFMDATE BETWEEN ''${FBEGINDATE}'' AND ''${FENDDATE}'')
           ),
 V_2 AS 
(SELECT TRANSACTIONCFMDATE,
       FUNDCODE,
       TAACCOUNTID,
       PF_TYPE,
       TOTVOLOFDISTA,
       RATIO_TO_REPORT(TOTVOLOFDISTA) OVER(PARTITION BY TRANSACTIONCFMDATE, FUNDCODE) AS BL
  FROM TR_DF_TA_ACCRECDATA
 WHERE TOTVOLOFDISTA > 0 
   AND (TRANSACTIONCFMDATE, FUNDCODE) IN
       (SELECT END_DATE,TA_PF_ID FROM TP_GL_FUNDCODE_MAP WHERE END_DATE BETWEEN ''${FBEGINDATE}'' AND ''${FENDDATE}'' AND SRC_SYS = ''45'')
           ),
tradedata_v1 as (
select  T.FUNDCODE,
  T1.RISK_TYPE,
  T.PF_TYPE,
  NVL(TRIM(T2.F_CUSTTYPE),''PB1001'')  AS F_CUSTTYPE,--客户类型
  TRIM(T2.F_CUSTTYPE1)  AS F_CUSTTYPE1,--客户类型(金融机构实体、特定目的载体)   
  SUM(T.CONFIRMEDVOL) AS CONFIRMEDVOL,
  SUM(T.CONFIRMEDAMOUNT * NVL(T3.BL,1)) AS CONFIRMEDAMOUNT
FROM TR_DF_TA_TDCON T 
INNER JOIN TP_GL_TA_CORRESPD T1 ON T1.TA_CODE=T.BusinessCode  AND T1.RISK_TYPE in (''100011'',''100012'')
LEFT JOIN V_1 T3 ON T.BusinessCode = ''1'' AND T.TAACCOUNTID = T3.FUNDCODE
LEFT JOIN TC_PF_PB_TA_ACCOUNT T2 ON NVL(T3.TAACCOUNTID, T.TAACCOUNTID) = T2.TAACCOUNTID  
WHERE T.TRANSACTIONCFMDATE BETWEEN ''${FBEGINDATE}'' AND ''${FENDDATE}''
AND NOT EXISTS (select 1 from tr_df_ta_DZKH_HS_SS T6 WHERE T.TAAccountID = T6.TAAccountID AND T.PF_TYPE = ''HS_SS'') 
AND NOT EXISTS (select 1 from tr_df_ta_DZKH_JZ_SS T7  WHERE T.TAAccountID = T7.TAAccountID AND T.PF_TYPE = ''JZ_SS'') 
AND (-- 交易数据(金正实时、恒生实时募集及兑付)
      T.PF_TYPE IN (''HS_SS'') AND  T.RETURNCODE = ''2'' 
  OR T.PF_TYPE IN (''JZ_SS'')
  --交易数据(恒生自建、LOF、ETF、BJHG 兑付)
  OR T.PF_TYPE IN (''HS_ZJ40'',''HS_LOF40'',''HS_ETF22'',''NO_TA'',''HS_BJHG40'') AND T.RETURNCODE = ''1'' 
  AND not exists (select 1 
     from tr_df_ta_cust_nostat t1
     where t1.c_fundacco = T.TAACCOUNTID
     and (instr(t1.c_tradeacco, T.TRANSACTIONACCOUNTID, 1)>0 or t1.c_tradeacco = ''-1'')
     and (instr(t1.c_fundcode, T.fundcode, 1)>0 or t1.c_fundcode = ''-1'')
     and (instr(t1.c_businflag, T.BUSINESSCODE, 1)>0 or t1.c_businflag = ''-1'')
     and T.TRANSACTIONCFMDATE between to_char(t1.d_cdate_begin) and to_char(t1.d_cdate_end))  --不统计申赎的账户
  
  )
  GROUP BY T.FUNDCODE , T1.RISK_TYPE,T2.F_CUSTTYPE,T.PF_TYPE,T2.F_CUSTTYPE1


  UNION ALL
  --HS_SS 部分
  SELECT T.FUNDCODE,
         T1.RISK_TYPE,
         T.PF_TYPE,
         ''PB1001'' AS F_CUSTTYPE, --客户类型
         NULL AS F_CUSTTYPE1, --客户类型(金融机构实体、特定目的载体)   
         SUM(T.CONFIRMEDVOL) AS CONFIRMEDVOL,
         SUM(T.CONFIRMEDAMOUNT) AS CONFIRMEDAMOUNT
    FROM TR_DF_TA_TDCON_HZ T
   INNER JOIN TP_GL_TA_CORRESPD T1
      ON T1.TA_CODE = T.FBUSINESSCODE
     AND T1.RIS', '0', 0, 'A02', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('9AE8544D35BC4F36BDA6B19890C29C22', 'A00004', '表1-4 境内募集余额分地区', '--获取单个对应地区金额


WITH 


v_total as (
 select A.CUR_D , sum(A.MV_AMOUNT)/10000  AS TOTAL  FROM TC_PF_PB_COLLECT_RENEW A 
  --获取币种
  INNER JOIN TMP_PF_PB_INFO B  ON A.PF_ID=B.PF_ID
  --获取产品类型
  INNER JOIN (SELECT DISTINCT B.PF_ID FROM TP_GL_FUNDCODE_MAP B
                          INNER JOIN TC_PF_BSC_INFO_ATTACHED C ON C.PF_ID=B.FIN_PF_ID AND B.SRC_SYS=''TA'' AND C.ATTACHED_VALUE=''${FUNDTYPE}'') D
          ON A.PF_ID=D.PF_ID
  WHERE  BIZ_DATE = ''${FENDDATE}'' AND A.MV_SHARES>0
  AND TO_CHAR(B.PF_BEGIN_DATE,''YYYYMMDD'') <= ''${FENDDATE}'' AND TO_CHAR(B.PFTERMINATION_END_ID,''YYYYMMDD'')> ''${FENDDATE}''
group by CUR_D

),

V_TOTVOLOFDISTA AS (SELECT sum(T0.TOTVOLOFDISTA * T2.NAV)/10000  AS MV_AMOUNT,--金额
                trim(T3.F_REGIONNO) AS F_REGIONNO,--T2.F_REGIONNO, --区域
                T2.CURRENCYTYPE  AS CUR_D--结算币种
              --  SUM(T2.FUNDSIZE)/COUNT(*)/10000 AS FUNDSIZE,
                ,T0.FUNDCODE
                ,FUNDSIZE/10000 AS FUNDSIZE
                ,T3.F_CUSTTYPE
              FROM TR_DF_TA_ACCRECDATA T0--份额数据
              --关联基金信息
              INNER JOIN(SELECT A.TA_PF_ID,
                      A.PF_ID,
                      C.PF_BEGIN_DATE,
                      C.PFTERMINATION_END_ID
                    FROM TP_GL_FUNDCODE_MAP  A 
                    INNER JOIN TC_PF_BSC_INFO_ATTACHED B ON A.FIN_PF_ID =  B.PF_ID
                    INNER JOIN TMP_PF_PB_INFO C ON A.PF_ID = C.PF_ID--获取日期
                    WHERE A.SRC_SYS = ''TA'' AND B.ATTACHED_VALUE = ''${FUNDTYPE}''
                    AND C.PF_BEGIN_DATE <= to_date(''${FENDDATE}'',''yyyyMMdd'') AND C.PFTERMINATION_END_ID > to_date(''${FENDDATE}'',''yyyyMMdd'')
               ) T1 ON T0.FUNDCODE = T1.TA_PF_ID
              INNER JOIN (SELECT FUNDCODE,
                    NVL(b.CUR_LETTER,''CNY'') AS CURRENCYTYPE , 
                    A.NAV   AS NAV --单位净值
                    ,FUNDSIZE
                  FROM TR_DF_TA_DYINFOLITEM A    
                  LEFT JOIN TP_GL_CURRFND_CODE_MAP B ON A.CURRENCYTYPE=B.CUR_NUM--币种
                  WHERE UPDATEDATE = (SELECT MAX(UPDATEDATE) FROM TR_DF_TA_DYINFOLITEM C WHERE UPDATEDATE <= ''${FENDDATE}'') 
                  and A.pf_type = ''YSS_45''
                  AND A.TRANSACTIONCFMDATE = ''${FENDDATE}''
                  AND A.TOTALFUNDVOL >0
               ) T2 ON T0.FUNDCODE = T2.FUNDCODE--行情数据
              LEFT JOIN (SELECT DISTINCT  F_REGIONNO,TAACCOUNTID,F_CUSTTYPE FROM  TC_PF_PB_TA_ACCOUNT T ) T3 ON T0.TAACCOUNTID = T3.TAACCOUNTID--基金账号
              --INNER JOIN TC_PF_BSC_INFO_ATTACHED T4 ON T0.FUNDCODE = T6.PF_ID
              WHERE T0.TRANSACTIONCFMDATE  = ''${FENDDATE}'' and T0.TOTVOLOFDISTA>0  --AND  (T3.F_CUSTTYPE <> ''PB1015''  OR T3.F_CUSTTYPE IS NULL)
              group by T3.F_REGIONNO,T2.CURRENCYTYPE,T0.FUNDCODE,FUNDSIZE,T3.F_CUSTTYPE--,T0.FUNDCODE
      
            ),
            --计算总金额(行情总金额-境外值)
  V_TOTVOLOFDISTA_1 AS (
          SELECT SUM(TOTAL) AS TOTAL, CUR_D FROM (
            SELECT SUM(TOTAL) AS TOTAL,  CUR_D  FROM v_total GROUP ', '0', 0, 'A04', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('807FD3972A7B4867A5AC0F5EEE326932', 'A00005', '表1-5 资管产品提前及延期兑付情况', '--人行-资管产品提前及延期兑付情况
SELECT A.HBH       AS HBH, --行编号
   A.ZM        AS ZM, --项目
   CASE WHEN A.TQ_ZS  =0 THEN NULL  ELSE   A.TQ_ZS END   AS TQ_ZS, --提前只数
   CASE WHEN A.TQ_RMB =0 then null ELSE  A.TQ_RMB/10000 END   AS TQ_RMB, --提前人民币
   CASE WHEN A.TQ_WBZRMB = 0 THEN NULL ELSE A.TQ_WBZRMB/10000 END  AS TQ_WBZRMB, --提前外币折人民币
   CASE WHEN A.TQ_HZ = 0 THEN NULL ELSE A.TQ_HZ/10000 END      AS TQ_HZ, --提前合计
   CASE WHEN A.YQ_ZS =0 THEN NULL ELSE  A.YQ_ZS END    AS YQ_ZS, --延期只数
   CASE WHEN A.YQ_RMB =0 THEN NULL ELSE A.YQ_RMB/10000  END    AS YQ_RMB, --延期人民币
   CASE WHEN A.YQ_WBZRMB  = 0 THEN NULL ELSE A.YQ_WBZRMB/10000 END AS YQ_WBZRMB, --延期外币折人民币
   CASE WHEN A.YQ_HZ = 0 THEN NULL ELSE  A.YQ_HZ/10000 END     AS YQ_HZ --延期合计
   --客户类型
FROM(SELECT A.LINE_ID AS HBH, --行编号
    CASE  WHEN A.LINE_ID = ''515000'' THEN  ''    特定目的载体''  WHEN A.LINE_ID = ''514000'' THEN   ''    金融机构（实体）'' ELSE  A.LINE_NAME1  END AS ZM, --项目
    NULL AS TQ_ZS, --提前只数
    SUM(CASE WHEN B.PFTERMINATION_END_ID < B.PF_END_DATE AND  D.CURRENCYTYPE = ''CNY'' THEN  D.CONFIRMEDAMOUNT   END) AS TQ_RMB, --提前人民币
    SUM(CASE  WHEN B.PFTERMINATION_END_ID < B.PF_END_DATE AND D.CURRENCYTYPE <> ''CNY'' THEN  D.CONFIRMEDAMOUNT   END) AS TQ_WBZRMB, --提前外币折人民币
    SUM(CASE WHEN B.PFTERMINATION_END_ID < B.PF_END_DATE THEN D.CONFIRMEDAMOUNT    END) AS TQ_HZ, --提前合计
    NULL AS YQ_ZS, --延期只数
    SUM(CASE  WHEN B.PFTERMINATION_END_ID > B.PF_END_DATE AND   D.CURRENCYTYPE = ''CNY'' THEN D.CONFIRMEDAMOUNT   END) AS YQ_RMB, --延期人民币
    SUM(CASE WHEN B.PFTERMINATION_END_ID > B.PF_END_DATE AND  D.CURRENCYTYPE <> ''CNY'' THEN   D.CONFIRMEDAMOUNT  END) AS YQ_WBZRMB, --延期外币折人民币
    SUM(CASE  WHEN B.PFTERMINATION_END_ID > B.PF_END_DATE THEN D.CONFIRMEDAMOUNT     END) AS YQ_HZ --延期合计
  FROM (SELECT A.LINE_ID, -- 行编号
          A.LINE_NAME1, -- 行名称 
          A.MATCHUP_ID, -- 对应关系
          B.TAACCOUNTID, --投资人基金账号
          B.TRANSACTIONACCOUNTID --投资人基金交易账号
         FROM (SELECT * FROM TP_GL_PB_HEAD A   WHERE A.REP_ID = ''PB05'' AND SUBSTR(A.LINE_ID, 1, 2) = 51   AND A.IS_FILL = 1) A --获取行编号
         /*LEFT JOIN (SELECT TAACCOUNTID, TRANSACTIONACCOUNTID, NVL(F_CUSTTYPE,''PB1001'') AS F_CUSTTYPE   FROM TC_PF_PB_TA_ACCOUNT) B  ON A.----MATCHUP_ID = B.F_CUSTTYPE -- 根据客户地区获取客户账户资料*/
     LEFT JOIN (SELECT TAACCOUNTID, TRANSACTIONACCOUNTID, NVL(F_CUSTTYPE,''PB1001'') AS F_CUSTTYPE,F_CUSTTYPE1   FROM TC_PF_PB_TA_ACCOUNT) B  ON A.MATCHUP_ID =nvl(TRIM(B.F_CUSTTYPE1),nvl(B.F_CUSTTYPE,''PB1001''))-- B.F_CUSTTYPE -- 根据客户地区获取客户账户资料

         
      ) A
    -- 取出清盘方案 ()
  LEFT JOIN( SELECT T0.CONFIRMEDAMOUNT,--确认金额
          T2.PF_ID,--
          T5.CUR_LETTER AS CURRENCYTYPE,--结算币种
          T0.TAACCOUNTID,--基金账号
          T0.TRANSACTIONACCOUNTID--交易账号
        FROM TR_DF_TA_TDCON T0 --交易表确认数据
        INNER JOIN TP_GL_CURRFND_CODE_MAP T5 ON T0.CURRENCYTYPE = T5.CUR_NUM 
        --获取清盘信息,获取的确认日期必须跟清盘日期相等
        INNER JOIN TR_DF_TA_LQDSCE T1 ON T0.FUNDCODE  =T1.FUNDCODE AND T0.TRANSACTIONCFMDATE = T1.LQDDT
        --获取PF_ID 与 fundcode 对应关系
      ', '0', 0, 'A05', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('3A1EB0BD9E014312AC0933701A77B75E', 'A00006', '表1-6 资管产品到期未兑付情况', '--到期未兑付
SELECT A.HBH          AS HBH, --行编号
       A.ZM           AS ZM, --项目
       CASE WHEN A.DQWDF_ZS =0 THEN NULL ELSE A.DQWDF_ZS END     AS DQWDF_ZS, --提前只数
       CASE WHEN A.DQWDF_RMB = 0  THEN NULL ELSE  A.DQWDF_RMB/10000 END AS DQWDF_RMB, --提前人民币
       CASE WHEN A.DQWDF_WBZRMB= 0  THEN NULL ELSE A.DQWDF_WBZRMB/10000 END  AS  DQWDF_WBZRMB, --提前外币折人民币
       CASE WHEN A.DQWDF_HZ = 0  THEN NULL ELSE  A.DQWDF_HZ/10000  END AS DQWDF_HZ --提前合计
  FROM (
        --客户类型
        SELECT A.LINE_ID AS HBH, --行编号
                CASE
                  WHEN A.LINE_ID = ''615000'' THEN
                   ''    特定目的载体''
                  WHEN A.LINE_ID = ''614000'' THEN
                   ''    金融机构（实体）''
                  ELSE A.LINE_NAME1
                END AS ZM, --项目
                NULL AS DQWDF_ZS, --提前只数
                SUM(CASE
                      WHEN /*C.PFPAYOFF_CUR*/NVL(E.CURRENCYTYPE,''CNY'') = ''CNY'' THEN
                       ROUND(B.TOTVOLOFDISTA * E.NAV,2)
                    END) AS DQWDF_RMB, --到期未兑付人民币
                SUM(CASE
                      WHEN /*C.PFPAYOFF_CUR*/NVL(E.CURRENCYTYPE,''CNY'') <> ''CNY'' THEN
                       ROUND(B.TOTVOLOFDISTA * E.NAV,2)
                    END) AS DQWDF_WBZRMB, --到期未兑付外币折人民币
                SUM(ROUND(NVL(B.TOTVOLOFDISTA * E.NAV,0),2)) AS DQWDF_HZ --到期未兑付合计
--SELECT COUNT(*)
          FROM  (SELECT * FROM TR_DF_TA_ACCRECDATA WHERE TRANSACTIONCFMDATE=''${FENDDATE}'')B 
          LEFT JOIN TP_GL_FUNDCODE_MAP C ON B.FUNDCODE=C.TA_PF_ID AND C.src_sys= ''TA''
          INNER JOIN TMP_PF_PB_INFO D ON C.PF_ID = D.PF_ID and TO_CHAR(D.PF_END_DATE, ''YYYYMMDD'') < ''${FENDDATE}''
                        AND TO_CHAR(D.PF_BEGIN_DATE, ''YYYYMMDD'') < ''${FBEGINDATE}''
                               AND TO_CHAR(D.PFTERMINATION_END_ID, ''YYYYMMDD'') > ''${FENDDATE}'' /*AND D.VARIETY_TYPE_D=''${FUNDTYPE}''*/
      --基金行情表
          LEFT JOIN (SELECT DISTINCT B.PF_ID,B.TA_PF_ID,H.CUR_LETTER  as  CURRENCYTYPE,NAV
         --SELECT COUNT(*)
                          FROM TR_DF_TA_DYINFOLITEM A
          LEFT JOIN TP_GL_CURRFND_CODE_MAP H ON A.CURRENCYTYPE=H.CUR_NUM
          INNER JOIN TP_GL_FUNDCODE_MAP B ON B.src_sys= ''TA''AND  A.FUNDCODE=B.TA_PF_ID
          INNER JOIN (SELECT DISTINCT MAX(T.UPDATEDATE) OVER(PARTITION BY FUNDCODE)as MAXB,   FUNDCODE  FROM TR_DF_TA_DYINFOLITEM T WHERE UPDATEDATE < = ''${FENDDATE}'') C ON A.FUNDCODE = C.FUNDCODE AND C.MAXB = A.UPDATEDATE
                          )E  ON C.PF_ID = E.PF_ID and C.TA_PF_ID=E.TA_PF_ID
          --LEFT JOIN  TP_GL_FUNDCODE_MAP T1 on t1.ta_pf_id=b.fundcode
          INNER JOIN TC_PF_BSC_INFO_ATTACHED T2 ON T2.PF_ID = B.FUNDCODE AND T2.ATTACHED_VALUE = ''${FUNDTYPE}''
                --WHERE T1.SRC_SYS = ''TA'' AND T2.ATTACHED_VALUE = ''${FUNDTYPE}''
          INNER join (SELECT NVL(F_CUSTTYPE,''PB1001'') AS F_CUSTTYPE,TAACCOUNTID,REPLACE(F_CUSTTYPE1,'' '','''') AS F_CUSTTYPE1 FROM TC_PF_PB_TA_ACCOUNT) M on M.TAACCOUNTID=B.TAACCOUNTID
          RIGHT JOIN (SELECT A.LINE_ID, -- 行编号
     ', '0', 0, 'A06', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('E695748CF5EC489F84AA5F69CB12BA47', 'A00007', '表2-1资管产品资产负债情况', '--表2-1取数完整SQL 
--【组合信息】
WITH TT_PF AS
 (SELECT *
    FROM (SELECT A.PF_ID,
                 MAX(DECODE(B.ATTACHED_CODE, ''PB0011'', B.ATTACHED_VALUE)) AS PB0011, --区分公募、专户
                 MAX(DECODE(B.ATTACHED_CODE, ''PB1001'', B.ATTACHED_VALUE)) AS PB1001, --区分成本估值、市值估值
                 MAX(DECODE(B.ATTACHED_CODE, ''PB0027'', B.ATTACHED_VALUE)) AS PB0027 --区分是否QD产品
          -- DECODE(C.ATTACHED_VALUE,''PB0027002'',''是'',''PB0027001'',''否'') AS IS_QDII --新增是否投资境外字段(PB0027002 是，PB0027001 否）
          -- CASE WHEN C.ATTACHED_VALUE=''PB0027002'' THEN FU_GET_TOYWDATE(1,''${FENDDATE}'') ELSE ''${FENDDATE}'' END AS BIZ_DATE --新增QDII取下一工作日为业务日期
            FROM TP_GL_FUNDCODE_MAP A, TC_PF_BSC_INFO_ATTACHED B
          --LEFT JOIN (SELECT * FROM TC_PF_BSC_INFO_ATTACHED WHERE ATTCHED_VALUE IN (''PB0027002'',''PB0027001'')) C ON A.TA_PF_ID=C.PF_ID
           WHERE A.FIN_PF_ID = B.PF_ID
             AND B.ATTACHED_CODE IN (''PB0011'', ''PB1001'', ''PB0027'')
             AND A.SRC_SYS = ''45''
             AND A.IS_VALID = 1
             AND (A.CHG_DATE <= ''${FENDDATE}'' AND A.END_DATE > ''${FENDDATE}'')
           GROUP BY A.PF_ID) T
   WHERE PB0011 = ''${FUNDTYPE}'' --需替换变量
  )

--【资产负债明细部分】
, TT_ZCFZMX AS 
 (SELECT ATTYPE_EXT_ID,
       SUM(RMB_AMOUNT_OC) AS RMB_AMOUNT_OC, --人民币
       SUM(USD_AMOUNT_OC) AS USD_AMOUNT_OC, --美元，
       SUM(EUR_AMOUNT_OC) AS EUR_AMOUNT_OC, --欧元，
       SUM(GBP_AMOUNT_OC) AS GBP_AMOUNT_OC, --英镑，
       SUM(JPY_AMOUNT_OC) AS JPY_AMOUNT_OC, --日元，
       SUM(OTH_AMOUNT_OC) AS OTH_AMOUNT_OC, --其他，如转人民币需乘汇率
       SUM(TOTAL_AMOUNT_OC) AS TOTAL_AMOUNT_OC--合计
  FROM
       (
       SELECT A.PF_ID,
                 CASE  
                   -- 回购和拆借  ->  其中：中央交易对手方
                   WHEN ATTYPE_EXT_ID=  ''PB010502000000'' THEN ''PB010502060100''
                   WHEN ATTYPE_EXT_ID=  ''PB020101020000'' THEN ''PB020101020601''
                   -- 优先级 ->  住户
                   WHEN ATTYPE_EXT_ID = ''PB020201010000'' THEN ''PB020201010100''
                   -- 劣后级 ->  住户
                   WHEN ATTYPE_EXT_ID = ''PB020201020000'' THEN ''PB020201020100''
                   --融通专户：基金、债券、ABS 数量为1的 转入到  金融衍生品境外 
                   WHEN T.PB0011=''PB'' || ''11004'' AND PA_CODE LIKE ''ZQTZ%'' AND SUBSTR(SUBJ_ATTR,1,2) IN (''JJ'',''LC'',''ZQ'') AND ATTYPE_QTY = 1 THEN ''PB010802000000'' 
                   --融通专户：金融衍生产 划到了 应收账款
                  -- WHEN T.PB0011=''PB'' || ''11004'' AND ATTYPE_EXT_ID = ''PB010801000000'' THEN ''PB010900000000''
                   ELSE ATTYPE_EXT_ID
                 END AS ATTYPE_EXT_ID, --资产划分
                 --NVL(B.NODE_NAME, ATTYPE_EXT_ID_NAME) AS ATTYPE_EXT_ID_NAME,
                 CASE WHEN A.CUR_D = ''CNY'' THEN DECODE(PB1001, ''PB100101'', A.ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) END AS RMB_AMOUNT_OC, --人民币
                 CASE WHEN A.CUR_D = ''USD'' THEN DECODE(PB1001, ''PB100101'', A.ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) END AS USD_AMOUNT_OC, --美元，
                 CASE WHEN A.CUR_D = ''EUR'' THEN DECODE(PB1001, ''PB100101'', A.ATTYPE_COST_OC, A.ATTYPE_AMOUNT_OC) END AS EUR_AMOUNT', '0', 0, 'A07', 0, null, 'weijunqi', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000201');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('88B8E2708F994FAC8FE2919C88344148', 'A00069', '同业存单投资明细', '
--同业存单投资明细

SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(T7.CPDM, '''') AS CPDM,
       NVL(T1.JYCSDM, '''') AS JYCSDM,
       NVL(T1.CDDM, '''') AS CDDM,
       NVL(T1.CDMC, '''') AS CDMC,
       NVL(T2.MRSL, 0) AS MRSL,
       NVL(T2.MRJE, 0) AS MRJE,
       NVL(T2.MCSL, 0) AS MCSL,
       NVL(T2.MCJE, 0) AS MCJE,
       NVL(T1.QMSL, 0) AS QMSL,
       NVL(T1.QMCB, 0) AS QMCB,
       NVL(CASE
             WHEN T7.GZFF = ''1'' THEN
              T1.QMCB
             ELSE
              T1.QMSZ
           END,
           0) AS QMSZ,
       NVL(T1.QMGZZZ, 0) AS QMGZZZ,
       NVL(CASE
             WHEN T7.GZFF = ''1'' THEN
              T1.QMSZ
           END,
           0) AS YZJZ,
       NVL(T3.FXRQ, '''') AS FXRQ,
       NVL(T3.DQRQ, '''') AS DQRQ,
       NVL(T3.CDTS, '''') AS CDTS,
       NVL(T3.MZ, '''') AS MZ,
       NVL(T3.CDLL, '''') AS CDLL,
       NVL(T4.PJNR, ''无评级'') AS ZTPJ,
       NVL(T3.FXRDM, '''') AS YHDM,
       NVL(T3.FXRMC, '''') AS YHMC,
       NVL(T5.N_JZCE, '''') AS YHJZC,
       NULL AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT T1.PF_ID,
               T1.BIZ_DATE,
               GET_CODE(''C_MKT_CODE'', T1.MARKET_CODE) AS JYCSDM,
               T1.MARKET_CODE,
               T1.SYMBOL_CODE,
               CASE
                 WHEN INSTR(T1.SYMBOL_CODE, '' '') > 0 THEN
                  SUBSTR(T1.SYMBOL_CODE,
                         1,
                         INSTR(T1.SYMBOL_CODE, '' '', -1) - 1)
                 ELSE
                  T1.SYMBOL_CODE
               END AS CDDM,
               MAX(T1.SEC_CODE_NAME) AS CDMC,
               SUM(T1.ATTYPE_QTY) AS QMSL,
               SUM(T1.ATTYPE_COST_OC) AS QMCB,
               SUM(T1.ATTYPE_AMOUNT_OC) AS QMSZ,
               SUM(T1.N_HLDVVA_L) AS QMGZZZ
          FROM TC_HP_PB_DOM_INFO T1
         WHERE T1.PF_ID ${PFID}
           AND T1.BIZ_DATE = ''${FENDDATE}''
           AND T1.C_DV_KM_CLS = ''KC_ZC''
           AND T1.C_DAI_CODE IN (''ZQTZ_CB'', ''ZQTZ_YZJ'')
           AND T1.C_SEC_VAR_CODE = ''ZQ''
           AND T1.C_SEC_VAR_CODE_SUB = ''ZQ_TYCD''
         GROUP BY T1.PF_ID,
                  T1.BIZ_DATE,
                  GET_CODE(''C_MKT_CODE'', T1.MARKET_CODE),
                  T1.MARKET_CODE,
                  T1.SYMBOL_CODE) T1 -- 持仓数据
  LEFT JOIN (SELECT T2.PF_ID,
                    MAX(T2.BIZ_DATE) BIZ_DATE,
                    T2.C_SEC_CODE,
                    SUM(CASE
                          WHEN T2.N_CAPI_WAY = 1 THEN
                           N_TD_AMOUNT
                        END) AS MRSL,
                    SUM(CASE
                          WHEN T2.N_FUND_WAY = -1 THEN
                           N_TD_MONEY
                        END) AS MRJE,
                    SUM(CASE
                          WHEN T2.N_CAPI_WAY = -1 THEN
                           N_TD_AMOUNT
                        END) AS MCSL,
                    SUM(CASE
                          WH', '0', null, 'A1033', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('0292DB2677214EFB915A945B5EA4C7BB', 'A00054', '投资者年龄结构', '/*
CREATE INDEX IDX_TR_DF_TA_ACCRECDATA_LOCAL ON TR_DF_TA_ACCRECDATA(TRANSACTIONCFMDATE) LOCAL;
*/

WITH V_ACCRECDATA AS
 (SELECT SUM(T1.CYSZ) AS CYSZ, -- 持有市值
         T1.DJJGDM, -- 登记机构代码
         T1.DJJGMC, -- 登记机构名称
         T1.NLFD, -- 年龄分段
         COUNT(DISTINCT T1.INVESTOR) AS YXTZZRS -- 有效投资者人数
    FROM (SELECT T1.TAACCOUNTID,
                 T1.PF_TYPE,
                 T1.FUNDCODE,
                 T1.TOTVOLOFDISTA * T3.NAV AS CYSZ,
                 T2.CERTIFICATETYPE || T2.CERTIFICATENO || T2.INVESTORNAME AS INVESTOR,
                 CASE
                   WHEN T2.AGE <= 0 THEN
                    9
                   WHEN T2.AGE > 0 AND T2.AGE < 30 THEN
                    1
                   WHEN T2.AGE >= 30 AND T2.AGE < 40 THEN
                    2
                   WHEN T2.AGE >= 40 AND T2.AGE < 50 THEN
                    3
                   WHEN T2.AGE >= 50 AND T2.AGE < 60 THEN
                    4
                   ELSE
                    5
                 END NLFD,
                 T4.DJJGDM,
                 T4.DJJGMC
            FROM (SELECT T1.TAACCOUNTID,
                         T1.PF_TYPE,
                         T1.FUNDCODE,
                         SUM(T1.TOTVOLOFDISTA) AS TOTVOLOFDISTA
                   -- FROM TR_DF_TA_ACCRECDATA T1
                   FROM TR_DF_TA_ACCRECDATA partition (PART_${FENDDATE}) T1
                   WHERE --T1.TRANSACTIONCFMDATE = ''${FENDDATE}''AND
                      T1.TOTVOLOFDISTA > 0
                   GROUP BY T1.TAACCOUNTID, T1.PF_TYPE, T1.FUNDCODE) T1 -- 份额数据
           INNER JOIN (SELECT T2.TAACCOUNTID,
                             T2.PF_TYPE,
                             T2.CERTIFICATETYPE,
                             T2.CERTIFICATENO,
                             T2.INVESTORNAME,
                             TRUNC((''${FENDDATE}'' - T2.INVESTORSBIRTHDAY) /
                                   10000) AS AGE
                        FROM TC_PF_PB_TA_ACCOUNT T2
                       WHERE T2.INDIVIDUALORINSTITUTION = ''1''
                         AND T2.CERTIFICATETYPE = ''0''
                         AND T2.INVESTORSBIRTHDAY IS NOT NULL) T2 -- 账户数据
              ON T1.TAACCOUNTID = T2.TAACCOUNTID
             AND T1.PF_TYPE = T2.PF_TYPE
           INNER JOIN TR_DF_TA_DYINFOLITEM T3 -- 行情数据
              ON T3.TRANSACTIONCFMDATE = ''${FENDDATE}''
             AND T1.FUNDCODE = T3.FUNDCODE
             AND T3.PF_TYPE = ''YSS_45''
           INNER JOIN TC_PF_SYSSOURCE_INFO T4 -- 登记机构
              ON T1.PF_TYPE = T4.XTLYDM
             AND T4.SFZJ = ''1'') T1
   INNER JOIN TP_GL_FUNDCODE_MAP T2 -- 产品信息，用于过滤
      ON T1.FUNDCODE = T2.TA_PF_ID
     AND T2.SRC_SYS = ''TA''
   WHERE T2.PF_ID ${PFID}
   GROUP BY T1.DJJGDM, T1.DJJGMC, T1.NLFD)

SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH, --机构编号
       SUBSTR(''${FENDDATE}'', 0, 4) BGND, --报告年度
       ''1'' BGQJ, --报告期间
       ''${FENDDATE}'' QCRQ, --期初日期
       ''${FENDDATE}'' QMRQ, --期末日期
       DJJGDM, --登记机构代码
       DJJGMC, --登记机构名称
       NLFD, ', '0', null, 'A1017', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('0BA14C09AEDF4B0F9B6AD0827391A619', 'A00101', '产品最终投资者', 'WITH TT AS
 (SELECT ''HS_BJHG40'' AS PF_TYPE, MAX(BIZ_DATE) AS BIZ_DATE
    FROM TC_DF_HOLIDAY C
   WHERE C.C_DATA_TYPE = ''CN''
     AND C.IS_HOLIDAY = ''1''
     AND C.BIZ_DATE <= ''${FENDDATE}'')

SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH, --机构编号
       SUBSTR(''${FENDDATE}'', 0, 4) BGND, --报告年度
       ''3'' BGQJ, --报告期间
       SUBSTR(''${FENDDATE}'', 0, 6) || ''01'' QCRQ, --期初日期
       ''${FENDDATE}'' QMRQ, --期末日期
       T3.CPDM, --产品代码
       T1.XCCPDM, --下层产品代码
       T1.XCCPMC, --下层产品名称
       T1.SCCPDM, --上层产品代码
       T1.SCCPMC, --上层产品名称
       T1.SCCPLB, --上层产品类别
       T1.SCCPGLRDM, --上层产品管理人代码
       T1.SCCPGLRMC, --上层产品管理人名称
       NVL(T1.CYFS,
           CASE
             WHEN T4.FUNDCODE = ''511910'' THEN
              T4.TOTVOLOFDISTA * 100
             ELSE
              T4.TOTVOLOFDISTA
           END) AS CYFS, --持有人份额
       NVL(ROUND(T1.CYSZ, 8), ROUND(T4.TOTVOLOFDISTA * T5.NAV, 8)) AS CYSZ, --持有市值
       T1.GRTZZRS, --个人投资者人数
       T1.CYSZ1000WYXDGRTZZRS, --持有市值1000万以下的个人投资者人数
       T1.CYSZ1000WYSDGRTZZRS, --持有市值1000万以上（含）的个人投资者人数
       T1.GRTZZCYFS, --个人投资者持有份数
       ROUND(T1.GRTZZCYSZ, 8) AS GRTZZCYSZ, --个人投资者持有市值
       T1.JGTZZRS, --机构投资者人数
       T1.JGTZZCYFS, --机构投资者持有份数
       ROUND(T1.JGTZZCYSZ, 8) AS JGTZZCYSZ, --机构投资者持有市值
       ROUND(T1.JRJGTZZCYSZ, 8) AS JRJGTZZCYSZ, --金融机构投资者持有市值
       ROUND(T1.FJRJGTZZCYSZ, 8) AS FJRJGTZZCYSZ, --非金融机构投资者持有市值
       T1.CPTZZGS, --产品投资者个数
       T1.CPTZZCYFS, --产品投资者持有份数
       ROUND(T1.CPTZZCYSZ, 8) AS CPTZZCYSZ, --产品投资者持有市值
       ROUND(T1.GMCPTZZCYSZ, 8) AS GMCPTZZCYSZ, --公募产品投资者持有市值
       ROUND(T1.JBYLJTZZCYSZ, 8) AS JBYLJTZZCYSZ, --基本养老金投资者持有市值
       ROUND(T1.SBJJTZZCYSZ, 8) AS SBJJTZZCYSZ, --社保基金投资者持有市值
       ROUND(T1.QYNJTZZCYSZ, 8) AS QYNJTZZCYSZ, --企业年金投资者持有市值
       ROUND(T1.ZYNJTZZCYSZ, 8) AS ZYNJTZZCYSZ, --职业年金投资者持有市值
       T1.BZ
       ,''1060000001'' AS PF_ID
  FROM TC_PF_FININVER_INFO T1
 INNER JOIN TP_GL_FUNDCODE_MAP T2
    ON T1.CPDM = T2.FIN_PF_ID
   AND T2.SRC_SYS = ''TA''
 INNER JOIN V_PF_CPDM T3
    ON T1.CPDM = T3.TA_PF_ID
  LEFT JOIN (SELECT FUNDCODE, TAACCOUNTID, TOTVOLOFDISTA
               FROM TR_DF_TA_ACCRECDATA T4
              WHERE T4.PF_TYPE = ''HS_BJHG40''
                AND T4.TRANSACTIONCFMDATE = (SELECT BIZ_DATE FROM TT)
                 OR T4.PF_TYPE <> ''HS_BJHG40''
                AND T4.TRANSACTIONCFMDATE = ''${FENDDATE}'') T4
    ON T2.TA_PF_ID = T4.FUNDCODE
   AND T1.SCCPZHDM = T4.TAACCOUNTID
  LEFT JOIN TR_DF_TA_DYINFOLITEM T5
    ON T5.TRANSACTIONCFMDATE = ''${FENDDATE}''
   AND T4.FUNDCODE = T5.FUNDCODE
   AND T5.PF_TYPE = ''YSS_45''
 WHERE T2.PF_ID IS NOT NULL
   AND T2.END_DATE>=''${FENDDATE}''
 ORDER BY T3.CPDM, T1.XCCPMC, T1.SCCPMC                                                                                                                                                                                                                                                                                                                                                ', '0', null, 'A3024', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('A8051495FA11495F9229AFEC1AF68CF0', 'A00073', '商品现货投资明细', '
--商品现货投资明细

--交易品种、交易单位 取值不对 取值待确认  

SELECT  FU_Get_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR( ''${FENDDATE}'' , 0, 4) AS BGND,
       ''1'' AS BGQJ,
        ''${FENDDATE}''  AS QCRQ,
        ''${FENDDATE}''  as QMRQ,
       nvl(P.CPDM,'''') AS CPDM,
       nvl(JYCSDM,'''') as JYCSDM,
       nvl(CASE WHEN INSTR(SYMBOL_CODE,'' '')>0 THEN SUBSTR(SYMBOL_CODE,1,INSTR(SYMBOL_CODE,'' '')-1) ELSE SYMBOL_CODE END,'''') AS HYDM,
       nvl(SEC_CODE_NAME,'''') AS HYMC,
       nvl(SUM(MRSL),0) AS MRSL,
       nvl(SUM(MRJE),0) AS MRJE,
       nvl(SUM(MCSL),0) AS MCSL,
       nvl(SUM(MCJE),0) AS MCJE,
       nvl(SUM(ATTYPE_QTY),0) AS QMSL,
       nvl(SUM(ATTYPE_COST_SC),0) AS QMCB,
       SUM(ATTYPE_AMOUNT_SC) AS QMSZ,
       nvl(MAX(C_SEC_VAR_CODE),'''') AS JYPZ,
       '''' AS JYDW,
       '''' AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT A.PF_ID,
               CASE
                 WHEN MARKET_CODE = ''XSHE'' THEN
                  ''0103''
                 WHEN MARKET_CODE = ''XSHG'' THEN
                  ''102''
                 WHEN MARKET_CODE IN (''COTC'', ''XCFE'') THEN
                  ''101''
                 ELSE
                  ''199''
               END AS JYCSDM,
               A.SYMBOL_CODE,
               A.SEC_CODE_NAME,
               CASE
                 WHEN C_DT_CODE IN (''XHJY_KC'', ''XHJY_BUY'') THEN
                  N_TD_AMOUNT
               END AS MRSL,
               CASE
                 WHEN C_DT_CODE IN (''XHJY_KC'', ''XHJY_BUY'') THEN
                  N_TD_MONEY
               END AS MRJE,
               CASE
                 WHEN C_DT_CODE IN (''XHJY_PC'', ''XHJY_JG'', ''XHJY_SELL'') THEN
                  N_TD_AMOUNT
               END AS MCSL,
               CASE
                 WHEN C_DT_CODE IN (''XHJY_PC'', ''XHJY_JG'', ''XHJY_SELL'') THEN
                  N_TD_MONEY
               END AS MCJE,
               ATTYPE_QTY,
               ATTYPE_COST_SC,
               ATTYPE_AMOUNT_SC,
               B.C_SEC_VAR_CODE /*,C_EXE_FHYDW_I 交易单位*/
        
          FROM TC_HP_PB_DOM_INFO A
          LEFT JOIN TC_TD_PB_DOM_INFO B
            ON A.PF_ID = B.PF_ID
           AND A.BIZ_DATE = B.BIZ_DATE
           AND A.SYMBOL_CODE = B.c_sec_code
           AND A.C_SEC_VAR_CODE = B.C_SEC_VAR_CODE
         WHERE A.C_DV_KM_CLS = ''KC_ZC''
           AND B.C_TD_TYPE = ''XHJY''
           AND A.PF_ID ${PFID}
           AND A.BIZ_DATE BETWEEN  ''${FENDDATE}''  AND  ''${FENDDATE}'' ) A
           left join V_PF_CPDM P
  on A.PF_ID=P.PF_ID
 GROUP BY A.PF_ID, JYCSDM, SYMBOL_CODE, SEC_CODE_NAME,P.CPDM                                    ', '0', null, 'A1037', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('CC5C69274BA240DCA3FC4ED1EC298CC4', 'A00041', '下属产品基本信息', '--02下属产品基本信息
/*
1、?包括同一产品为区分不同收费方式、投资门槛和销售渠道，并且分别计算份额净值而设置的多个下属产品/份额类别（如公募基金的A/B/C类）。
2、?包括同一产品为区分不同风险收益特征而设置的多个下属产品/份额类别（如公募分级基金、结构化资产管理计划的不同份额类别）。
3、?“份额类别”为“其他”时，需要在“备注”中说明具体的份额类别。
4、?内地互认基金份额类别通过本接口报送。
5、?不包括养老金产品下设的每个分期账户。
6、?公募基金从募集开始日期（含）到最后运作日期（含）之间的每个交易日报送。
资产管理计划从成立日期（含）到计划终止日期（含）之间的每个交易日报送。


*/
SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,--机构编号
   SUBSTR(''${FENDDATE}'', 0, 4) BGND,--报告年度
   ''1'' BGQJ,--报告期间
   ''${FENDDATE}'' QCRQ,--期初日期
   ''${FENDDATE}'' QMRQ,--期末日期
   NVL(D.CPDM, A.PF_ID) CPZDM,--产品主代码
   B.PF_ID CPDM,--产品代码
   NVL(B.PF_NAME, A.PF_NAME) CPMC,--产品名称
   NVL(B.PF_SYNOPSIS, A.PRODUCT_FOR_SHORT) CPJC,--产品简称
   B.SHARE_CLASS FELB,--份额类别
   B.EXP_RAISE_AMOUNT YQMJJE,--预期募集金额
   B.BIZ_COMP_BENCHMARK YJBJJZ,--业绩比较基准
   CASE WHEN D.CPLX = ''1'' THEN B.IS_BE_LISTED END SFSSJY,--是否上市交易
   CASE WHEN D.CPLX = ''1'' THEN B.LIST_MARKETPLACE END SSJYCS,--上市交易场所
   CASE WHEN D.CPLX = ''1'' THEN B.IS_INLANDMUT_FUNDSHARE END SFNDHRJJFE,--是否内地互认基金分
   CASE WHEN D.CPLX = ''1'' THEN B.EXP_ANNUAL_RETURN_RATE  END YQNSYL,--预期年收益
   B.REMORK BZ--备注
   -- ,C.PF_ID
   ,''1060000001'' as PF_ID
FROM TC_PF_BSC_INFO A
INNER JOIN TC_PF_GRADEDFUND_INFO B ON A.PF_ID = B.PF_M_ID
INNER JOIN TP_GL_FUNDCODE_MAP C ON A.PF_ID = C.TA_PF_ID AND C.SRC_SYS <> ''TA''
INNER JOIN V_PF_BSC_INFO_ATTACHED D ON A.PF_ID = D.PF_ID
WHERE   A.PF_REAL_END_DATE >= ''${FENDDATE}''
AND C.PF_ID ${PFID}
null, 'A1002', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('9A204B22928E5EDDE0536ABCA8C09AEF', 'SZ001', '深圳系统计算T+N数据日期sql维护', 'WITH TT_PF_DATE AS
 (SELECT B.PF_ID,
         B.CPDM,
         B.TA_PF_ID,
         C.ATTACHED_VALUE AS CPLB,
         TO_NUMBER(D.ATTACHED_VALUE) AS GZWCTS,
         E.REPORT_ID,
         E.REPORT_NAME,
         CASE WHEN E.ISRELATEPRODUCT=''n'' THEN FU_GET_CPYWDATE(NVL(D.ATTACHED_VALUE+E.SUBMIT_TIME_LIMIT,''1''),''${REPORTTIME}'')
           ELSE FU_GET_CPYWDATE(NVL(E.SUBMIT_TIME_LIMIT,''1''),''${REPORTTIME}'') END AS BIZ_DATE
    FROM TC_PF_BSC_INFO A
    JOIN V_PF_CPDM B
      ON A.PF_ID = B.TA_PF_ID
    JOIN TC_PF_BSC_INFO_ATTACHED C
      ON A.PF_ID = C.PF_ID
      AND C.ATTACHED_CODE=''A00152''
    JOIN TC_PF_BSC_INFO_ATTACHED D
      ON A.PF_ID = D.PF_ID
      AND D.ATTACHED_CODE=''30034''
    JOIN TC_REP_PARA E
      ON E.REPORT_ORG = ''A0001002''
    AND E.REPORT_ID =''${REPORTID}''
   WHERE A.PF_REAL_END_DATE>FU_GET_CPYWDATE(''5'',''${REPORTTIME}'')
),
TT_REST_DAY AS (
  SELECT  A.BIZ_DATE,
          FU_GET_TOYWDATE(''1'',A.UP_DATE) AS DOWN_DATE,
          CASE WHEN 
           TO_CHAR((TO_DATE(A.BIZ_DATE,''yyyymmdd'')+1),''mm'')<>SUBSTR(A.BIZ_DATE,5,2) 
          THEN 1 ELSE 0 END AS IS_YD
   FROM TC_DF_HOLIDAY A 
  WHERE A.C_DATA_TYPE = ''CN''
    AND A.IS_HOLIDAY =''0''
    AND A.BIZ_DATE BETWEEN TO_CHAR(TO_DATE(''${REPORTTIME}'',''YYYYMMDD'')-30,''YYYYMMDD'')  AND ''${REPORTTIME}''
)     
      SELECT T1.REPORT_ID AS REPORT_ID,
             T1.REPORT_NAME,
             T1.TA_PF_ID AS FIN_PF_ID,
             T1.PF_ID,
             T1.CPDM,
             T1.BIZ_DATE,
             ''${REPORTTIME}'' AS TODAY
       FROM TT_PF_DATE T1
      UNION ALL 
      SELECT T2.REPORT_ID AS REPORT_ID,
             T2.REPORT_NAME,
             T2.TA_PF_ID AS FIN_PF_ID,
             T2.PF_ID,
             T2.CPDM,
             T3.BIZ_DATE,
             ''${REPORTTIME}'' AS TODAY
          FROM TT_PF_DATE T2
          JOIN TT_REST_DAY T3
            ON (T3.IS_YD=1 AND T3.DOWN_DATE=T2.BIZ_DATE AND T2.CPLB <> ''03'' AND T2.REPORT_ID IN (''A1026'',''A1012'',''A1066''))
               OR ( T2.CPLB=''03'' AND T3.DOWN_DATE=T2.BIZ_DATE AND T2.REPORT_ID IN (''A1026'',''A1012'',''A1066''))
               OR ( T3.DOWN_DATE=T2.BIZ_DATE AND T2.REPORT_ID IN (''A1004'',''A1005''))
                
             ', '3', null, 'A1001', null, '全量', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('22D7C8B3870D4B6381020776FF7084FD', 'A00059', '产品关系人购买情况', 'with  TEMP_TS_CPGXRGMQKB as ( select *
    from (SELECT TAACCOUNTID, SUM(CONFIRMEDVOL) AS SL, T01.FUNDCODE,''${FENDDATE}'' AS FENDDATE
            FROM TR_DF_TA_TDCON T01
           WHERE T01.TRANSACTIONCFMDATE = ''${FENDDATE}''
           GROUP BY TAACCOUNTID, T01.FUNDCODE) t
   where t.sl > 0)
  SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) BGND, --报告年度
       ''1'' BGQJ, --报告期间
       ''${FENDDATE}'' QCRQ, --期初日期
       ''${FENDDATE}'' QMRQ, --期末日期
       CPDM, --产品代码
       TZZJJZH, --基金账号
       TZZZHMC, --客户名称
       TZZZJLX, --证件类型
       TZZZJHM, --证件号码
       SUM(CYFS) AS CYFS, --持有份额
       ROUND(SUM(CYSZ),8) AS CYSZ, --持有市值
       TZZYBCPGX, --投资者与本产品关系
       '''' BZ,
       PF_ID AS PFID
  FROM (SELECT T6.CPDM, --产品代码
               T1.ZHDM AS TZZJJZH, --基金账号
               T1.ZHMC AS TZZZHMC, --客户名称
               NVL(T7.RISK_CODE, ''0399'') AS TZZZJLX, --证件类型
               T4.CERTIFICATENO TZZZJHM, --证件号码
                  NVL(T2.TOTVOLOFDISTA,0) CYFS, --持有份额
       NVL(CASE
                   WHEN T2.FUNDCODE IN (''519898'',''519899'') THEN
                     T2.TOTVOLOFDISTA * 0.01
           WHEN T2.FUNDCODE IN (''511910'',''511690'') THEN
                     T2.TOTVOLOFDISTA * 100
                   ELSE
          T2.TOTVOLOFDISTA * T3.NAV
             END, 0) AS CYSZ, --持有市值
               T1.TZZYCPGX AS TZZYBCPGX, --投资者与本产品关系
               '''' BZ,
               T5.PF_ID
          FROM TC_PF_TZCPGX T1
         INNER JOIN (
                     select TAACCOUNTID,fundcode from TEMP_TS_CPGXRGMQKB where FENDDATE=''${FENDDATE}''
                     ) T01
            ON T1.ZHDM = T01.TAACCOUNTID
         LEFT JOIN TR_DF_TA_ACCRECDATA partition (PART_${FENDDATE}) T2
           ON T1.ZHDM = T2.TAACCOUNTID
       AND T2.FUNDCODE=T01.FUNDCODE
         LEFT JOIN TR_DF_TA_DYINFOLITEM T3
            ON T3.TRANSACTIONCFMDATE = ''${FENDDATE}''
           AND T2.FUNDCODE = T3.FUNDCODE
           AND T3.PF_TYPE = ''YSS_45''
         LEFT JOIN TC_PF_PB_TA_ACCOUNT T4
            ON T1.ZHDM = T4.TAACCOUNTID
           AND T2.PF_TYPE = T4.PF_TYPE
         LEFT JOIN TP_GL_FUNDCODE_MAP T5
            ON T2.FUNDCODE = T5.TA_PF_ID
           AND T5.SRC_SYS = ''TA''
         LEFT JOIN V_PF_CPDM T6
            ON T5.FIN_PF_ID = T6.TA_PF_ID
          LEFT JOIN TP_GL_TA_CORRESPD T7
            ON T4.INDIVIDUALORINSTITUTION = T7.TA_CODE
           AND T4.CERTIFICATETYPE = T7.TA_NAME
           AND T7.RISK_TYPE = ''PB16''
         WHERE T5.PF_ID ${PFID}   )
 GROUP BY CPDM, TZZJJZH, TZZZHMC, TZZZJLX, TZZZJHM, TZZYBCPGX,PF_ID
 ORDER BY CPDM, TZZJJZH                                                                                                                                                                                                                                                                                                ', '0', null, 'A1022', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('51D3743808C84D029FC84E39B559E685', 'A00072', '协议回购质押券明细', '
---协议回购质押券明细

SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(A.CPDM, '''') AS CPDM,
       NVL(A.JYCSDM, '''') AS JYCSDM,
       NVL(A.JYBH, '''') AS JYBH,
       NVL(A.CJRQ, '''') AS CJRQ,
       NVL(CASE
             WHEN INSTR(ZYQDM, '' '') > 0 THEN
              SUBSTR(ZYQDM, 1, INSTR(ZYQDM, '' '') - 1)
             ELSE
              ZYQDM
           END,
           '''') AS ZYQDM,
       NVL(B.ZQMC, '''') AS ZYQMC,
       NVL(B.ZYQLB, '''') AS ZYQLB,
       NVL(C.PJNR, ''无评级'') AS ZYQZTPJ,
       NVL(D.PJNR, ''无评级'') AS ZYQPJ,
       '''' AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT A.PF_ID,
               P.CPDM,
               A.C_SEC_CODE AS SYMBOL_CODE,
               GET_CODE(''C_MKT_CODE'', A.C_MKT_CODE) AS JYCSDM,
               A.C_MKT_CODE,
               A.C_IDEN AS JYBH,
               A.BIZ_DATE AS CJRQ,
               NVL(CASE
                 WHEN INSTR(B.C_PLE_SEC, '' '') > 0 THEN
                  SUBSTR(B.C_PLE_SEC,
                         1,
                         INSTR(B.C_PLE_SEC, '' '', -1) - 1)
                 ELSE
                  B.C_PLE_SEC
               END, '''') AS ZYQDM
          FROM TC_TD_PB_DOM_INFO A
          LEFT JOIN TC_PD_PB_DOM_INFO B
            ON A.C_IDEN = B.C_RELA_NUM
          LEFT JOIN V_PF_CPDM P
            ON A.PF_ID = P.PF_ID
         WHERE (A.C_TD_TYPE = ''HGJY'' AND A.C_DV_TYPE_SUB = ''HGJY_SQ'' AND
               A.C_SEC_CODE LIKE ''205%'' OR
               A.C_TD_TYPE = ''HGJY_GP'' AND A.C_DV_TYPE_SUB = ''HGJY_CSHG'')
           AND A.C_SEC_VAR_CODE = ''HG''
           AND A.C_DT_CODE = ''HGJY_NHG'' --报送逆回购质押券信息
           AND A.PF_ID ${PFID}
           AND A.BIZ_DATE <= ''${FENDDATE}''
           AND A.D_SETT_FACT > ''${FENDDATE}'') A
  LEFT JOIN (SELECT ZQDM,
                    SSSC,
                    ZQMC,
                  CASE
                      WHEN ZQLB = ''01'' THEN -- 国债
                       ''01'' -- 国债
                      WHEN ZQLB = ''02'' THEN -- 地方政府债
                       ''02'' -- 地方政府债
                      WHEN ZQLB = ''03'' THEN -- 央行票据
                       ''03'' -- 央行票据
                      WHEN ZQLB = ''04'' OR ZQLB = ''05'' OR ZQLB = ''06'' THEN -- 政策性银行债、商业银行债、非银行金融机构债
                       ''04'' -- 金融债
                      WHEN ZQLB = ''07'' THEN -- 企业债
                       ''05'' -- 企业债
                      WHEN ZQLB = ''12'' THEN -- 政府支持机构债
                       ''06'' -- 政府支持机构债
                      WHEN ZQLB = ''09'' THEN -- 中期票据
                       ''07'' -- 中期票据
                      WHEN ZQLB = ''10'' THEN -- 短期融资券（含超短融）
                       ''08'' -- 短期融资券
                      WHEN ZQLB = ''11'' THEN -- 定向工具
                       ''09'' -- 定向工具
                      WHEN ZQLB = ''18'' THEN -- 境外债券
                       ''10'' -- 国际机构债
                      WHEN ZQLB = ''大额存单'' THEN  -- 暂无此类型
                       ''11''
                      WHEN ZQLB = ''16'' THEN -- 资产支持证券（在交易所挂牌）', '0', null, 'A1036', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('E6020E20FC0C40898789777676C67B0A', 'A00070', '债券回购投资明细', '---债券回购投资明细表
SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(T2.CPDM, '''') AS CPDM,
       NVL(T1.JYCSDM, '''') AS JYCSDM,
       NVL(T1.PZDM, ''0'') AS PZDM,
       NVL(MAX(T1.PZMC), '''') AS PZMC,
       NVL(T1.HGFX, '''') AS HGFX,
       NVL(T1.CJRQ, '''') AS CJRQ,
       NVL(T1.HGDQRQ, '''') AS HGDQRQ,
       NVL(MAX(T1.HGQX), '''') AS HGQX,
       -- 如果有多个不同的回购利率，则不写值，否则写其中一条记录的回购利率
       CASE WHEN COUNT(DISTINCT T1.HGLL) > 1 THEN '''' ELSE TO_CHAR(MAX(T1.HGLL)) END AS HGLL,
       NVL(SUM(T1.QMJE), 0) AS QMJE,
       NVL(SUM(T1.DQJSJE), 0) AS DQJSJE,
       '''' AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT T1.PF_ID,
               GET_CODE(''C_MKT_CODE'', T1.C_MKT_CODE) AS JYCSDM,
               CASE
                 WHEN INSTR(T1.C_SEC_CODE, '' '') > 0 THEN
                  SUBSTR(T1.C_SEC_CODE, 1, INSTR(T1.C_SEC_CODE, '' '') - 1)
                 ELSE
                  T1.C_SEC_CODE
               END AS PZDM,
               T1.C_SEC_NAME AS PZMC,
               CASE
                 WHEN T1.C_DT_CODE = ''HGJY_ZHG'' THEN
                  ''1''
                 WHEN T1.C_DT_CODE = ''HGJY_NHG'' THEN
                  ''2''
               END AS HGFX,
               T1.BIZ_DATE AS CJRQ,
               T1.D_SETT_FACT AS HGDQRQ,
               FLOOR(TO_DATE(T1.D_SETT_FACT, ''YYYYMMDD'') -
                     TO_DATE(T1.BIZ_DATE, ''YYYYMMDD'')) AS HGQX,
               T1.N_HG_RATE / 100 AS HGLL,
               T1.N_TD_MONEY AS QMJE,
               T1.N_SETT_MONEY_DUE + T1.N_INTEREST AS DQJSJE
          FROM TC_TD_PB_DOM_INFO T1
         WHERE T1.C_TD_TYPE = ''HGJY''
           AND T1.C_DV_TYPE_SUB = ''HGJY_SQ''
           AND T1.C_SEC_VAR_CODE = ''HG''
           AND T1.C_SEC_VAR_CODE_SUB = ''HG_ZYS''
           AND T1.C_SEC_CODE NOT LIKE ''205%''
           AND T1.PF_ID ${PFID}
           AND T1.BIZ_DATE <= ''${FENDDATE}''
           AND T1.D_SETT_FACT > ''${FENDDATE}'') T1
  LEFT JOIN V_PF_CPDM T2
    ON T1.PF_ID = T2.PF_ID
 GROUP BY T1.PF_ID,
          T2.CPDM,
          T1.JYCSDM,
          T1.PZDM,
          T1.HGFX,
          T1.CJRQ,
          T1.HGDQRQ                                               ', '0', null, 'A1034', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('CB47DFDA6C9C4B09AFF592257C70E240', 'A00099', '资产负债表', '--资产负债表
WITH TT1 AS --报表头部
 (SELECT MAX(KEY_ID) AS JGBH,
         SUBSTR(''${FENDDATE}'', 1, 4) AS BGND,
         ''3'' AS BGQJ,
         SUBSTR(''${FENDDATE}'', 1, 6) || ''01'' AS QCRQ,
         ''${FENDDATE}'' AS QMRQ
    FROM TP_GL_EXHIB_DATADICT
   WHERE CLASS_NAME = ''报送机构编号''),
TT2 AS --组合与报表模版
 (SELECT PF_ID, CPDM, XH, LINE_ID, LINE_NAME1
    FROM (SELECT PF_ID, NVL(CPDM, TA_PF_ID) AS CPDM
            FROM V_PF_CPDM
           WHERE PF_ID IS NOT NULL
             AND CHG_DATE <= ''${FENDDATE}''
             AND END_DATE > ''${FENDDATE}'') T1,
         (SELECT ID AS XH, LINE_ID, LINE_NAME1
            FROM TP_GL_PB_HEAD
           WHERE REP_ID = ''PB16'') T2),
TT3 AS --组合与 资产负债表配置的报表名
 (SELECT T1.PF_ID, T3.KEY_NAME AS C_REPORT_CODE
    FROM TP_GL_FUNDCODE_MAP T1
    LEFT JOIN TC_PF_BSC_INFO_ATTACHED T2
      ON T1.TA_PF_ID = T2.PF_ID
     AND T2.ATTACHED_CODE = ''BDCWBB_ZCFZB''
    LEFT JOIN TP_GL_EXHIB_DATADICT T3
      ON T3.KEY_ID = NVL(T2.ATTACHED_VALUE,CASE WHEN T1.SETACC_CODE LIKE ''%QD%'' THEN ''ZCFZB1'' WHEN T1.SETACC_CODE LIKE ''%融元%'' THEN ''ZCFZB3'' ELSE 
      ''ZCFZB1'' END) -- ''ZCFZB1'')
   WHERE T1.PF_ID IS NOT NULL
     AND T1.SRC_SYS <> ''TA'')

SELECT T1.JGBH,
       T1.BGND,
       T1.BGQJ,
       T1.QCRQ,
       T1.QMRQ,
       T2.CPDM,
       T2.LINE_ID XMBH,
       --T2.LINE_NAME1 LINE_NAME1,
       --1005小计项，需要重新根据子项汇
       /*NVL(CASE
             WHEN T2.LINE_ID IN (''1005'') THEN
              sum(CASE
                    WHEN LENGTH(T2.LINE_ID) = 4 THEN
                     0
                    ELSE
                     T3.QCYE
                  END) OVER(PARTITION BY T2.PF_ID, SUBSTR(T2.LINE_ID, 1, 4))
             ELSE
              T3.QCYE
           END,
           0) AS QCYE,
       NVL(CASE
             WHEN T2.LINE_ID IN (''1005'') THEN
              sum(CASE
                    WHEN LENGTH(T2.LINE_ID) = 4 THEN
                     0
                    ELSE
                     T3.QMYE
                  END) OVER(PARTITION BY T2.PF_ID, SUBSTR(T2.LINE_ID, 1, 4))
             ELSE
              T3.QMYE
           END,
           0) AS QMYE,*/
             NVL(T3.QCYE,0) as QCYE,
             NVL(T3.QMYE,0) as QMYE,
       NULL AS BZ
       ,''1060000001'' AS PF_ID
  FROM TT1 T1
  LEFT JOIN TT2 T2
    ON 1 = 1
  LEFT JOIN (SELECT PF_ID,
                    C_REPORT_ID,
                    C_REPORT_NAME,
                    NVL(MAX(CASE
                              WHEN BIZ_DATE < ''${FENDDATE}'' THEN
                               N_DATA
                            END),
                        0) AS QCYE,
                    NVL(MAX(CASE
                              WHEN BIZ_DATE = ''${FENDDATE}'' THEN
                               N_DATA
                            END),
                        0) AS QMYE
               FROM TC_CW_PB_DOM_INFO
              WHERE (PF_ID, C_REPORT_CODE) IN
                    (SELECT PF_ID, C_REPORT_CODE FROM TT3)
                AND BIZ_DATE IN (''${FENDDATE}'',
                                 TO_CHAR(TO_DATE(SUBS', '0', null, 'A3014', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('0C462F59FE5C42B8A705EF8999F328AF', 'A00055', '投资者份额结构', '  
WITH V_ACCRECDATA AS
 (SELECT DJJGDM,
		 DJJGMC,
		 CASE
		   WHEN CYSZ < 1 THEN
			1
		   WHEN CYSZ >= 1 AND CYSZ < 5 THEN
			2
		   WHEN CYSZ >= 5 AND CYSZ < 10 THEN
			3
		   WHEN CYSZ >= 10 AND CYSZ < 50 THEN
			4
		   WHEN CYSZ >= 50 AND CYSZ < 100 THEN
			5
		   WHEN CYSZ >= 100 AND CYSZ < 300 THEN
			6
		   WHEN CYSZ >= 300 AND CYSZ < 500 THEN
			7
		   WHEN CYSZ >= 500 AND CYSZ < 1000 THEN
			8
		   ELSE
			9
		 END CYSZFD,
		 NVL(SUM(CASE
				   WHEN GRJGBZ = ''01'' THEN
					YXTZZRS
				   ELSE
					0
				 END),
			 0) YXGRTZZRS, --有效个人投资者人数
		 NVL(SUM(CASE
				   WHEN GRJGBZ = ''02'' THEN
					YXTZZRS
				   ELSE
					0
				 END),
			 0) YXJGTZZRS --有效机构投资者人数
	FROM (SELECT SUM(T1.TOTVOLOFDISTA * T3.NAV) / 10000 AS CYSZ, -- 持有市值
				 T4.DJJGDM, -- 登记机构代码
				 T4.DJJGMC, -- 登记机构名称
				 DECODE(T2.INDIVIDUALORINSTITUTION,
						''1'',
						''01'',
						''0'',
						''02'',
						''2'',
						''03'') AS GRJGBZ, --个人机构标志
				 COUNT(DISTINCT T2.CERTIFICATETYPE ||
					   T2.CERTIFICATENO || T2.INVESTORNAME) AS YXTZZRS -- 有效投资者人数
			FROM (SELECT T1.TAACCOUNTID,
						 T1.PF_TYPE,
						 T1.FUNDCODE,
						 SUM(T1.TOTVOLOFDISTA) AS TOTVOLOFDISTA
					--FROM TR_DF_TA_ACCRECDATA T1
          FROM TR_DF_TA_ACCRECDATA partition (PART_${FENDDATE}) T1
				   WHERE --T1.TRANSACTIONCFMDATE = ''${FENDDATE}''AND
					  T1.TOTVOLOFDISTA > 0
				   GROUP BY T1.TAACCOUNTID, T1.PF_TYPE, T1.FUNDCODE) T1 -- 份额数据
		   INNER JOIN TC_PF_PB_TA_ACCOUNT T2 -- 账户数据
			  ON T1.TAACCOUNTID = T2.TAACCOUNTID
			 AND T1.PF_TYPE = T2.PF_TYPE
		   INNER JOIN TR_DF_TA_DYINFOLITEM T3 -- 行情数据
			  ON T3.TRANSACTIONCFMDATE = ''${FENDDATE}''
			 AND T1.FUNDCODE = T3.FUNDCODE
			 AND T3.PF_TYPE = ''YSS_45''
		   INNER JOIN TC_PF_SYSSOURCE_INFO T4 -- 登记机构
			  ON T1.PF_TYPE = T4.XTLYDM
			 AND T4.SFZJ = ''1''
		   INNER JOIN TP_GL_FUNDCODE_MAP T5 -- 产品信息，用于过滤
			  ON T1.FUNDCODE = T5.TA_PF_ID
			 AND T5.SRC_SYS = ''TA''
		   WHERE T5.PF_ID ${PFID}
		   GROUP BY T4.DJJGDM,
					T4.DJJGMC,
					T2.INDIVIDUALORINSTITUTION,
					T2.CERTIFICATETYPE,
					T2.CERTIFICATENO,
					T2.INVESTORNAME) T
   GROUP BY DJJGDM,
			DJJGMC,
			CASE
			  WHEN CYSZ < 1 THEN
			   1
			  WHEN CYSZ >= 1 AND CYSZ < 5 THEN
			   2
			  WHEN CYSZ >= 5 AND CYSZ < 10 THEN
			   3
			  WHEN CYSZ >= 10 AND CYSZ < 50 THEN
			   4
			  WHEN CYSZ >= 50 AND CYSZ < 100 THEN
			   5
			  WHEN CYSZ >= 100 AND CYSZ < 300 THEN
			   6
			  WHEN CYSZ >= 300 AND CYSZ < 500 THEN
			   7
			  WHEN CYSZ >= 500 AND CYSZ < 1000 THEN
			   8
			  ELSE
			   9
			END)
  
SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH, --机构编码
	   SUBSTR(''${FENDDATE}'', 0, 4) BGND, --报告年度
	   ''1'' BGQJ, --报告期间
	   ''${FENDDATE}'' QCRQ, --期初日期
	   ''${FENDDATE}'' QMRQ, --期末日期
	   DJJGDM, --登记机构代码
	   DJJGMC, --登记机构名称
	   CYSZFD, --持有市值分段
	   YXGRTZZRS, --有效个人投资者人数
	   YXJGTZZRS, --有效机构投资者人数
	   '''' BZ
     ,''1060000001'' AS PF_ID
  FROM V_ACCRECDATA
 ORDER BY DJJGDM, CYSZFD                                                                                                                 ', '0', null, 'A1018', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('73ECAB22BB1B42C2BD5D52725A8DECA0', 'A00087', '转融券投资明细', '
--转融券投资明细

-- 出借费率 未取数  收盘价 收盘价从行情表取数  暂时先不取
SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' as QCRQ,
       ''${FENDDATE}'' as QMRQ,
       NVL(CP.CPDM, '''') AS CPDM,
       JYCSDM,
       C_IDEN AS CJBH,
       BIZ_DATE AS CJRQ,
       C_SEC_CODE AS ZQDM,
       N_TD_AMOUNT AS CJSL,
       N_TD_MONEY AS QMSZ,
       ZQLB,
       CJQX,
       D_SETT_FACT AS DQRQ,
       NULL AS CJFL,
       NULL AS SPJ,
       N_JYFY AS JQFY,
       NULL AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT PF_ID,
               C_SEC_CODE,
               C_IDEN,
               BIZ_DATE,
               C_MKT_CODE,
               N_TD_AMOUNT,
               N_TD_MONEY,
               GET_CODE(''C_MKT_CODE'', C_MKT_CODE) AS JYCSDM,
               CASE
                 WHEN TO_DATE(D_SETT_FACT, ''yyyyMMdd'') -
                      TO_DATE(BIZ_DATE, ''yyyyMMdd'') + 1 = 3 THEN
                  1
                 WHEN TO_DATE(D_SETT_FACT, ''yyyyMMdd'') -
                      TO_DATE(BIZ_DATE, ''yyyyMMdd'') + 1 = 7 THEN
                  2
                 WHEN TO_DATE(D_SETT_FACT, ''yyyyMMdd'') -
                      TO_DATE(BIZ_DATE, ''yyyyMMdd'') + 1 = 14 THEN
                  3
                 WHEN TO_DATE(D_SETT_FACT, ''yyyyMMdd'') -
                      TO_DATE(BIZ_DATE, ''yyyyMMdd'') + 1 = 28 THEN
                  4
                 WHEN TO_DATE(D_SETT_FACT, ''yyyyMMdd'') -
                      TO_DATE(BIZ_DATE, ''yyyyMMdd'') + 1 = 182 THEN
                  5
                 ELSE
                  9
               END AS CJQX,
               D_SETT_FACT,
               N_JYFY
          FROM TC_TD_PB_DOM_INFO
         WHERE C_DT_CODE IN (''ZRT_ZQSQ'', ''ZRT_ZQSH'')
           AND PF_ID ${PFID}
           AND ''${FENDDATE}'' BETWEEN BIZ_DATE AND D_SETT_FACT) A
  LEFT JOIN (SELECT ZQDM,
                    SSSC,
                    ZQLB
               FROM TC_MK_ZQINFO
              GROUP BY ZQDM, SSSC, ZQLB) B
    ON ZQDM = C_SEC_CODE
   AND SSSC = JYCSDM
LEFT JOIN v_pf_cpdm CP ON A.pf_id = CP.TA_PF_ID                                     ', '0', null, 'A1051', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('C1CF514F48C046409683C83921DD4440', 'A00077', '场内期权投资明细', '--场内期权投资明细
SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR(''${FENDDATE}'', 1, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(P.CPDM, P.TA_PF_ID) AS CPDM,
       NVL(A.JYCSDM, '''') AS JYCSDM,
       NVL(A.HYDM, '''') AS HYDM,
       NVL(A.HYMC, '''') AS HYMC,
       NVL(A.MMFX, '''') AS MMFX,
       NVL(B.KCSL, 0) AS KCSL,
       NVL(B.KCQLJ, 0) AS KCQLJ, --开仓权利金
      NVL(CASE
             WHEN A.QMSL <> 0 AND trim(E.JE1)<>0 AND trim(A.QMSL)<>0 THEN
              --E.JE1 * B.KCSL / A.QMSL
              nvl(trim(E.JE1),''0'')*nvl(trim(B.KCSL),''0'')/nvl(trim(A.QMSL),'''')
           END,
           '''') AS KCBZJ, --开仓保证金
       NVL(B.PCSL, 0) AS PCSL,
       NVL(A.QMSL, 0) AS QMSL,
       NVL(A.QMHYJZ, 0) AS QMHYJZ,
       NVL(trim(E.JE1)/1, '''') AS QMBZJ,
       DECODE(C.C_DV_VAR_DUR, ''QQT_CALL'', ''1'', ''QQT_PUT'', ''2'', '' '') AS HYLX, --合约类型
       NVL(CASE
             WHEN INSTR(C.C_SEC_CODE_TRG, '' '') > 0 THEN
              SUBSTR(C.C_SEC_CODE_TRG, 1, INSTR(C.C_SEC_CODE_TRG, '' '', -1) - 1)
             ELSE
              C.C_SEC_CODE_TRG
           END,
           '' '') AS BDDM, --标的代码
       NVL(D.C_SEC_NAME, '' '') AS BDMC, --标的名称
       TO_CHAR(NVL(C.N_AMOUNT_HD, 0)) || ''份/手'' AS HYDW, --合约单位
       NVL(C.N_PRICE_ISSUE, 0) AS XQJG, --行权价格
       NVL(C.D_END, '' '') AS DQRQ, --到期日期
       DECODE(C.C_DV_AI_MOD,
              ''ES_OS'',
              ''1'',
              ''ES_MS'',
              ''2'',
              ''ES_BMD'',
              ''3'',
              ''ES_YS'',
              ''4'',
              '' '') AS XQFS, --行权方式
       '' '' AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT A.PF_ID,
               A.BIZ_DATE,
               A.C_DV_KM_CLS,
               A.C_SEC_VAR_CODE,
               CASE
                 WHEN A.MARKET_CODE = ''XSHG'' THEN -- 上海证券交易所
                  ''102''
                 WHEN A.MARKET_CODE = ''XSHE'' THEN -- 深圳证券交易所
                  ''103''
                 WHEN A.MARKET_CODE = ''XHKG'' THEN -- 香港联合交易所
                  ''250''
                 WHEN A.MARKET_CODE = ''HKCG'' THEN -- 沪港通下港股通
                  ''104''
                 WHEN A.MARKET_CODE = ''HKCS'' THEN -- 深港通下港股通
                  ''105''
                 WHEN A.MARKET_CODE = ''AMEX'' THEN -- 美国证券交易所
                  ''200''
                 ELSE
                  ''199''
               END AS JYCSDM,
               A.SYMBOL_CODE,
               CASE
                 WHEN INSTR(A.SYMBOL_CODE, '' '') > 0 THEN
                  SUBSTR(A.SYMBOL_CODE, 1, INSTR(A.SYMBOL_CODE, '' '') - 1)
                 ELSE
                  A.SYMBOL_CODE
               END AS HYDM,
               NVL(A.SEC_CODE_NAME, '' '') AS HYMC,
               NVL(CASE
                     WHEN A.C_DTA_CODE LIKE ''%BUY'' THEN
                      ''1''
                     ELSE
                      ''2''
                   END,
                   '''') AS MMFX,
               NVL(ATTYPE_QTY, 0) AS QMSL,
               NVL(ATTYPE_AMOUNT_OC, 0) AS QMHYJZ
          FROM TC_HP_PB_DOM_INFO A
', '0', null, 'A1041', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('3B168E91ABFA4FE1A2D1A63B7DC5C5F1', 'A00066', '标准化资管产品投资明细', '
--标准化资管产品投资明细
/*
C_DV_ISSUE_MODE  发行方式
C_DV_INVEST_CLS  投资分类
C_DAI_CODE  核算项目
C_CA_CODE  帐户或费用代码
C_SEC_VAR_CODE  证券品种
*/

SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(T4.CPDM, '''') AS CPDM,
       NVL(T1.JYCSDM, '''') AS JYCSDM,
       NVL(T1.ZQDM, '''') AS JJDM,
       NVL(T1.ZQMC, '''') AS JJMC,
       NVL(T2.MRSL, 0) AS MRSL,
       NVL(T2.MRJE, 0) AS MRJE,
       NVL(T2.MCSL, 0) AS MCSL,
       NVL(T2.MCJE, 0) AS MCJE,
       NVL(T1.QMSL, 0) AS QMSL,
       NVL(T1.QMCB, 0) AS QMCB,
       NVL(T1.QMSZ, 0) AS QMSZ,
       NVL(T3.ZQLB, T5.ZQLB) AS JJFL,
       NVL(T3.GLRDM, T5.GLRDM) AS GLRDM,
       NVL(T3.GLRMC, T5.GLRMC) AS GLRMC,
       NVL(T3.CPLB, T5.CPLB) AS CPLB,
       NULL AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT T1.PF_ID,
               T1.BIZ_DATE,
               GET_CODE(''C_MKT_CODE'', T1.MARKET_CODE) AS JYCSDM,
               T1.MARKET_CODE,
               T1.SYMBOL_CODE,
               CASE
                 WHEN INSTR(T1.SYMBOL_CODE, '' '') > 0 THEN
                  SUBSTR(T1.SYMBOL_CODE,
                         1,
                         INSTR(T1.SYMBOL_CODE, '' '', -1) - 1)
                 ELSE
                  T1.SYMBOL_CODE
               END AS ZQDM,
               T1.SEC_CODE_NAME AS ZQMC,
               T1.ATTYPE_QTY AS QMSL,
               T1.ATTYPE_COST_OC AS QMCB,
               T1.ATTYPE_AMOUNT_OC AS QMSZ
          FROM TC_HP_PB_DOM_INFO T1
         WHERE T1.PF_ID ${PFID}
           AND T1.BIZ_DATE = ''${FENDDATE}''
           AND T1.C_DV_KM_CLS = ''KC_ZC''
           AND T1.C_DAI_CODE = ''ZQTZ_CB''
           AND T1.C_SEC_VAR_CODE = ''JJ'') T1 -- 持仓数据
  LEFT JOIN (SELECT T2.PF_ID,
                    MAX(T2.BIZ_DATE) BIZ_DATE,
                    T2.C_SEC_CODE,
                    SUM(CASE
                          WHEN T2.N_CAPI_WAY = 1 THEN
                           N_TD_AMOUNT
                        END) AS MRSL,
                    SUM(CASE
                          WHEN T2.N_FUND_WAY = -1 THEN
                           N_TD_MONEY
                        END) AS MRJE,
                    SUM(CASE
                          WHEN T2.N_CAPI_WAY = -1 THEN
                           N_TD_AMOUNT
                        END) AS MCSL,
                    SUM(CASE
                          WHEN T2.N_FUND_WAY = 1 THEN
                           N_TD_MONEY
                        END) AS MCJE
               FROM TC_TD_PB_DOM_INFO T2
              WHERE T2.PF_ID ${PFID}
                AND T2.BIZ_DATE <= ''${FENDDATE}''
                AND T2.BIZ_DATE > FU_GET_CPYWDATE(1, ''${FENDDATE}'')
                AND T2.C_TD_TYPE IN (''JJJY'', ''CWSS'', ''ZQSP'')
                AND T2.C_SEC_VAR_CODE = ''JJ''
              GROUP BY T2.PF_ID, T2.C_SEC_CODE) T2-- 交易数据
    ON T1.PF_ID = T2.PF_ID
   AND T1.BIZ_DATE = T2.BIZ_DATE
   AND T1.SYMBOL_CODE = T2.C_SEC_CODE
  LEFT JOIN (SELECT ZQDM,
                    --SSSC,
      ', '0', null, 'A1030', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('36BE0D33F1144BDB97B6B043EB0FEFD0', 'A00088', '收益凭证投资明细', '-- 融通基金境外结构化票据投资归属于收益凭证
SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(P.CPDM, '''') AS CPDM,
       NVL(T3.C_SCDM, T1.JYCSDM) AS JYCSDM,
       NVL(T1.PZDM, '''') AS PZDM,
       NVL(T3.C_ZCMC, '''') AS PZMC,
       NVL(T2.MRSL, 0) AS MRSL,
       NVL(T2.MRJE, 0) AS MRJE,
       NVL(T2.MCSL, 0) AS MCSL,
       NVL(T2.MCJE, 0) AS MCJE,
       NVL(T1.QMSL, 0) AS QMSL,
       NVL(T1.QMCB, 0) AS QMCB,
       NVL(T1.QMSZ, 0) AS QMSZ,
       NVL(T3.C_BDLX,'''') AS BDLX,
       NVL(T3.C_BDDM,'''') AS BDDM,
       NVL(T3.C_BDMC,'''') AS BDMC,
       NVL(T3.C_FXRDM,'''') AS FXRDM,
       NVL(T3.C_FXRMC,'''') AS FXRMC,
       NVL(T3.C_CPLB,'''') AS CPLX,
       NVL(T3.C_KSRQ,'''') AS QSRQ,
       NVL(T3.C_JSRQ,'''') AS DQRQ,
       NVL(T3.C_CPQX,'''') AS CPQX,
       NVL(T3.C_MZ,'''') AS MZ,
       NVL(T3.C_SYLX,'''') AS SYLX,
       NVL(CASE
         WHEN C_SYLX = ''1'' THEN
          T3.C_GDSYL
       END,'''') AS GDSYL,
       NVL(CASE
         WHEN C_SYLX IN (''2'', ''3'') THEN
          T3.C_FDSYL
       END,'''') AS FDSYL,
       NVL(CASE
         WHEN C_SYLX = ''9'' THEN
          T3.C_QTSYSM
       END,'''') AS QTSYSM,
       NVL(T3.C_SFGPZR,'''') AS SFGPZR,
       NVL(CASE
         WHEN T3.C_SFGPZR = ''1'' THEN
          T3.C_GPZRCS
       END,'''') AS GPZRCS,
       NVL(CASE
         WHEN TRIM(RELATED_PARTY) IS NOT NULL THEN
          ''1''
         ELSE
          ''0''
       END,'''') AS SFGLJY,
       NVL(TRIM(RELATED_PARTY),'''') AS GLRYGLRDGX,
       T3.C_BZ AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT T1.PF_ID,
               T1.BIZ_DATE,
               GET_CODE(''C_MKT_CODE'', T1.MARKET_CODE) AS JYCSDM,
               T1.SYMBOL_CODE,
               CASE
                 WHEN INSTR(T1.SYMBOL_CODE, '' '') > 0 THEN
                  SUBSTR(T1.SYMBOL_CODE,
                         1,
                         INSTR(T1.SYMBOL_CODE, '' '', -1) - 1)
                 ELSE
                  T1.SYMBOL_CODE
               END AS PZDM,
               T1.SEC_CODE_NAME AS PZMC,
               T1.ATTYPE_QTY AS QMSL,
               T1.ATTYPE_COST_OC AS QMCB,
               T1.ATTYPE_AMOUNT_OC AS QMSZ
          FROM TC_HP_PB_DOM_INFO T1
         WHERE T1.PF_ID ${PFID}
           AND T1.BIZ_DATE = ''${FENDDATE}''
           AND T1.C_DV_KM_CLS = ''KC_ZC''
           AND T1.C_DAI_CODE = ''ZQTZ_CB''
           AND T1.C_SEC_VAR_CODE = ''LC''
           AND T1.C_SEC_VAR_CODE_SUB = ''LC_PJ'') T1  -- 持仓数据
  LEFT JOIN (SELECT T2.PF_ID,
                    T2.BIZ_DATE,
                    T2.C_SEC_CODE,
                    SUM(CASE
                          WHEN T2.N_CAPI_WAY = 1 THEN
                           N_TD_AMOUNT
                        END) AS MRSL,
                    SUM(CASE
                          WHEN T2.N_FUND_WAY = -1 THEN
                           N_TD_MONEY
                        END) AS MRJE,
                    SUM(CASE
                          WHEN T2.N_CAPI_WAY = -1 THEN
     ', '0', null, 'A1052', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('19E03A58DBCB476CAC177A0B54BD7937', 'A00075', '金融期货投资明细', '
--金融期货投资明细
SELECT FU_GET_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR(''${FENDDATE}'', 0, 4) AS BGND,
       ''1'' AS BGQJ,
       ''${FENDDATE}'' AS QCRQ,
       ''${FENDDATE}'' AS QMRQ,
       NVL(T3.CPDM, '''') AS CPDM,
       NVL(T1.JYCSDM, '''') AS JYCSDM,
       NVL(T1.HYDM, '''') AS HYDM,
       NVL(T1.HYMC, '''') AS HYMC,
       NVL(CASE
             WHEN T1.C_DTA_CODE LIKE ''%BUY'' THEN
              1
             ELSE
              2
           END,
           '''') AS MMFX,
       NVL(CASE
             WHEN T1.C_DTA_CODE LIKE ''TB%'' THEN
              1
             ELSE
              2
           END,
           '''') JYMD,
       NVL(T2.KCSL, 0) AS KCSL,
       NVL(T2.KCHYJZ, 0) AS KCHYJZ,
       NVL(T2.KCSL * T2.N_MARGIN / T1.QMSL, 0) AS KCBZJ,
       NVL(T2.PCSL, 0) AS PCSL,
       NVL(T2.PCHYJZ, 0) AS PCHYJZ,
       NVL(T2.PCSY + T2.DRSY, 0) AS DQYK,
       NVL(T1.QMSL, 0) AS QMSL,
       NVL(T1.QMHYJZ, 0) AS QMHYJZ,
       NVL(T2.N_MARGIN, 0) AS QMBZJ,
       NVL(GET_CODE(''JRQHLB'', T1.C_SEC_VAR_CODE_SUB), '''') AS JRQHLB,
       NVL(T1.JYDM, '''') AS JYDM,
       NVL(GET_CODE(''QHJYPZ'', T1.JYDM), '''') AS JYPZ,
       NVL(CASE
             WHEN T1.C_SEC_VAR_CODE_SUB IN (''QH_GZ'',''QH_QHGZ'') THEN
              T2.N_FV_ISSUE || ''元/点''
             WHEN T1.C_SEC_VAR_CODE_SUB = ''QH_ZQ'' THEN
              T2.N_FV_ISSUE / 100 || ''万元/手''
             WHEN T1.C_SEC_VAR_CODE_SUB = ''QH_WH'' THEN
              T2.N_FV_ISSUE / 10000 || ''万元/手''
             ELSE
              T2.N_FV_ISSUE || ''''
           END,
           '''') AS JYDW,
       '''' AS BZ
       ,''1060000001'' AS PF_ID
  FROM (SELECT T1.PF_ID,
               T1.BIZ_DATE,
               GET_CODE(''C_MKT_CODE'', T1.MARKET_CODE) AS JYCSDM,
               T1.SYMBOL_CODE,
               CASE
                 WHEN INSTR(T1.SYMBOL_CODE, '' '') > 0 THEN
                  SUBSTR(T1.SYMBOL_CODE,
                         1,
                         INSTR(T1.SYMBOL_CODE, '' '', -1) - 1)
                 ELSE
                  T1.SYMBOL_CODE
               END AS HYDM,
               TRANSLATE(SUBSTR(T1.SYMBOL_CODE,
                                1,
                                INSTR(T1.SYMBOL_CODE, '' '', -1) - 1),
                         ''$1234567890'',
                         ''$'') AS JYDM,
               T1.SEC_CODE_NAME AS HYMC,
               T1.C_DTA_CODE,
               -- CASE WHEN T1.C_DTA_CODE LIKE ''%BUY'' THEN 1 ELSE 2 END AS MMFX,  不在里面转换了，在外面转换
               -- CASE WHEN T1.C_DTA_CODE LIKE ''TB%'' THEN 1 ELSE 2 END AS JYMD,
               T1.ATTYPE_QTY AS QMSL,
               ABS(T1.ATTYPE_AMOUNT_OC) AS QMHYJZ,
               T1.C_SEC_VAR_CODE_SUB
          FROM TC_HP_PB_DOM_INFO T1
         WHERE T1.PF_ID ${PFID}
           AND T1.BIZ_DATE = ''${FENDDATE}''
           AND T1.C_DV_KM_CLS = ''KC_GT''
           AND T1.C_DAI_CODE = ''YSGJ_CB''
           AND T1.C_SEC_VAR_CODE = ''QH''
           AND T1.C_SEC_VAR_CODE_SUB IN (''QH_GZ'', ''QH_ZQ'', ''QH_WH'', ''QH_GP'',''QH_QHGZ'')) T1 -- 持仓数据
  LEFT JOIN (SELECT T2.PF_ID,
                    ', '0', null, 'A1039', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('F80D2B83DDE3451F9A5B10E1C5FB1057', 'A00078', '其他各项资产明细', ' 
WITH TT1 AS --报表头部
 (SELECT MAX(KEY_ID) AS JGBH,
         SUBSTR(''${FENDDATE}'', 1, 4) AS BGND,
         ''1'' AS BGQJ,
         ''${FENDDATE}'' AS QCRQ,
         ''${FENDDATE}'' AS QMRQ
    FROM TP_GL_EXHIB_DATADICT
   WHERE CLASS_NAME = ''报送机构编号''),
TT2 AS --组合与报表模版
 (SELECT PF_ID, CPDM, ZCLB
    FROM (SELECT PF_ID, NVL(CPDM, TA_PF_ID) AS CPDM
            FROM V_PF_CPDM
           WHERE PF_ID ${PFID}
             AND CHG_DATE <= ''${FENDDATE}''
             AND END_DATE > ''${FENDDATE}'') T1,
         (SELECT ''1'' AS ZCLB
            FROM DUAL
          UNION ALL
          SELECT ''2''
            FROM DUAL
          UNION ALL
          SELECT ''9''
            FROM DUAL) T2),
TT3 AS
 (
  --汇总
  SELECT PF_ID, SUBSTR(ZCLB, 1, 1) AS ZCLB, SUM(JE) AS JE
    FROM (
           --3003相关科目，根据上一步的ZCLB重新汇总，应收取>0的结果
           SELECT PF_ID,
                   ZCLB,
                   SUM(JE) AS HJJE,
                   CASE
                     WHEN LENGTH(ZCLB) > 1 THEN
                      GREATEST(SUM(JE), 0)
                     ELSE
                      SUM(JE)
                   END AS JE --应收（资产）合计项只取正的
             FROM (
                    --1-结算备付金；2-应收证券清算款；9-其他
                    --1021:备付金、1031/1041:保证金、1203:应收股利、1204:应收利息、1207:应收销售款、1207:应收申购款、1221:其他应收款、1501:待摊费用
                    SELECT PF_ID,
                            SUBJ_ID,
                            (CASE
                              WHEN SUBSTR(SUBJ_ID, 1, 4) = ''1021'' THEN
                               ''1''
                              WHEN SUBJ_ID LIKE ''3003%'' AND
                                   SUBJ_ID NOT LIKE ''3003.50%'' THEN
                               ''2'' || '' '' || SUBSTR(SUBJ_ID, 1, 7)
                              WHEN SUBJ_ID IN (''3003.50.01'', ''3003.50.02'') THEN
                               ''9'' || '' 1''
                              WHEN SUBJ_ID IN (''3003.50.03'', ''3003.50.04'') THEN
                               ''9'' || '' 2''
                              WHEN SUBSTR(SUBJ_ID, 1, 4) IN
                                   (''1031'', ''1041'', ''1203'', ''1204'', ''1207'', ''1501'', ''1221'') THEN
                               ''9''
                              ELSE
                               '' ''
                            END) AS ZCLB,
                            ATTYPE_AMOUNT_OC AS JE
                      FROM TC_HP_PB_DOM_INFO
                     WHERE BIZ_DATE = ''${FENDDATE}''
                       AND PF_ID ${PFID}
                       AND SUBSTR(SUBJ_ID, 1, 4) IN
                           (''1021'',
                            ''1031'',
                            ''1041'',
                            ''1203'',
                            ''1204'',
                            ''1207'',
                            ''1221'',
                            ''1501'',
                            ''3003'')
                    --A
                    ) A
            WHERE ZCLB <> '' ''
            GROUP BY PF_ID, ZCLB
           --B
           )
   GROUP BY PF_ID, SUBSTR(ZCLB, 1, 1))

SELECT T1.JGBH,
     ', '0', null, 'A1042', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('CA0ECDCD9AE44BE5806AC603C76D2BFD', 'A00042', '产品投资比例限制', '--03产品投资比例限制 增量
/*
1、?同一产品下设多个下属产品/份额类别时，按照产品主代码报送。
2、?按照产品合同约定内容填写，合同中对于上述某类资产无明确比例限制时，其对应字段可为空。
3、?“股票类”资产包括境内依法发行上市的股票（包括中小板、创业板及其他中国证监会核准上市的股票、优先股和中国存托凭证等）、港股通标的股票；与中国证监会签署双边监管合作谅解备忘录的国家或地区证券市场挂牌交易的普通股、优先股、全球存托凭证和美国存托凭证、房地产信托凭证等。
4、?“债券类”资产包括境内债券（包括国债、央行票据、金融债券、企业债券、公司债券、中期票据、短期融资券、次级债券、地方政府债券、中小企业私募债券、可转换债券（含可分离交易可转债）、可交换债券及其他经中国证监会允许投资的债券）、资产支持证券、货币市场工具（含同业存单）。境外短期政府债券等货币市场工具，政府债券、公司债券、可转换债券、住房按揭支持证券、资产支持证券等固定收益类证券。
5、?“货币类”资产指货币市场工具。
首次全量报送存续的产品。



*/
SELECT FU_GET_FISP_SJZD(''报送机构编号'') JGBH,
	SUBSTR(''${FENDDATE}'', 1, 4) BGND,
	''1'' BGQJ,
	''${FENDDATE}'' QCRQ,
	''${FENDDATE}'' QMRQ,
	B.CPDM CPDM,
	GPLZCTZZDBL,
	GPLZCTZZGBL,
	XGSCGPLZCTZZGBL,
	ZQLZCTZZDBL,
	ZQLZCTZZGBL,
	HBLZCTZZDBL,
	HBLZCTZDGBL,
	A.BZ
   --,B.PF_ID
   ,''1060000001'' as PF_ID
FROM TC_PF_INVLIMIT_INFO A
INNER JOIN   V_PF_CPDM B ON  A.CPDM = B.TA_PF_ID
WHERE A.YWDATE = ''${FENDDATE}''
AND B.PF_ID ${PFID}
null, 'A1003', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

insert into TC_REP_DATASET (ID, DATASET_CODE, DATASET_NAME, DATASET_SQL, DATASET_PARAM, DB_TYPE, REPORT_ID, DATA_SOURCE, MEMO, CREATE_PRSN, CREATE_TIME, MDFY_PRSON, MDFY_TIME, IS_ENABLE, REGULATION_RULE)
values ('9BCE689E6E6143719909A675F5D5F098', 'A00074', '商品现货延期交收投资明细', '
-- 商品现货延期交收投资明细

-- 平仓合约数量与期末合约数量一致？
--  交易品种、交易单位 不取数不对
SELECT  FU_Get_FISP_SJZD(''报送机构编号'') AS JGBH,
       SUBSTR( ''${FENDDATE}'' , 0, 4) AS BGND,
       ''1'' AS BGQJ,
        ''${FENDDATE}''  as QCRQ,
        ''${FENDDATE}''  as QMRQ,
       nvl(P.CPDM,'''') AS CPDM,
       nvl(CASE
         WHEN A.MARKET_CODE = ''XSHE'' THEN
          ''0103''
         WHEN A.MARKET_CODE = ''XSHG'' THEN
          ''102''
         WHEN A.MARKET_CODE IN (''COTC'', ''XCFE'') THEN
          ''101''
         ELSE
          ''199''
       END,'''') AS JYCSDM,
       nvl(CASE WHEN INSTR(A.SYMBOL_CODE,'' '')>0 THEN SUBSTR(A.SYMBOL_CODE,1,INSTR(A.SYMBOL_CODE,'' '')-1) ELSE A.SYMBOL_CODE END,'''') AS HYDM,
       nvl(A.SEC_CODE_NAME,'''') AS HYMC,
       nvl(CASE
         WHEN B.C_TD_TYPE = ''TJ_BUY'' THEN
          1
         ELSE
          2
       END,'''') AS MMFX,
       nvl(SUM(CASE
             WHEN B.C_DT_CODE = ''XH_YQ'' THEN
              B.N_TD_AMOUNT
           END),0) AS KCSL,
       nvl(SUM(CASE
             WHEN B.C_DT_CODE IN (''XHJY_PC'', ''XHJY_JG'', ''XHJY_SELL'') THEN
              B.N_TD_AMOUNT
           END),0) AS KCHYJZ,
       nvl(SUM(CASE
             WHEN B.C_DT_CODE IN (''XHJY_PC'', ''XHJY_JG'', ''XHJY_SELL'') THEN
              B.N_TD_MONEY
           END),0) AS KCBZJ,
       nvl(SUM(B.N_TD_AMOUNT),0) AS PCSL,
       nvl(SUM(B.N_TD_MONEY),0) AS PCHYJZ, /*SUM(N_TD_FEE) 延期费*/
       0 AS YQF,
       nvl(SUM(A.ATTYPE_QTY),0) AS QMSL,
       nvl(SUM(B.N_TD_MONEY),0) AS QMHYJZ,
       /*SUM(N_CA_CODE_BAIL) 期末保证金*/
       0 AS QMBZJ,
       nvl(B.C_SEC_VAR_CODE,'''') AS JYPZ, /*B.C_EXE_FHYDW_I 交易单位*/
       '''' AS JYDW,
       '''' AS BZ
       ,''1060000001'' AS PF_ID
  FROM TC_HP_PB_DOM_INFO A
  LEFT JOIN TC_TD_PB_DOM_INFO B
    ON A.PF_ID = B.PF_ID
   AND A.BIZ_DATE = B.BIZ_DATE
   AND A.SYMBOL_CODE = B.c_sec_code
   AND A.C_SEC_VAR_CODE = B.C_SEC_VAR_CODE
   left join V_PF_CPDM P
  on A.PF_ID=P.PF_ID
 WHERE A.C_DV_KM_CLS = ''KC_ZC''
   AND B.C_TD_TYPE = ''XHJY''
  -- AND A.PF_ID ${PFID}
   AND A.BIZ_DATE BETWEEN  ''${FENDDATE}''  AND  ''${FENDDATE}'' 
 GROUP BY A.PF_ID,
          A.SYMBOL_CODE,
          B.C_TD_TYPE,
          A.SEC_CODE_NAME,
          B.C_SEC_VAR_CODE,
          A.C_DTA_CODE,
          B.C_DT_CODE,
          MARKET_CODE,
          P.CPDM,
          A.C_SEC_VAR_CODE /*,B.C_EXE_FHYDW_I*/                                                            ', '0', null, 'A1038', null, 'zjh', '超级管理员', to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), null, to_date('13-01-2020 14:22:22', 'dd-mm-yyyy hh24:mi:ss'), 'A0000901', 'A0000202');

prompt Done.
